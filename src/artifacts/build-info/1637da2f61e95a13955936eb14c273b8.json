{
  "id": "1637da2f61e95a13955936eb14c273b8",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.13",
  "solcLongVersion": "0.8.13+commit.abaa5c0e",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/conduit/ConduitController.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.7;\r\n\r\n// prettier-ignore\r\nimport {\r\n\tConduitControllerInterface\r\n} from \"../interfaces/ConduitControllerInterface.sol\";\r\n\r\nimport { ConduitInterface } from \"../interfaces/ConduitInterface.sol\";\r\n\r\nimport { Conduit } from \"./Conduit.sol\";\r\n\r\n/**\r\n * @title ConduitController\r\n * @author 0age\r\n * @notice ConduitController enables deploying and managing new conduits, or\r\n *         contracts that allow registered callers (or open \"channels\") to\r\n *         transfer approved ERC20/721/1155 tokens on their behalf.\r\n */\r\ncontract ConduitController is ConduitControllerInterface {\r\n    // Register keys, owners, new potential owners, and channels by conduit.\r\n    mapping(address => ConduitProperties) internal _conduits;\r\n\r\n    // Set conduit creation code and runtime code hashes as immutable arguments.\r\n    bytes32 internal immutable _CONDUIT_CREATION_CODE_HASH;\r\n    bytes32 internal immutable _CONDUIT_RUNTIME_CODE_HASH;\r\n\r\n    /**\r\n     * @dev Initialize contract by deploying a conduit and setting the creation\r\n     *      code and runtime code hashes as immutable arguments.\r\n     */\r\n    constructor() {\r\n        // Derive the conduit creation code hash and set it as an immutable.\r\n        _CONDUIT_CREATION_CODE_HASH = keccak256(type(Conduit).creationCode);\r\n\r\n        // Deploy a conduit with the zero hash as the salt.\r\n        Conduit zeroConduit = new Conduit{ salt: bytes32(0) }();\r\n\r\n        // Retrieve the conduit runtime code hash and set it as an immutable.\r\n        _CONDUIT_RUNTIME_CODE_HASH = address(zeroConduit).codehash;\r\n    }\r\n\r\n    /**\r\n     * @notice Deploy a new conduit using a supplied conduit key and assigning\r\n     *         an initial owner for the deployed conduit. Note that the first\r\n     *         twenty bytes of the supplied conduit key must match the caller\r\n     *         and that a new conduit cannot be created if one has already been\r\n     *         deployed using the same conduit key.\r\n     *\r\n     * @param conduitKey   The conduit key used to deploy the conduit. Note that\r\n     *                     the first twenty bytes of the conduit key must match\r\n     *                     the caller of this contract.\r\n     * @param initialOwner The initial owner to set for the new conduit.\r\n     *\r\n     * @return conduit The address of the newly deployed conduit.\r\n     */\r\n    function createConduit(bytes32 conduitKey, address initialOwner)\r\n        external\r\n        override\r\n        returns (address conduit)\r\n    {\r\n        // If the first 20 bytes of the conduit key do not match the caller...\r\n        if (address(uint160(bytes20(conduitKey))) != msg.sender) {\r\n            // Revert with an error indicating that the creator is invalid.\r\n            revert InvalidCreator();\r\n        }\r\n\r\n        // Derive address from deployer, conduit key and creation code hash.\r\n        conduit = address(\r\n            uint160(\r\n                uint256(\r\n                    keccak256(\r\n                        abi.encodePacked(\r\n                            bytes1(0xff),\r\n                            address(this),\r\n                            conduitKey,\r\n                            _CONDUIT_CREATION_CODE_HASH\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n        );\r\n\r\n        // If derived conduit exists, as evidenced by comparing runtime code...\r\n        if (conduit.codehash == _CONDUIT_RUNTIME_CODE_HASH) {\r\n            // Revert with an error indicating that the conduit already exists.\r\n            revert ConduitAlreadyExists(conduit);\r\n        }\r\n\r\n        // Deploy the conduit via CREATE2 using the conduit key as the salt.\r\n        new Conduit{ salt: conduitKey }();\r\n\r\n        // Set the supplied initial owner as the owner of the conduit.\r\n        _conduits[conduit].owner = initialOwner;\r\n\r\n        // Set conduit key used to deploy the conduit to enable reverse lookup.\r\n        _conduits[conduit].key = conduitKey;\r\n\r\n        // Emit an event indicating that the conduit has been deployed.\r\n        emit NewConduit(conduit, conduitKey);\r\n\r\n        // Emit an event indicating that conduit ownership has been assigned.\r\n        emit OwnershipTransferred(conduit, address(0), initialOwner);\r\n    }\r\n\r\n    /**\r\n     * @notice Open or close a channel on a given conduit, thereby allowing the\r\n     *         specified account to execute transfers against that conduit.\r\n     *         Extreme care must be taken when updating channels, as malicious\r\n     *         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155\r\n     *         tokens where the token holder has granted the conduit approval.\r\n     *         Only the owner of the conduit in question may call this function.\r\n     *\r\n     * @param conduit The conduit for which to open or close the channel.\r\n     * @param channel The channel to open or close on the conduit.\r\n     * @param isOpen  A boolean indicating whether to open or close the channel.\r\n     */\r\n    function updateChannel(\r\n        address conduit,\r\n        address channel,\r\n        bool isOpen\r\n    ) external override {\r\n        // Ensure the caller is the current owner of the conduit in question.\r\n        _assertCallerIsConduitOwner(conduit);\r\n\r\n        // Call the conduit, updating the channel.\r\n        ConduitInterface(conduit).updateChannel(channel, isOpen);\r\n\r\n        // Retrieve storage region where channels for the conduit are tracked.\r\n        ConduitProperties storage conduitProperties = _conduits[conduit];\r\n\r\n        // Retrieve the index, if one currently exists, for the updated channel.\r\n        uint256 channelIndexPlusOne = (\r\n            conduitProperties.channelIndexesPlusOne[channel]\r\n        );\r\n\r\n        // Determine whether the updated channel is already tracked as open.\r\n        bool channelPreviouslyOpen = channelIndexPlusOne != 0;\r\n\r\n        // If the channel has been set to open and was previously closed...\r\n        if (isOpen && !channelPreviouslyOpen) {\r\n            // Add the channel to the channels array for the conduit.\r\n            conduitProperties.channels.push(channel);\r\n\r\n            // Add new open channel length to associated mapping as index + 1.\r\n            conduitProperties.channelIndexesPlusOne[channel] = (\r\n                conduitProperties.channels.length\r\n            );\r\n        } else if (!isOpen && channelPreviouslyOpen) {\r\n            // Set a previously open channel as closed via \"swap & pop\" method.\r\n            // Decrement located index to get the index of the closed channel.\r\n            uint256 removedChannelIndex = channelIndexPlusOne - 1;\r\n\r\n            // Use length of channels array to determine index of last channel.\r\n            uint256 finalChannelIndex = conduitProperties.channels.length - 1;\r\n\r\n            // If closed channel is not last channel in the channels array...\r\n            if (finalChannelIndex != removedChannelIndex) {\r\n                // Retrieve the final channel and place the value on the stack.\r\n                address finalChannel = (\r\n                    conduitProperties.channels[finalChannelIndex]\r\n                );\r\n\r\n                // Overwrite the removed channel using the final channel value.\r\n                conduitProperties.channels[removedChannelIndex] = finalChannel;\r\n\r\n                // Update final index in associated mapping to removed index.\r\n                conduitProperties.channelIndexesPlusOne[finalChannel] = (\r\n                    channelIndexPlusOne\r\n                );\r\n            }\r\n\r\n            // Remove the last channel from the channels array for the conduit.\r\n            conduitProperties.channels.pop();\r\n\r\n            // Remove the closed channel from associated mapping of indexes.\r\n            delete conduitProperties.channelIndexesPlusOne[channel];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Initiate conduit ownership transfer by assigning a new potential\r\n     *         owner for the given conduit. Once set, the new potential owner\r\n     *         may call `acceptOwnership` to claim ownership of the conduit.\r\n     *         Only the owner of the conduit in question may call this function.\r\n     *\r\n     * @param conduit The conduit for which to initiate ownership transfer.\r\n     */\r\n    function transferOwnership(address conduit, address newPotentialOwner)\r\n        external\r\n        override\r\n    {\r\n        // Ensure the caller is the current owner of the conduit in question.\r\n        _assertCallerIsConduitOwner(conduit);\r\n\r\n        // Ensure the new potential owner is not an invalid address.\r\n        if (newPotentialOwner == address(0)) {\r\n            revert NewPotentialOwnerIsZeroAddress(conduit);\r\n        }\r\n\r\n        // Emit an event indicating that the potential owner has been updated.\r\n        emit PotentialOwnerUpdated(conduit, newPotentialOwner);\r\n\r\n        // Set the new potential owner as the potential owner of the conduit.\r\n        _conduits[conduit].potentialOwner = newPotentialOwner;\r\n    }\r\n\r\n    /**\r\n     * @notice Clear the currently set potential owner, if any, from a conduit.\r\n     *         Only the owner of the conduit in question may call this function.\r\n     *\r\n     * @param conduit The conduit for which to cancel ownership transfer.\r\n     */\r\n    function cancelOwnershipTransfer(address conduit) external override {\r\n        // Ensure the caller is the current owner of the conduit in question.\r\n        _assertCallerIsConduitOwner(conduit);\r\n\r\n        // Emit an event indicating that the potential owner has been cleared.\r\n        emit PotentialOwnerUpdated(conduit, address(0));\r\n\r\n        // Clear the current new potential owner from the conduit.\r\n        delete _conduits[conduit].potentialOwner;\r\n    }\r\n\r\n    /**\r\n     * @notice Accept ownership of a supplied conduit. Only accounts that the\r\n     *         current owner has set as the new potential owner may call this\r\n     *         function.\r\n     *\r\n     * @param conduit The conduit for which to accept ownership.\r\n     */\r\n    function acceptOwnership(address conduit) external override {\r\n        // Ensure that the conduit in question exists.\r\n        _assertConduitExists(conduit);\r\n\r\n        // If caller does not match current potential owner of the conduit...\r\n        if (msg.sender != _conduits[conduit].potentialOwner) {\r\n            // Revert, indicating that caller is not current potential owner.\r\n            revert CallerIsNotNewPotentialOwner(conduit);\r\n        }\r\n\r\n        // Emit an event indicating that the potential owner has been cleared.\r\n        emit PotentialOwnerUpdated(conduit, address(0));\r\n\r\n        // Clear the current new potential owner from the conduit.\r\n        delete _conduits[conduit].potentialOwner;\r\n\r\n        // Emit an event indicating conduit ownership has been transferred.\r\n        emit OwnershipTransferred(\r\n            conduit,\r\n            _conduits[conduit].owner,\r\n            msg.sender\r\n        );\r\n\r\n        // Set the caller as the owner of the conduit.\r\n        _conduits[conduit].owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @notice Retrieve the current owner of a deployed conduit.\r\n     *\r\n     * @param conduit The conduit for which to retrieve the associated owner.\r\n     *\r\n     * @return owner The owner of the supplied conduit.\r\n     */\r\n    function ownerOf(address conduit)\r\n        external\r\n        view\r\n        override\r\n        returns (address owner)\r\n    {\r\n        // Ensure that the conduit in question exists.\r\n        _assertConduitExists(conduit);\r\n\r\n        // Retrieve the current owner of the conduit in question.\r\n        owner = _conduits[conduit].owner;\r\n    }\r\n\r\n    /**\r\n     * @notice Retrieve the conduit key for a deployed conduit via reverse\r\n     *         lookup.\r\n     *\r\n     * @param conduit The conduit for which to retrieve the associated conduit\r\n     *                key.\r\n     *\r\n     * @return conduitKey The conduit key used to deploy the supplied conduit.\r\n     */\r\n    function getKey(address conduit)\r\n        external\r\n        view\r\n        override\r\n        returns (bytes32 conduitKey)\r\n    {\r\n        // Attempt to retrieve a conduit key for the conduit in question.\r\n        conduitKey = _conduits[conduit].key;\r\n\r\n        // Revert if no conduit key was located.\r\n        if (conduitKey == bytes32(0)) {\r\n            revert NoConduit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Derive the conduit associated with a given conduit key and\r\n     *         determine whether that conduit exists (i.e. whether it has been\r\n     *         deployed).\r\n     *\r\n     * @param conduitKey The conduit key used to derive the conduit.\r\n     *\r\n     * @return conduit The derived address of the conduit.\r\n     * @return exists  A boolean indicating whether the derived conduit has been\r\n     *                 deployed or not.\r\n     */\r\n    function getConduit(bytes32 conduitKey)\r\n        external\r\n        view\r\n        override\r\n        returns (address conduit, bool exists)\r\n    {\r\n        // Derive address from deployer, conduit key and creation code hash.\r\n        conduit = address(\r\n            uint160(\r\n                uint256(\r\n                    keccak256(\r\n                        abi.encodePacked(\r\n                            bytes1(0xff),\r\n                            address(this),\r\n                            conduitKey,\r\n                            _CONDUIT_CREATION_CODE_HASH\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n        );\r\n\r\n        // Determine whether conduit exists by retrieving its runtime code.\r\n        exists = (conduit.codehash == _CONDUIT_RUNTIME_CODE_HASH);\r\n    }\r\n\r\n    /**\r\n     * @notice Retrieve the potential owner, if any, for a given conduit. The\r\n     *         current owner may set a new potential owner via\r\n     *         `transferOwnership` and that owner may then accept ownership of\r\n     *         the conduit in question via `acceptOwnership`.\r\n     *\r\n     * @param conduit The conduit for which to retrieve the potential owner.\r\n     *\r\n     * @return potentialOwner The potential owner, if any, for the conduit.\r\n     */\r\n    function getPotentialOwner(address conduit)\r\n        external\r\n        view\r\n        override\r\n        returns (address potentialOwner)\r\n    {\r\n        // Ensure that the conduit in question exists.\r\n        _assertConduitExists(conduit);\r\n\r\n        // Retrieve the current potential owner of the conduit in question.\r\n        potentialOwner = _conduits[conduit].potentialOwner;\r\n    }\r\n\r\n    /**\r\n     * @notice Retrieve the status (either open or closed) of a given channel on\r\n     *         a conduit.\r\n     *\r\n     * @param conduit The conduit for which to retrieve the channel status.\r\n     * @param channel The channel for which to retrieve the status.\r\n     *\r\n     * @return isOpen The status of the channel on the given conduit.\r\n     */\r\n    function getChannelStatus(address conduit, address channel)\r\n        external\r\n        view\r\n        override\r\n        returns (bool isOpen)\r\n    {\r\n        // Ensure that the conduit in question exists.\r\n        _assertConduitExists(conduit);\r\n\r\n        // Retrieve the current channel status for the conduit in question.\r\n        isOpen = _conduits[conduit].channelIndexesPlusOne[channel] != 0;\r\n    }\r\n\r\n    /**\r\n     * @notice Retrieve the total number of open channels for a given conduit.\r\n     *\r\n     * @param conduit The conduit for which to retrieve the total channel count.\r\n     *\r\n     * @return totalChannels The total number of open channels for the conduit.\r\n     */\r\n    function getTotalChannels(address conduit)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256 totalChannels)\r\n    {\r\n        // Ensure that the conduit in question exists.\r\n        _assertConduitExists(conduit);\r\n\r\n        // Retrieve the total open channel count for the conduit in question.\r\n        totalChannels = _conduits[conduit].channels.length;\r\n    }\r\n\r\n    /**\r\n     * @notice Retrieve an open channel at a specific index for a given conduit.\r\n     *         Note that the index of a channel can change as a result of other\r\n     *         channels being closed on the conduit.\r\n     *\r\n     * @param conduit      The conduit for which to retrieve the open channel.\r\n     * @param channelIndex The index of the channel in question.\r\n     *\r\n     * @return channel The open channel, if any, at the specified channel index.\r\n     */\r\n    function getChannel(address conduit, uint256 channelIndex)\r\n        external\r\n        view\r\n        override\r\n        returns (address channel)\r\n    {\r\n        // Ensure that the conduit in question exists.\r\n        _assertConduitExists(conduit);\r\n\r\n        // Retrieve the total open channel count for the conduit in question.\r\n        uint256 totalChannels = _conduits[conduit].channels.length;\r\n\r\n        // Ensure that the supplied index is within range.\r\n        if (channelIndex >= totalChannels) {\r\n            revert ChannelOutOfRange(conduit);\r\n        }\r\n\r\n        // Retrieve the channel at the given index.\r\n        channel = _conduits[conduit].channels[channelIndex];\r\n    }\r\n\r\n    /**\r\n     * @notice Retrieve all open channels for a given conduit. Note that calling\r\n     *         this function for a conduit with many channels will revert with\r\n     *         an out-of-gas error.\r\n     *\r\n     * @param conduit The conduit for which to retrieve open channels.\r\n     *\r\n     * @return channels An array of open channels on the given conduit.\r\n     */\r\n    function getChannels(address conduit)\r\n        external\r\n        view\r\n        override\r\n        returns (address[] memory channels)\r\n    {\r\n        // Ensure that the conduit in question exists.\r\n        _assertConduitExists(conduit);\r\n\r\n        // Retrieve all of the open channels on the conduit in question.\r\n        channels = _conduits[conduit].channels;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieve the conduit creation code and runtime code hashes.\r\n     */\r\n    function getConduitCodeHashes()\r\n        external\r\n        view\r\n        override\r\n        returns (bytes32 creationCodeHash, bytes32 runtimeCodeHash)\r\n    {\r\n        // Retrieve the conduit creation code hash from runtime.\r\n        creationCodeHash = _CONDUIT_CREATION_CODE_HASH;\r\n\r\n        // Retrieve the conduit runtime code hash from runtime.\r\n        runtimeCodeHash = _CONDUIT_RUNTIME_CODE_HASH;\r\n    }\r\n\r\n    /**\r\n     * @dev Internal view function to revert if the caller is not the owner of a\r\n     *      given conduit.\r\n     *\r\n     * @param conduit The conduit for which to assert ownership.\r\n     */\r\n    function _assertCallerIsConduitOwner(address conduit) internal view {\r\n        // Ensure that the conduit in question exists.\r\n        _assertConduitExists(conduit);\r\n\r\n        // If the caller does not match the current owner of the conduit...\r\n        if (msg.sender != _conduits[conduit].owner) {\r\n            // Revert, indicating that the caller is not the owner.\r\n            revert CallerIsNotOwner(conduit);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Internal view function to revert if a given conduit does not exist.\r\n     *\r\n     * @param conduit The conduit for which to assert existence.\r\n     */\r\n    function _assertConduitExists(address conduit) internal view {\r\n        // Attempt to retrieve a conduit key for the conduit in question.\r\n        if (_conduits[conduit].key == bytes32(0)) {\r\n            // Revert if no conduit key was located.\r\n            revert NoConduit();\r\n        }\r\n    }\r\n}\r\n"
      },
      "contracts/interfaces/ConduitControllerInterface.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.7;\r\n\r\n/**\r\n * @title ConduitControllerInterface\r\n * @author 0age\r\n * @notice ConduitControllerInterface contains all external function interfaces,\r\n *         structs, events, and errors for the conduit controller.\r\n */\r\ninterface ConduitControllerInterface {\r\n    /**\r\n     * @dev Track the conduit key, current owner, new potential owner, and open\r\n     *      channels for each deployed conduit.\r\n     */\r\n    struct ConduitProperties {\r\n        bytes32 key;\r\n        address owner;\r\n        address potentialOwner;\r\n        address[] channels;\r\n        mapping(address => uint256) channelIndexesPlusOne;\r\n    }\r\n\r\n    /**\r\n     * @dev Emit an event whenever a new conduit is created.\r\n     *\r\n     * @param conduit    The newly created conduit.\r\n     * @param conduitKey The conduit key used to create the new conduit.\r\n     */\r\n    event NewConduit(address conduit, bytes32 conduitKey);\r\n\r\n    /**\r\n     * @dev Emit an event whenever conduit ownership is transferred.\r\n     *\r\n     * @param conduit       The conduit for which ownership has been\r\n     *                      transferred.\r\n     * @param previousOwner The previous owner of the conduit.\r\n     * @param newOwner      The new owner of the conduit.\r\n     */\r\n    event OwnershipTransferred(\r\n        address indexed conduit,\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Emit an event whenever a conduit owner registers a new potential\r\n     *      owner for that conduit.\r\n     *\r\n     * @param conduit           The conduit for which ownership may now be\r\n     *                          transferred.\r\n     * @param newPotentialOwner The new potential owner of the conduit.\r\n     */\r\n    event PotentialOwnerUpdated(\r\n        address indexed conduit,\r\n        address indexed newPotentialOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Revert with an error when attempting to create a new conduit using a\r\n     *      conduit key where the last twenty bytes of the key do not match the\r\n     *      address of the caller.\r\n     */\r\n    error InvalidCreator();\r\n\r\n    /**\r\n     * @dev Revert with an error when attempting to interact with a conduit that\r\n     *      does not yet exist.\r\n     */\r\n    error NoConduit();\r\n\r\n    /**\r\n     * @dev Revert with an error when attempting to create a conduit that\r\n     *      already exists.\r\n     */\r\n    error ConduitAlreadyExists(address conduit);\r\n\r\n    /**\r\n     * @dev Revert with an error when attempting to update channels or transfer\r\n     *      ownership of a conduit when the caller is not the owner of the\r\n     *      conduit in question.\r\n     */\r\n    error CallerIsNotOwner(address conduit);\r\n\r\n    /**\r\n     * @dev Revert with an error when attempting to register a new potential\r\n     *      owner and supplying the null address.\r\n     */\r\n    error NewPotentialOwnerIsZeroAddress(address conduit);\r\n\r\n    /**\r\n     * @dev Revert with an error when attempting to claim ownership of a conduit\r\n     *      with a caller that is not the current potential owner for the\r\n     *      conduit in question.\r\n     */\r\n    error CallerIsNotNewPotentialOwner(address conduit);\r\n\r\n    /**\r\n     * @dev Revert with an error when attempting to retrieve a channel using an\r\n     *      index that is out of range.\r\n     */\r\n    error ChannelOutOfRange(address conduit);\r\n\r\n    /**\r\n     * @notice Deploy a new conduit using a supplied conduit key and assigning\r\n     *         an initial owner for the deployed conduit. Note that the last\r\n     *         twenty bytes of the supplied conduit key must match the caller\r\n     *         and that a new conduit cannot be created if one has already been\r\n     *         deployed using the same conduit key.\r\n     *\r\n     * @param conduitKey   The conduit key used to deploy the conduit. Note that\r\n     *                     the last twenty bytes of the conduit key must match\r\n     *                     the caller of this contract.\r\n     * @param initialOwner The initial owner to set for the new conduit.\r\n     *\r\n     * @return conduit The address of the newly deployed conduit.\r\n     */\r\n    function createConduit(bytes32 conduitKey, address initialOwner)\r\n        external\r\n        returns (address conduit);\r\n\r\n    /**\r\n     * @notice Open or close a channel on a given conduit, thereby allowing the\r\n     *         specified account to execute transfers against that conduit.\r\n     *         Extreme care must be taken when updating channels, as malicious\r\n     *         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155\r\n     *         tokens where the token holder has granted the conduit approval.\r\n     *         Only the owner of the conduit in question may call this function.\r\n     *\r\n     * @param conduit The conduit for which to open or close the channel.\r\n     * @param channel The channel to open or close on the conduit.\r\n     * @param isOpen  A boolean indicating whether to open or close the channel.\r\n     */\r\n    function updateChannel(\r\n        address conduit,\r\n        address channel,\r\n        bool isOpen\r\n    ) external;\r\n\r\n    /**\r\n     * @notice Initiate conduit ownership transfer by assigning a new potential\r\n     *         owner for the given conduit. Once set, the new potential owner\r\n     *         may call `acceptOwnership` to claim ownership of the conduit.\r\n     *         Only the owner of the conduit in question may call this function.\r\n     *\r\n     * @param conduit The conduit for which to initiate ownership transfer.\r\n     */\r\n    function transferOwnership(address conduit, address newPotentialOwner)\r\n        external;\r\n\r\n    /**\r\n     * @notice Clear the currently set potential owner, if any, from a conduit.\r\n     *         Only the owner of the conduit in question may call this function.\r\n     *\r\n     * @param conduit The conduit for which to cancel ownership transfer.\r\n     */\r\n    function cancelOwnershipTransfer(address conduit) external;\r\n\r\n    /**\r\n     * @notice Accept ownership of a supplied conduit. Only accounts that the\r\n     *         current owner has set as the new potential owner may call this\r\n     *         function.\r\n     *\r\n     * @param conduit The conduit for which to accept ownership.\r\n     */\r\n    function acceptOwnership(address conduit) external;\r\n\r\n    /**\r\n     * @notice Retrieve the current owner of a deployed conduit.\r\n     *\r\n     * @param conduit The conduit for which to retrieve the associated owner.\r\n     *\r\n     * @return owner The owner of the supplied conduit.\r\n     */\r\n    function ownerOf(address conduit) external view returns (address owner);\r\n\r\n    /**\r\n     * @notice Retrieve the conduit key for a deployed conduit via reverse\r\n     *         lookup.\r\n     *\r\n     * @param conduit The conduit for which to retrieve the associated conduit\r\n     *                key.\r\n     *\r\n     * @return conduitKey The conduit key used to deploy the supplied conduit.\r\n     */\r\n    function getKey(address conduit) external view returns (bytes32 conduitKey);\r\n\r\n    /**\r\n     * @notice Derive the conduit associated with a given conduit key and\r\n     *         determine whether that conduit exists (i.e. whether it has been\r\n     *         deployed).\r\n     *\r\n     * @param conduitKey The conduit key used to derive the conduit.\r\n     *\r\n     * @return conduit The derived address of the conduit.\r\n     * @return exists  A boolean indicating whether the derived conduit has been\r\n     *                 deployed or not.\r\n     */\r\n    function getConduit(bytes32 conduitKey)\r\n        external\r\n        view\r\n        returns (address conduit, bool exists);\r\n\r\n    /**\r\n     * @notice Retrieve the potential owner, if any, for a given conduit. The\r\n     *         current owner may set a new potential owner via\r\n     *         `transferOwnership` and that owner may then accept ownership of\r\n     *         the conduit in question via `acceptOwnership`.\r\n     *\r\n     * @param conduit The conduit for which to retrieve the potential owner.\r\n     *\r\n     * @return potentialOwner The potential owner, if any, for the conduit.\r\n     */\r\n    function getPotentialOwner(address conduit)\r\n        external\r\n        view\r\n        returns (address potentialOwner);\r\n\r\n    /**\r\n     * @notice Retrieve the status (either open or closed) of a given channel on\r\n     *         a conduit.\r\n     *\r\n     * @param conduit The conduit for which to retrieve the channel status.\r\n     * @param channel The channel for which to retrieve the status.\r\n     *\r\n     * @return isOpen The status of the channel on the given conduit.\r\n     */\r\n    function getChannelStatus(address conduit, address channel)\r\n        external\r\n        view\r\n        returns (bool isOpen);\r\n\r\n    /**\r\n     * @notice Retrieve the total number of open channels for a given conduit.\r\n     *\r\n     * @param conduit The conduit for which to retrieve the total channel count.\r\n     *\r\n     * @return totalChannels The total number of open channels for the conduit.\r\n     */\r\n    function getTotalChannels(address conduit)\r\n        external\r\n        view\r\n        returns (uint256 totalChannels);\r\n\r\n    /**\r\n     * @notice Retrieve an open channel at a specific index for a given conduit.\r\n     *         Note that the index of a channel can change as a result of other\r\n     *         channels being closed on the conduit.\r\n     *\r\n     * @param conduit      The conduit for which to retrieve the open channel.\r\n     * @param channelIndex The index of the channel in question.\r\n     *\r\n     * @return channel The open channel, if any, at the specified channel index.\r\n     */\r\n    function getChannel(address conduit, uint256 channelIndex)\r\n        external\r\n        view\r\n        returns (address channel);\r\n\r\n    /**\r\n     * @notice Retrieve all open channels for a given conduit. Note that calling\r\n     *         this function for a conduit with many channels will revert with\r\n     *         an out-of-gas error.\r\n     *\r\n     * @param conduit The conduit for which to retrieve open channels.\r\n     *\r\n     * @return channels An array of open channels on the given conduit.\r\n     */\r\n    function getChannels(address conduit)\r\n        external\r\n        view\r\n        returns (address[] memory channels);\r\n\r\n    /**\r\n     * @dev Retrieve the conduit creation code and runtime code hashes.\r\n     */\r\n    function getConduitCodeHashes()\r\n        external\r\n        view\r\n        returns (bytes32 creationCodeHash, bytes32 runtimeCodeHash);\r\n}\r\n"
      },
      "contracts/interfaces/ConduitInterface.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.7;\r\n\r\n// prettier-ignore\r\nimport {\r\n    ConduitTransfer,\r\n    ConduitBatch1155Transfer\r\n} from \"../conduit/lib/ConduitStructs.sol\";\r\n\r\n/**\r\n * @title ConduitInterface\r\n * @author 0age\r\n * @notice ConduitInterface contains all external function interfaces, events,\r\n *         and errors for conduit contracts.\r\n */\r\ninterface ConduitInterface {\r\n    /**\r\n     * @dev Revert with an error when attempting to execute transfers using a\r\n     *      caller that does not have an open channel.\r\n     */\r\n    error ChannelClosed();\r\n\r\n    /**\r\n     * @dev Revert with an error when attempting to execute a transfer for an\r\n     *      item that does not have an ERC20/721/1155 item type.\r\n     */\r\n    error InvalidItemType();\r\n\r\n    /**\r\n     * @dev Revert with an error when attempting to update the status of a\r\n     *      channel from a caller that is not the conduit controller.\r\n     */\r\n    error InvalidController();\r\n\r\n    /**\r\n     * @dev Revert with an error when attempting to execute an 1155 batch\r\n     *      transfer using calldata not produced by default ABI encoding or with\r\n     *      different lengths for ids and amounts arrays.\r\n     */\r\n    error Invalid1155BatchTransferEncoding();\r\n\r\n    /**\r\n     * @dev Emit an event whenever a channel is opened or closed.\r\n     *\r\n     * @param channel The channel that has been updated.\r\n     * @param open    A boolean indicating whether the conduit is open or not.\r\n     */\r\n    event ChannelUpdated(address channel, bool open);\r\n\r\n    /**\r\n     * @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\r\n     *         with an open channel can call this function.\r\n     *\r\n     * @param transfers The ERC20/721/1155 transfers to perform.\r\n     *\r\n     * @return magicValue A magic value indicating that the transfers were\r\n     *                    performed successfully.\r\n     */\r\n    function execute(ConduitTransfer[] calldata transfers)\r\n        external\r\n        returns (bytes4 magicValue);\r\n\r\n    /**\r\n     * @notice Execute a sequence of batch 1155 transfers. Only a caller with an\r\n     *         open channel can call this function.\r\n     *\r\n     * @param batch1155Transfers The 1155 batch transfers to perform.\r\n     *\r\n     * @return magicValue A magic value indicating that the transfers were\r\n     *                    performed successfully.\r\n     */\r\n    function executeBatch1155(\r\n        ConduitBatch1155Transfer[] calldata batch1155Transfers\r\n    ) external returns (bytes4 magicValue);\r\n\r\n    /**\r\n     * @notice Execute a sequence of transfers, both single and batch 1155. Only\r\n     *         a caller with an open channel can call this function.\r\n     *\r\n     * @param standardTransfers  The ERC20/721/1155 transfers to perform.\r\n     * @param batch1155Transfers The 1155 batch transfers to perform.\r\n     *\r\n     * @return magicValue A magic value indicating that the transfers were\r\n     *                    performed successfully.\r\n     */\r\n    function executeWithBatch1155(\r\n        ConduitTransfer[] calldata standardTransfers,\r\n        ConduitBatch1155Transfer[] calldata batch1155Transfers\r\n    ) external returns (bytes4 magicValue);\r\n\r\n    /**\r\n     * @notice Open or close a given channel. Only callable by the controller.\r\n     *\r\n     * @param channel The channel to open or close.\r\n     * @param isOpen  The status of the channel (either open or closed).\r\n     */\r\n    function updateChannel(address channel, bool isOpen) external;\r\n}\r\n"
      },
      "contracts/conduit/Conduit.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.7;\r\n\r\nimport { ConduitInterface } from \"../interfaces/ConduitInterface.sol\";\r\n\r\nimport { ConduitItemType } from \"./lib/ConduitEnums.sol\";\r\n\r\nimport { TokenTransferrer } from \"../lib/TokenTransferrer.sol\";\r\n\r\n// prettier-ignore\r\nimport {\r\n    ConduitTransfer,\r\n    ConduitBatch1155Transfer\r\n} from \"./lib/ConduitStructs.sol\";\r\n\r\n/**\r\n * @title Conduit\r\n * @author 0age\r\n * @notice This contract serves as an originator for \"proxied\" transfers. Each\r\n *         conduit is deployed and controlled by a \"conduit controller\" that can\r\n *         add and remove \"channels\" or contracts that can instruct the conduit\r\n *         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each\r\n *         conduit has an owner that can arbitrarily add or remove channels, and\r\n *         a malicious or negligent owner can add a channel that allows for any\r\n *         approved ERC20/721/1155 tokens to be taken immediately — be extremely\r\n *         cautious with what conduits you give token approvals to!*\r\n */\r\ncontract Conduit is ConduitInterface, TokenTransferrer {\r\n    // Set deployer as an immutable controller that can update channel statuses.\r\n    address private immutable _controller;\r\n\r\n    // Track the status of each channel.\r\n    mapping(address => bool) private _channels;\r\n\r\n    /**\r\n     * @notice In the constructor, set the deployer as the controller.\r\n     */\r\n    constructor() {\r\n        // Set the deployer as the controller.\r\n        _controller = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\r\n     *         with an open channel can call this function.\r\n     *\r\n     * @param transfers The ERC20/721/1155 transfers to perform.\r\n     *\r\n     * @return magicValue A magic value indicating that the transfers were\r\n     *                    performed successfully.\r\n     */\r\n    function execute(ConduitTransfer[] calldata transfers)\r\n        external\r\n        override\r\n        returns (bytes4 magicValue)\r\n    {\r\n        // Ensure that the caller has an open channel.\r\n        if (!_channels[msg.sender]) {\r\n            revert ChannelClosed();\r\n        }\r\n\r\n        // Retrieve the total number of transfers and place on the stack.\r\n        uint256 totalStandardTransfers = transfers.length;\r\n\r\n        // Iterate over each transfer.\r\n        for (uint256 i = 0; i < totalStandardTransfers; ) {\r\n            // Retrieve the transfer in question.\r\n            ConduitTransfer calldata standardTransfer = transfers[i];\r\n\r\n            // Perform the transfer.\r\n            _transfer(standardTransfer);\r\n\r\n            // Skip overflow check as for loop is indexed starting at zero.\r\n            unchecked {\r\n                ++i;\r\n            }\r\n        }\r\n\r\n        // Return a magic value indicating that the transfers were performed.\r\n        magicValue = this.execute.selector;\r\n    }\r\n\r\n    /**\r\n     * @notice Execute a sequence of batch 1155 transfers. Only a caller with an\r\n     *         open channel can call this function.\r\n     *\r\n     * @param batchTransfers The 1155 batch transfers to perform.\r\n     *\r\n     * @return magicValue A magic value indicating that the transfers were\r\n     *                    performed successfully.\r\n     */\r\n    function executeBatch1155(\r\n        ConduitBatch1155Transfer[] calldata batchTransfers\r\n    ) external override returns (bytes4 magicValue) {\r\n        // Ensure that the caller has an open channel.\r\n        if (!_channels[msg.sender]) {\r\n            revert ChannelClosed();\r\n        }\r\n\r\n        // Perform 1155 batch transfers.\r\n        _performERC1155BatchTransfers(batchTransfers);\r\n\r\n        // Return a magic value indicating that the transfers were performed.\r\n        magicValue = this.executeBatch1155.selector;\r\n    }\r\n\r\n    /**\r\n     * @notice Execute a sequence of transfers, both single and batch 1155. Only\r\n     *         a caller with an open channel can call this function.\r\n     *\r\n     * @param standardTransfers The ERC20/721/1155 transfers to perform.\r\n     * @param batchTransfers    The 1155 batch transfers to perform.\r\n     *\r\n     * @return magicValue A magic value indicating that the transfers were\r\n     *                    performed successfully.\r\n     */\r\n    function executeWithBatch1155(\r\n        ConduitTransfer[] calldata standardTransfers,\r\n        ConduitBatch1155Transfer[] calldata batchTransfers\r\n    ) external override returns (bytes4 magicValue) {\r\n        // Ensure that the caller has an open channel.\r\n        if (!_channels[msg.sender]) {\r\n            revert ChannelClosed();\r\n        }\r\n\r\n        // Retrieve the total number of transfers and place on the stack.\r\n        uint256 totalStandardTransfers = standardTransfers.length;\r\n\r\n        // Iterate over each standard transfer.\r\n        for (uint256 i = 0; i < totalStandardTransfers; ) {\r\n            // Retrieve the transfer in question.\r\n            ConduitTransfer calldata standardTransfer = standardTransfers[i];\r\n\r\n            // Perform the transfer.\r\n            _transfer(standardTransfer);\r\n\r\n            // Skip overflow check as for loop is indexed starting at zero.\r\n            unchecked {\r\n                ++i;\r\n            }\r\n        }\r\n\r\n        // Perform 1155 batch transfers.\r\n        _performERC1155BatchTransfers(batchTransfers);\r\n\r\n        // Return a magic value indicating that the transfers were performed.\r\n        magicValue = this.executeWithBatch1155.selector;\r\n    }\r\n\r\n    /**\r\n     * @notice Open or close a given channel. Only callable by the controller.\r\n     *\r\n     * @param channel The channel to open or close.\r\n     * @param isOpen  The status of the channel (either open or closed).\r\n     */\r\n    function updateChannel(address channel, bool isOpen) external override {\r\n        // Ensure that the caller is the controller of this contract.\r\n        if (msg.sender != _controller) {\r\n            revert InvalidController();\r\n        }\r\n\r\n        // Update the status of the channel.\r\n        _channels[channel] = isOpen;\r\n\r\n        // Emit a corresponding event.\r\n        emit ChannelUpdated(channel, isOpen);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to transfer a given ERC20/721/1155 item.\r\n     *\r\n     * @param item The ERC20/721/1155 item to transfer.\r\n     */\r\n    function _transfer(ConduitTransfer calldata item) internal {\r\n        // If the item type indicates Ether or a native token...\r\n        if (item.itemType == ConduitItemType.ERC20) {\r\n            // Transfer ERC20 token.\r\n            _performERC20Transfer(item.token, item.from, item.to, item.amount);\r\n        } else if (item.itemType == ConduitItemType.ERC721) {\r\n            // Ensure that exactly one 721 item is being transferred.\r\n            if (item.amount != 1) {\r\n                revert InvalidERC721TransferAmount();\r\n            }\r\n\r\n            // Transfer ERC721 token.\r\n            _performERC721Transfer(\r\n                item.token,\r\n                item.from,\r\n                item.to,\r\n                item.identifier\r\n            );\r\n        } else if (item.itemType == ConduitItemType.ERC1155) {\r\n            // Transfer ERC1155 token.\r\n            _performERC1155Transfer(\r\n                item.token,\r\n                item.from,\r\n                item.to,\r\n                item.identifier,\r\n                item.amount\r\n            );\r\n        } else {\r\n            // Throw with an error.\r\n            revert InvalidItemType();\r\n        }\r\n    }\r\n}\r\n"
      },
      "contracts/conduit/lib/ConduitStructs.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.7;\r\n\r\nimport { ConduitItemType } from \"./ConduitEnums.sol\";\r\n\r\nstruct ConduitTransfer {\r\n    ConduitItemType itemType;\r\n    address token;\r\n    address from;\r\n    address to;\r\n    uint256 identifier;\r\n    uint256 amount;\r\n}\r\n\r\nstruct ConduitBatch1155Transfer {\r\n    address token;\r\n    address from;\r\n    address to;\r\n    uint256[] ids;\r\n    uint256[] amounts;\r\n}\r\n"
      },
      "contracts/conduit/lib/ConduitEnums.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.7;\r\n\r\nenum ConduitItemType {\r\n    NATIVE, // unused\r\n    ERC20,\r\n    ERC721,\r\n    ERC1155\r\n}\r\n"
      },
      "contracts/lib/TokenTransferrer.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.7;\r\n\r\nimport \"./TokenTransferrerConstants.sol\";\r\n\r\n// prettier-ignore\r\nimport {\r\n    TokenTransferrerErrors\r\n} from \"../interfaces/TokenTransferrerErrors.sol\";\r\n\r\nimport { ConduitBatch1155Transfer } from \"../conduit/lib/ConduitStructs.sol\";\r\n\r\ncontract TokenTransferrer is TokenTransferrerErrors {\r\n    /**\r\n     * @dev Internal function to transfer ERC20 tokens from a given originator\r\n     *      to a given recipient. Sufficient approvals must be set on the\r\n     *      contract performing the transfer.\r\n     *\r\n     * @param token      The ERC20 token to transfer.\r\n     * @param from       The originator of the transfer.\r\n     * @param to         The recipient of the transfer.\r\n     * @param amount     The amount to transfer.\r\n     */\r\n    function _performERC20Transfer(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal {\r\n        // Utilize assembly to perform an optimized ERC20 token transfer.\r\n        assembly {\r\n            // Write calldata to the free memory pointer, but restore it later.\r\n            let memPointer := mload(FreeMemoryPointerSlot)\r\n\r\n            // Write calldata into memory, starting with function selector.\r\n            mstore(ERC20_transferFrom_sig_ptr, ERC20_transferFrom_signature)\r\n            mstore(ERC20_transferFrom_from_ptr, from)\r\n            mstore(ERC20_transferFrom_to_ptr, to)\r\n            mstore(ERC20_transferFrom_amount_ptr, amount)\r\n\r\n            // Make call & copy up to 32 bytes of return data to scratch space.\r\n            let callStatus := call(\r\n                gas(),\r\n                token,\r\n                0,\r\n                ERC20_transferFrom_sig_ptr,\r\n                ERC20_transferFrom_length,\r\n                0,\r\n                OneWord\r\n            )\r\n\r\n            // Determine whether transfer was successful using status & result.\r\n            let success := and(\r\n                // Set success to whether the call reverted, if not check it\r\n                // either returned exactly 1 (can't just be non-zero data), or\r\n                // had no return data.\r\n                or(\r\n                    and(eq(mload(0), 1), gt(returndatasize(), 31)),\r\n                    iszero(returndatasize())\r\n                ),\r\n                callStatus\r\n            )\r\n\r\n            // If the transfer failed or it returned nothing:\r\n            // Group these because they should be uncommon.\r\n            // Equivalent to `or(iszero(success), iszero(returndatasize()))`\r\n            // but after it's inverted for JUMPI this expression is cheaper.\r\n            if iszero(and(success, iszero(iszero(returndatasize())))) {\r\n                // If the token has no code or the transfer failed:\r\n                // Equivalent to `or(iszero(success), iszero(extcodesize(token)))`\r\n                // but after it's inverted for JUMPI this expression is cheaper.\r\n                if iszero(and(iszero(iszero(extcodesize(token))), success)) {\r\n                    // If the transfer failed:\r\n                    if iszero(success) {\r\n                        // If it was due to a revert:\r\n                        if iszero(callStatus) {\r\n                            // If it returned a message, bubble it up as long as\r\n                            // sufficient gas remains to do so:\r\n                            if returndatasize() {\r\n                                // Ensure that sufficient gas is available to\r\n                                // copy returndata while expanding memory where\r\n                                // necessary. Start by computing the word size\r\n                                // of returndata and allocated memory.\r\n                                let returnDataWords := div(\r\n                                    returndatasize(),\r\n                                    OneWord\r\n                                )\r\n\r\n                                // Note: use the free memory pointer in place of\r\n                                // msize() to work around a Yul warning that\r\n                                // prevents accessing msize directly when the IR\r\n                                // pipeline is activated.\r\n                                let msizeWords := div(memPointer, OneWord)\r\n\r\n                                // Next, compute the cost of the returndatacopy.\r\n                                let cost := mul(CostPerWord, returnDataWords)\r\n\r\n                                // Then, compute cost of new memory allocation.\r\n                                if gt(returnDataWords, msizeWords) {\r\n                                    cost := add(\r\n                                        cost,\r\n                                        add(\r\n                                            mul(\r\n                                                sub(\r\n                                                    returnDataWords,\r\n                                                    msizeWords\r\n                                                ),\r\n                                                CostPerWord\r\n                                            ),\r\n                                            div(\r\n                                                sub(\r\n                                                    mul(\r\n                                                        returnDataWords,\r\n                                                        returnDataWords\r\n                                                    ),\r\n                                                    mul(msizeWords, msizeWords)\r\n                                                ),\r\n                                                MemoryExpansionCoefficient\r\n                                            )\r\n                                        )\r\n                                    )\r\n                                }\r\n\r\n                                // Finally, add a small constant and compare to\r\n                                // gas remaining; bubble up the revert data if\r\n                                // enough gas is still available.\r\n                                if lt(add(cost, ExtraGasBuffer), gas()) {\r\n                                    // Copy returndata to memory; overwrite\r\n                                    // existing memory.\r\n                                    returndatacopy(0, 0, returndatasize())\r\n\r\n                                    // Revert, specifying memory region with\r\n                                    // copied returndata.\r\n                                    revert(0, returndatasize())\r\n                                }\r\n                            }\r\n\r\n                            // Otherwise revert with a generic error message.\r\n                            mstore(\r\n                                TokenTransferGenericFailure_error_sig_ptr,\r\n                                TokenTransferGenericFailure_error_signature\r\n                            )\r\n                            mstore(\r\n                                TokenTransferGenericFailure_error_token_ptr,\r\n                                token\r\n                            )\r\n                            mstore(\r\n                                TokenTransferGenericFailure_error_from_ptr,\r\n                                from\r\n                            )\r\n                            mstore(TokenTransferGenericFailure_error_to_ptr, to)\r\n                            mstore(TokenTransferGenericFailure_error_id_ptr, 0)\r\n                            mstore(\r\n                                TokenTransferGenericFailure_error_amount_ptr,\r\n                                amount\r\n                            )\r\n                            revert(\r\n                                TokenTransferGenericFailure_error_sig_ptr,\r\n                                TokenTransferGenericFailure_error_length\r\n                            )\r\n                        }\r\n\r\n                        // Otherwise revert with a message about the token\r\n                        // returning false.\r\n                        mstore(\r\n                            BadReturnValueFromERC20OnTransfer_error_sig_ptr,\r\n                            BadReturnValueFromERC20OnTransfer_error_signature\r\n                        )\r\n                        mstore(\r\n                            BadReturnValueFromERC20OnTransfer_error_token_ptr,\r\n                            token\r\n                        )\r\n                        mstore(\r\n                            BadReturnValueFromERC20OnTransfer_error_from_ptr,\r\n                            from\r\n                        )\r\n                        mstore(\r\n                            BadReturnValueFromERC20OnTransfer_error_to_ptr,\r\n                            to\r\n                        )\r\n                        mstore(\r\n                            BadReturnValueFromERC20OnTransfer_error_amount_ptr,\r\n                            amount\r\n                        )\r\n                        revert(\r\n                            BadReturnValueFromERC20OnTransfer_error_sig_ptr,\r\n                            BadReturnValueFromERC20OnTransfer_error_length\r\n                        )\r\n                    }\r\n\r\n                    // Otherwise revert with error about token not having code:\r\n                    mstore(NoContract_error_sig_ptr, NoContract_error_signature)\r\n                    mstore(NoContract_error_token_ptr, token)\r\n                    revert(NoContract_error_sig_ptr, NoContract_error_length)\r\n                }\r\n\r\n                // Otherwise the token just returned nothing but otherwise\r\n                // succeeded; no need to optimize for this as it's not\r\n                // technically ERC20 compliant.\r\n            }\r\n\r\n            // Restore the original free memory pointer.\r\n            mstore(FreeMemoryPointerSlot, memPointer)\r\n\r\n            // Restore the zero slot to zero.\r\n            mstore(ZeroSlot, 0)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to transfer an ERC721 token from a given\r\n     *      originator to a given recipient. Sufficient approvals must be set on\r\n     *      the contract performing the transfer.\r\n     *\r\n     * @param token      The ERC721 token to transfer.\r\n     * @param from       The originator of the transfer.\r\n     * @param to         The recipient of the transfer.\r\n     * @param identifier The tokenId to transfer.\r\n     */\r\n    function _performERC721Transfer(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 identifier\r\n    ) internal {\r\n        // Utilize assembly to perform an optimized ERC721 token transfer.\r\n        assembly {\r\n            // If the token has no code, revert.\r\n            if iszero(extcodesize(token)) {\r\n                mstore(NoContract_error_sig_ptr, NoContract_error_signature)\r\n                mstore(NoContract_error_token_ptr, token)\r\n                revert(NoContract_error_sig_ptr, NoContract_error_length)\r\n            }\r\n\r\n            // Write calldata to free memory pointer (restore it later).\r\n            let memPointer := mload(FreeMemoryPointerSlot)\r\n\r\n            // Write calldata to memory starting with function selector.\r\n            mstore(ERC721_transferFrom_sig_ptr, ERC721_transferFrom_signature)\r\n            mstore(ERC721_transferFrom_from_ptr, from)\r\n            mstore(ERC721_transferFrom_to_ptr, to)\r\n            mstore(ERC721_transferFrom_id_ptr, identifier)\r\n\r\n            // Perform the call, ignoring return data.\r\n            let success := call(\r\n                gas(),\r\n                token,\r\n                0,\r\n                ERC721_transferFrom_sig_ptr,\r\n                ERC721_transferFrom_length,\r\n                0,\r\n                0\r\n            )\r\n\r\n            // If the transfer reverted:\r\n            if iszero(success) {\r\n                // If it returned a message, bubble it up as long as sufficient\r\n                // gas remains to do so:\r\n                if returndatasize() {\r\n                    // Ensure that sufficient gas is available to copy\r\n                    // returndata while expanding memory where necessary. Start\r\n                    // by computing word size of returndata & allocated memory.\r\n                    let returnDataWords := div(returndatasize(), OneWord)\r\n\r\n                    // Note: use the free memory pointer in place of msize() to\r\n                    // work around a Yul warning that prevents accessing msize\r\n                    // directly when the IR pipeline is activated.\r\n                    let msizeWords := div(memPointer, OneWord)\r\n\r\n                    // Next, compute the cost of the returndatacopy.\r\n                    let cost := mul(CostPerWord, returnDataWords)\r\n\r\n                    // Then, compute cost of new memory allocation.\r\n                    if gt(returnDataWords, msizeWords) {\r\n                        cost := add(\r\n                            cost,\r\n                            add(\r\n                                mul(\r\n                                    sub(returnDataWords, msizeWords),\r\n                                    CostPerWord\r\n                                ),\r\n                                div(\r\n                                    sub(\r\n                                        mul(returnDataWords, returnDataWords),\r\n                                        mul(msizeWords, msizeWords)\r\n                                    ),\r\n                                    MemoryExpansionCoefficient\r\n                                )\r\n                            )\r\n                        )\r\n                    }\r\n\r\n                    // Finally, add a small constant and compare to gas\r\n                    // remaining; bubble up the revert data if enough gas is\r\n                    // still available.\r\n                    if lt(add(cost, ExtraGasBuffer), gas()) {\r\n                        // Copy returndata to memory; overwrite existing memory.\r\n                        returndatacopy(0, 0, returndatasize())\r\n\r\n                        // Revert, giving memory region with copied returndata.\r\n                        revert(0, returndatasize())\r\n                    }\r\n                }\r\n\r\n                // Otherwise revert with a generic error message.\r\n                mstore(\r\n                    TokenTransferGenericFailure_error_sig_ptr,\r\n                    TokenTransferGenericFailure_error_signature\r\n                )\r\n                mstore(TokenTransferGenericFailure_error_token_ptr, token)\r\n                mstore(TokenTransferGenericFailure_error_from_ptr, from)\r\n                mstore(TokenTransferGenericFailure_error_to_ptr, to)\r\n                mstore(TokenTransferGenericFailure_error_id_ptr, identifier)\r\n                mstore(TokenTransferGenericFailure_error_amount_ptr, 1)\r\n                revert(\r\n                    TokenTransferGenericFailure_error_sig_ptr,\r\n                    TokenTransferGenericFailure_error_length\r\n                )\r\n            }\r\n\r\n            // Restore the original free memory pointer.\r\n            mstore(FreeMemoryPointerSlot, memPointer)\r\n\r\n            // Restore the zero slot to zero.\r\n            mstore(ZeroSlot, 0)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to transfer ERC1155 tokens from a given\r\n     *      originator to a given recipient. Sufficient approvals must be set on\r\n     *      the contract performing the transfer and contract recipients must\r\n     *      implement onReceived to indicate that they are willing to accept the\r\n     *      transfer.\r\n     *\r\n     * @param token      The ERC1155 token to transfer.\r\n     * @param from       The originator of the transfer.\r\n     * @param to         The recipient of the transfer.\r\n     * @param identifier The id to transfer.\r\n     * @param amount     The amount to transfer.\r\n     */\r\n    function _performERC1155Transfer(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 identifier,\r\n        uint256 amount\r\n    ) internal {\r\n        // Utilize assembly to perform an optimized ERC1155 token transfer.\r\n        assembly {\r\n            // If the token has no code, revert.\r\n            if iszero(extcodesize(token)) {\r\n                mstore(NoContract_error_sig_ptr, NoContract_error_signature)\r\n                mstore(NoContract_error_token_ptr, token)\r\n                revert(NoContract_error_sig_ptr, NoContract_error_length)\r\n            }\r\n\r\n            // Write calldata to these slots below, but restore them later.\r\n            let memPointer := mload(FreeMemoryPointerSlot)\r\n            let slot0x80 := mload(Slot0x80)\r\n            let slot0xA0 := mload(Slot0xA0)\r\n            let slot0xC0 := mload(Slot0xC0)\r\n\r\n            // Write calldata into memory, beginning with function selector.\r\n            mstore(\r\n                ERC1155_safeTransferFrom_sig_ptr,\r\n                ERC1155_safeTransferFrom_signature\r\n            )\r\n            mstore(ERC1155_safeTransferFrom_from_ptr, from)\r\n            mstore(ERC1155_safeTransferFrom_to_ptr, to)\r\n            mstore(ERC1155_safeTransferFrom_id_ptr, identifier)\r\n            mstore(ERC1155_safeTransferFrom_amount_ptr, amount)\r\n            mstore(\r\n                ERC1155_safeTransferFrom_data_offset_ptr,\r\n                ERC1155_safeTransferFrom_data_length_offset\r\n            )\r\n            mstore(ERC1155_safeTransferFrom_data_length_ptr, 0)\r\n\r\n            let success := call(\r\n                gas(),\r\n                token,\r\n                0,\r\n                ERC1155_safeTransferFrom_sig_ptr,\r\n                ERC1155_safeTransferFrom_length,\r\n                0,\r\n                0\r\n            )\r\n\r\n            // If the transfer reverted:\r\n            if iszero(success) {\r\n                // If it returned a message, bubble it up as long as sufficient\r\n                // gas remains to do so:\r\n                if returndatasize() {\r\n                    // Ensure that sufficient gas is available to copy\r\n                    // returndata while expanding memory where necessary. Start\r\n                    // by computing word size of returndata & allocated memory.\r\n                    let returnDataWords := div(returndatasize(), OneWord)\r\n\r\n                    // Note: use the free memory pointer in place of msize() to\r\n                    // work around a Yul warning that prevents accessing msize\r\n                    // directly when the IR pipeline is activated.\r\n                    let msizeWords := div(memPointer, OneWord)\r\n\r\n                    // Next, compute the cost of the returndatacopy.\r\n                    let cost := mul(CostPerWord, returnDataWords)\r\n\r\n                    // Then, compute cost of new memory allocation.\r\n                    if gt(returnDataWords, msizeWords) {\r\n                        cost := add(\r\n                            cost,\r\n                            add(\r\n                                mul(\r\n                                    sub(returnDataWords, msizeWords),\r\n                                    CostPerWord\r\n                                ),\r\n                                div(\r\n                                    sub(\r\n                                        mul(returnDataWords, returnDataWords),\r\n                                        mul(msizeWords, msizeWords)\r\n                                    ),\r\n                                    MemoryExpansionCoefficient\r\n                                )\r\n                            )\r\n                        )\r\n                    }\r\n\r\n                    // Finally, add a small constant and compare to gas\r\n                    // remaining; bubble up the revert data if enough gas is\r\n                    // still available.\r\n                    if lt(add(cost, ExtraGasBuffer), gas()) {\r\n                        // Copy returndata to memory; overwrite existing memory.\r\n                        returndatacopy(0, 0, returndatasize())\r\n\r\n                        // Revert, giving memory region with copied returndata.\r\n                        revert(0, returndatasize())\r\n                    }\r\n                }\r\n\r\n                // Otherwise revert with a generic error message.\r\n                mstore(\r\n                    TokenTransferGenericFailure_error_sig_ptr,\r\n                    TokenTransferGenericFailure_error_signature\r\n                )\r\n                mstore(TokenTransferGenericFailure_error_token_ptr, token)\r\n                mstore(TokenTransferGenericFailure_error_from_ptr, from)\r\n                mstore(TokenTransferGenericFailure_error_to_ptr, to)\r\n                mstore(TokenTransferGenericFailure_error_id_ptr, identifier)\r\n                mstore(TokenTransferGenericFailure_error_amount_ptr, amount)\r\n                revert(\r\n                    TokenTransferGenericFailure_error_sig_ptr,\r\n                    TokenTransferGenericFailure_error_length\r\n                )\r\n            }\r\n\r\n            mstore(Slot0x80, slot0x80) // Restore slot 0x80.\r\n            mstore(Slot0xA0, slot0xA0) // Restore slot 0xA0.\r\n            mstore(Slot0xC0, slot0xC0) // Restore slot 0xC0.\r\n\r\n            // Restore the original free memory pointer.\r\n            mstore(FreeMemoryPointerSlot, memPointer)\r\n\r\n            // Restore the zero slot to zero.\r\n            mstore(ZeroSlot, 0)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to transfer ERC1155 tokens from a given\r\n     *      originator to a given recipient. Sufficient approvals must be set on\r\n     *      the contract performing the transfer and contract recipients must\r\n     *      implement onReceived to indicate that they are willing to accept the\r\n     *      transfer.\r\n     *\r\n     * @param batchTransfers The group of 1155 batch transfers to perform.\r\n     */\r\n    function _performERC1155BatchTransfers(\r\n        ConduitBatch1155Transfer[] calldata batchTransfers\r\n    ) internal {\r\n        // Utilize assembly to perform optimized batch 1155 transfers.\r\n        assembly {\r\n            let len := batchTransfers.length\r\n            // Pointer to first head in the array, which is offset to the struct\r\n            // at each index. This gets incremented after each loop to avoid\r\n            // multiplying by 32 to get the offset for each element.\r\n            let nextElementHeadPtr := batchTransfers.offset\r\n\r\n            // Pointer to beginning of the head of the array. This is the\r\n            // reference position each offset references. It's held static to\r\n            // let each loop calculate the data position for an element.\r\n            let arrayHeadPtr := nextElementHeadPtr\r\n\r\n            // Write the function selector, which will be reused for each call:\r\n            // safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\r\n            mstore(\r\n                ConduitBatch1155Transfer_from_offset,\r\n                ERC1155_safeBatchTransferFrom_signature\r\n            )\r\n\r\n            // Iterate over each batch transfer.\r\n            for {\r\n                let i := 0\r\n            } lt(i, len) {\r\n                i := add(i, 1)\r\n            } {\r\n                // Read the offset to the beginning of the element and add\r\n                // it to pointer to the beginning of the array head to get\r\n                // the absolute position of the element in calldata.\r\n                let elementPtr := add(\r\n                    arrayHeadPtr,\r\n                    calldataload(nextElementHeadPtr)\r\n                )\r\n\r\n                // Update the offset position for the next loop\r\n                nextElementHeadPtr := add(nextElementHeadPtr, OneWord)\r\n\r\n                // Copy the first section of calldata (before dynamic values).\r\n                calldatacopy(\r\n                    BatchTransfer1155Params_ptr,\r\n                    add(elementPtr, ConduitBatch1155Transfer_from_offset),\r\n                    ConduitBatch1155Transfer_usable_head_size\r\n                )\r\n\r\n                // Get the total number of supplied ids.\r\n                let idsLength := calldataload(\r\n                    add(elementPtr, ConduitBatch1155Transfer_ids_length_offset)\r\n                )\r\n\r\n                // Determine size of calldata required for ids and amounts. Note\r\n                // that the size includes both lengths as well as the data.\r\n                let idsAndAmountsSize := add(TwoWords, mul(idsLength, TwoWords))\r\n\r\n                // Update the offset for the data array in memory.\r\n                mstore(\r\n                    BatchTransfer1155Params_data_head_ptr,\r\n                    add(\r\n                        BatchTransfer1155Params_ids_length_offset,\r\n                        idsAndAmountsSize\r\n                    )\r\n                )\r\n\r\n                // Set the length of the data array in memory to zero.\r\n                mstore(\r\n                    add(\r\n                        BatchTransfer1155Params_data_length_basePtr,\r\n                        idsAndAmountsSize\r\n                    ),\r\n                    0\r\n                )\r\n\r\n                // Determine the total calldata size for the call to transfer.\r\n                let transferDataSize := add(\r\n                    BatchTransfer1155Params_data_length_basePtr,\r\n                    mul(idsLength, TwoWords)\r\n                )\r\n\r\n                // Copy second section of calldata (including dynamic values).\r\n                calldatacopy(\r\n                    BatchTransfer1155Params_ids_length_ptr,\r\n                    add(elementPtr, ConduitBatch1155Transfer_ids_length_offset),\r\n                    idsAndAmountsSize\r\n                )\r\n\r\n                // Determine the expected offset for the amounts array.\r\n                let expectedAmountsOffset := add(\r\n                    ConduitBatch1155Transfer_amounts_length_baseOffset,\r\n                    mul(idsLength, OneWord)\r\n                )\r\n\r\n                // Validate struct encoding.\r\n                let invalidEncoding := iszero(\r\n                    and(\r\n                        // ids.length == amounts.length\r\n                        eq(\r\n                            idsLength,\r\n                            calldataload(add(elementPtr, expectedAmountsOffset))\r\n                        ),\r\n                        and(\r\n                            // ids_offset == 0xa0\r\n                            eq(\r\n                                calldataload(\r\n                                    add(\r\n                                        elementPtr,\r\n                                        ConduitBatch1155Transfer_ids_head_offset\r\n                                    )\r\n                                ),\r\n                                ConduitBatch1155Transfer_ids_length_offset\r\n                            ),\r\n                            // amounts_offset == 0xc0 + ids.length*32\r\n                            eq(\r\n                                calldataload(\r\n                                    add(\r\n                                        elementPtr,\r\n                                        ConduitBatch1155Transfer_amounts_head_offset\r\n                                    )\r\n                                ),\r\n                                expectedAmountsOffset\r\n                            )\r\n                        )\r\n                    )\r\n                )\r\n\r\n                // Revert with an error if the encoding is not valid.\r\n                if invalidEncoding {\r\n                    mstore(\r\n                        Invalid1155BatchTransferEncoding_ptr,\r\n                        Invalid1155BatchTransferEncoding_selector\r\n                    )\r\n                    revert(\r\n                        Invalid1155BatchTransferEncoding_ptr,\r\n                        Invalid1155BatchTransferEncoding_length\r\n                    )\r\n                }\r\n\r\n                // Retrieve the token from calldata.\r\n                let token := calldataload(elementPtr)\r\n\r\n                // If the token has no code, revert.\r\n                if iszero(extcodesize(token)) {\r\n                    mstore(NoContract_error_sig_ptr, NoContract_error_signature)\r\n                    mstore(NoContract_error_token_ptr, token)\r\n                    revert(NoContract_error_sig_ptr, NoContract_error_length)\r\n                }\r\n\r\n                // Perform the call to transfer 1155 tokens.\r\n                let success := call(\r\n                    gas(),\r\n                    token,\r\n                    0,\r\n                    ConduitBatch1155Transfer_from_offset, // Data portion start.\r\n                    transferDataSize, // Location of the length of callData.\r\n                    0,\r\n                    0\r\n                )\r\n\r\n                // If the transfer reverted:\r\n                if iszero(success) {\r\n                    // If it returned a message, bubble it up as long as\r\n                    // sufficient gas remains to do so:\r\n                    if returndatasize() {\r\n                        // Ensure that sufficient gas is available to copy\r\n                        // returndata while expanding memory where necessary.\r\n                        // Start by computing word size of returndata and\r\n                        // allocated memory.\r\n                        let returnDataWords := div(returndatasize(), OneWord)\r\n\r\n                        // Note: use transferDataSize in place of msize() to\r\n                        // work around a Yul warning that prevents accessing\r\n                        // msize directly when the IR pipeline is activated.\r\n                        // The free memory pointer is not used here because\r\n                        // this function does almost all memory management\r\n                        // manually and does not update it, and transferDataSize\r\n                        // should be the largest memory value used (unless a\r\n                        // previous batch was larger).\r\n                        let msizeWords := div(transferDataSize, OneWord)\r\n\r\n                        // Next, compute the cost of the returndatacopy.\r\n                        let cost := mul(CostPerWord, returnDataWords)\r\n\r\n                        // Then, compute cost of new memory allocation.\r\n                        if gt(returnDataWords, msizeWords) {\r\n                            cost := add(\r\n                                cost,\r\n                                add(\r\n                                    mul(\r\n                                        sub(returnDataWords, msizeWords),\r\n                                        CostPerWord\r\n                                    ),\r\n                                    div(\r\n                                        sub(\r\n                                            mul(\r\n                                                returnDataWords,\r\n                                                returnDataWords\r\n                                            ),\r\n                                            mul(msizeWords, msizeWords)\r\n                                        ),\r\n                                        MemoryExpansionCoefficient\r\n                                    )\r\n                                )\r\n                            )\r\n                        }\r\n\r\n                        // Finally, add a small constant and compare to gas\r\n                        // remaining; bubble up the revert data if enough gas is\r\n                        // still available.\r\n                        if lt(add(cost, ExtraGasBuffer), gas()) {\r\n                            // Copy returndata to memory; overwrite existing.\r\n                            returndatacopy(0, 0, returndatasize())\r\n\r\n                            // Revert with memory region containing returndata.\r\n                            revert(0, returndatasize())\r\n                        }\r\n                    }\r\n\r\n                    // Set the error signature.\r\n                    mstore(\r\n                        0,\r\n                        ERC1155BatchTransferGenericFailure_error_signature\r\n                    )\r\n\r\n                    // Write the token.\r\n                    mstore(ERC1155BatchTransferGenericFailure_token_ptr, token)\r\n\r\n                    // Move the ids and amounts offsets forward a word.\r\n                    mstore(\r\n                        BatchTransfer1155Params_ids_head_ptr,\r\n                        ConduitBatch1155Transfer_amounts_head_offset\r\n                    )\r\n                    mstore(\r\n                        BatchTransfer1155Params_amounts_head_ptr,\r\n                        add(\r\n                            OneWord,\r\n                            mload(BatchTransfer1155Params_amounts_head_ptr)\r\n                        )\r\n                    )\r\n\r\n                    // Return modified region with one fewer word at the end.\r\n                    revert(\r\n                        0,\r\n                        add(transferDataSize, BatchTransfer1155Params_ptr)\r\n                    )\r\n                }\r\n            }\r\n\r\n            // Reset the free memory pointer to the default value; memory must\r\n            // be assumed to be dirtied and not reused from this point forward.\r\n            mstore(FreeMemoryPointerSlot, DefaultFreeMemoryPointer)\r\n        }\r\n    }\r\n}\r\n"
      },
      "contracts/lib/TokenTransferrerConstants.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.7;\r\n\r\n/*\r\n * -------------------------- Disambiguation & Other Notes ---------------------\r\n *    - The term \"head\" is used as it is in the documentation for ABI encoding,\r\n *      but only in reference to dynamic types, i.e. it always refers to the\r\n *      offset or pointer to the body of a dynamic type. In calldata, the head\r\n *      is always an offset (relative to the parent object), while in memory,\r\n *      the head is always the pointer to the body. More information found here:\r\n *      https://docs.soliditylang.org/en/v0.8.13/abi-spec.html#argument-encoding\r\n *        - Note that the length of an array is separate from and precedes the\r\n *          head of the array.\r\n *\r\n *    - The term \"body\" is used in place of the term \"head\" used in the ABI\r\n *      documentation. It refers to the start of the data for a dynamic type,\r\n *      e.g. the first word of a struct or the first word of the first element\r\n *      in an array.\r\n *\r\n *    - The term \"pointer\" is used to describe the absolute position of a value\r\n *      and never an offset relative to another value.\r\n *        - The suffix \"_ptr\" refers to a memory pointer.\r\n *        - The suffix \"_cdPtr\" refers to a calldata pointer.\r\n *\r\n *    - The term \"offset\" is used to describe the position of a value relative\r\n *      to some parent value. For example, OrderParameters_conduit_offset is the\r\n *      offset to the \"conduit\" value in the OrderParameters struct relative to\r\n *      the start of the body.\r\n *        - Note: Offsets are used to derive pointers.\r\n *\r\n *    - Some structs have pointers defined for all of their fields in this file.\r\n *      Lines which are commented out are fields that are not used in the\r\n *      codebase but have been left in for readability.\r\n */\r\n\r\nuint256 constant OneWord = 0x20;\r\nuint256 constant TwoWords = 0x40;\r\nuint256 constant ThreeWords = 0x60;\r\n\r\nuint256 constant FreeMemoryPointerSlot = 0x40;\r\nuint256 constant ZeroSlot = 0x60;\r\nuint256 constant DefaultFreeMemoryPointer = 0x80;\r\n\r\nuint256 constant Slot0x80 = 0x80;\r\nuint256 constant Slot0xA0 = 0xa0;\r\nuint256 constant Slot0xC0 = 0xc0;\r\n\r\n// abi.encodeWithSignature(\"transferFrom(address,address,uint256)\")\r\nuint256 constant ERC20_transferFrom_signature = (\r\n    0x23b872dd00000000000000000000000000000000000000000000000000000000\r\n);\r\nuint256 constant ERC20_transferFrom_sig_ptr = 0x0;\r\nuint256 constant ERC20_transferFrom_from_ptr = 0x04;\r\nuint256 constant ERC20_transferFrom_to_ptr = 0x24;\r\nuint256 constant ERC20_transferFrom_amount_ptr = 0x44;\r\nuint256 constant ERC20_transferFrom_length = 0x64; // 4 + 32 * 3 == 100\r\n\r\n// abi.encodeWithSignature(\r\n//     \"safeTransferFrom(address,address,uint256,uint256,bytes)\"\r\n// )\r\nuint256 constant ERC1155_safeTransferFrom_signature = (\r\n    0xf242432a00000000000000000000000000000000000000000000000000000000\r\n);\r\nuint256 constant ERC1155_safeTransferFrom_sig_ptr = 0x0;\r\nuint256 constant ERC1155_safeTransferFrom_from_ptr = 0x04;\r\nuint256 constant ERC1155_safeTransferFrom_to_ptr = 0x24;\r\nuint256 constant ERC1155_safeTransferFrom_id_ptr = 0x44;\r\nuint256 constant ERC1155_safeTransferFrom_amount_ptr = 0x64;\r\nuint256 constant ERC1155_safeTransferFrom_data_offset_ptr = 0x84;\r\nuint256 constant ERC1155_safeTransferFrom_data_length_ptr = 0xa4;\r\nuint256 constant ERC1155_safeTransferFrom_length = 0xc4; // 4 + 32 * 6 == 196\r\nuint256 constant ERC1155_safeTransferFrom_data_length_offset = 0xa0;\r\n\r\n// abi.encodeWithSignature(\r\n//     \"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\"\r\n// )\r\nuint256 constant ERC1155_safeBatchTransferFrom_signature = (\r\n    0x2eb2c2d600000000000000000000000000000000000000000000000000000000\r\n);\r\n\r\nbytes4 constant ERC1155_safeBatchTransferFrom_selector = bytes4(\r\n    bytes32(ERC1155_safeBatchTransferFrom_signature)\r\n);\r\n\r\nuint256 constant ERC721_transferFrom_signature = ERC20_transferFrom_signature;\r\nuint256 constant ERC721_transferFrom_sig_ptr = 0x0;\r\nuint256 constant ERC721_transferFrom_from_ptr = 0x04;\r\nuint256 constant ERC721_transferFrom_to_ptr = 0x24;\r\nuint256 constant ERC721_transferFrom_id_ptr = 0x44;\r\nuint256 constant ERC721_transferFrom_length = 0x64; // 4 + 32 * 3 == 100\r\n\r\n// abi.encodeWithSignature(\"NoContract(address)\")\r\nuint256 constant NoContract_error_signature = (\r\n    0x5f15d67200000000000000000000000000000000000000000000000000000000\r\n);\r\nuint256 constant NoContract_error_sig_ptr = 0x0;\r\nuint256 constant NoContract_error_token_ptr = 0x4;\r\nuint256 constant NoContract_error_length = 0x24; // 4 + 32 == 36\r\n\r\n// abi.encodeWithSignature(\r\n//     \"TokenTransferGenericFailure(address,address,address,uint256,uint256)\"\r\n// )\r\nuint256 constant TokenTransferGenericFailure_error_signature = (\r\n    0xf486bc8700000000000000000000000000000000000000000000000000000000\r\n);\r\nuint256 constant TokenTransferGenericFailure_error_sig_ptr = 0x0;\r\nuint256 constant TokenTransferGenericFailure_error_token_ptr = 0x4;\r\nuint256 constant TokenTransferGenericFailure_error_from_ptr = 0x24;\r\nuint256 constant TokenTransferGenericFailure_error_to_ptr = 0x44;\r\nuint256 constant TokenTransferGenericFailure_error_id_ptr = 0x64;\r\nuint256 constant TokenTransferGenericFailure_error_amount_ptr = 0x84;\r\n\r\n// 4 + 32 * 5 == 164\r\nuint256 constant TokenTransferGenericFailure_error_length = 0xa4;\r\n\r\nuint256 constant ERC1155BatchTransferGenericFailure_error_signature = (\r\n    0xafc445e200000000000000000000000000000000000000000000000000000000\r\n);\r\nuint256 constant ERC1155BatchTransferGenericFailure_token_ptr = 0x04;\r\n\r\n// abi.encodeWithSignature(\r\n//     \"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\"\r\n// )\r\nuint256 constant BadReturnValueFromERC20OnTransfer_error_signature = (\r\n    0x9889192300000000000000000000000000000000000000000000000000000000\r\n);\r\nuint256 constant BadReturnValueFromERC20OnTransfer_error_sig_ptr = 0x0;\r\nuint256 constant BadReturnValueFromERC20OnTransfer_error_token_ptr = 0x4;\r\nuint256 constant BadReturnValueFromERC20OnTransfer_error_from_ptr = 0x24;\r\nuint256 constant BadReturnValueFromERC20OnTransfer_error_to_ptr = 0x44;\r\nuint256 constant BadReturnValueFromERC20OnTransfer_error_amount_ptr = 0x64;\r\n\r\n// 4 + 32 * 4 == 132\r\nuint256 constant BadReturnValueFromERC20OnTransfer_error_length = 0x84;\r\n\r\nuint256 constant ExtraGasBuffer = 0x20;\r\nuint256 constant CostPerWord = 3;\r\nuint256 constant MemoryExpansionCoefficient = 0x200;\r\n\r\n// Values are offset by 32 bytes in order to write the token to the beginning\r\n// in the event of a revert\r\nuint256 constant BatchTransfer1155Params_ptr = 0x24;\r\nuint256 constant BatchTransfer1155Params_ids_head_ptr = 0x44;\r\nuint256 constant BatchTransfer1155Params_amounts_head_ptr = 0x84;\r\nuint256 constant BatchTransfer1155Params_data_head_ptr = 0xa4;\r\nuint256 constant BatchTransfer1155Params_data_length_basePtr = 0x104;\r\n\r\nuint256 constant BatchTransfer1155Params_ids_length_ptr = 0xc4;\r\n\r\nuint256 constant BatchTransfer1155Params_ids_length_offset = 0xa0;\r\nuint256 constant BatchTransfer1155Params_amounts_length_baseOffset = 0xc0;\r\nuint256 constant BatchTransfer1155Params_data_length_baseOffset = 0xe0;\r\n\r\nuint256 constant ConduitBatch1155Transfer_usable_head_size = 0x80;\r\n\r\nuint256 constant ConduitBatch1155Transfer_from_offset = 0x20;\r\nuint256 constant ConduitBatch1155Transfer_ids_head_offset = 0x60;\r\nuint256 constant ConduitBatch1155Transfer_amounts_head_offset = 0x80;\r\nuint256 constant ConduitBatch1155Transfer_ids_length_offset = 0xa0;\r\nuint256 constant ConduitBatch1155Transfer_amounts_length_baseOffset = 0xc0;\r\nuint256 constant ConduitBatch1155Transfer_calldata_baseSize = 0xc0;\r\n\r\nuint256 constant Invalid1155BatchTransferEncoding_ptr = 0x00;\r\nuint256 constant Invalid1155BatchTransferEncoding_length = 0x04;\r\nuint256 constant Invalid1155BatchTransferEncoding_selector = (\r\n    0xeba2084c00000000000000000000000000000000000000000000000000000000\r\n);\r\n"
      },
      "contracts/interfaces/TokenTransferrerErrors.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.7;\r\n\r\n/**\r\n * @title TokenTransferrerErrors\r\n */\r\ninterface TokenTransferrerErrors {\r\n    /**\r\n     * @dev Revert with an error when an ERC721 transfer with amount other than\r\n     *      one is attempted.\r\n     */\r\n    error InvalidERC721TransferAmount();\r\n\r\n    /**\r\n     * @dev Revert with an error when attempting to fulfill an order where an\r\n     *      item has an amount of zero.\r\n     */\r\n    error MissingItemAmount();\r\n\r\n    /**\r\n     * @dev Revert with an error when an ERC20, ERC721, or ERC1155 token\r\n     *      transfer reverts.\r\n     *\r\n     * @param token      The token for which the transfer was attempted.\r\n     * @param from       The source of the attempted transfer.\r\n     * @param to         The recipient of the attempted transfer.\r\n     * @param identifier The identifier for the attempted transfer.\r\n     * @param amount     The amount for the attempted transfer.\r\n     */\r\n    error TokenTransferGenericFailure(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 identifier,\r\n        uint256 amount\r\n    );\r\n\r\n    /**\r\n     * @dev Revert with an error when a batch ERC1155 token transfer reverts.\r\n     *\r\n     * @param token       The token for which the transfer was attempted.\r\n     * @param from        The source of the attempted transfer.\r\n     * @param to          The recipient of the attempted transfer.\r\n     * @param identifiers The identifiers for the attempted transfer.\r\n     * @param amounts     The amounts for the attempted transfer.\r\n     */\r\n    error ERC1155BatchTransferGenericFailure(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256[] identifiers,\r\n        uint256[] amounts\r\n    );\r\n\r\n    /**\r\n     * @dev Revert with an error when an ERC20 token transfer returns a falsey\r\n     *      value.\r\n     *\r\n     * @param token      The token for which the ERC20 transfer was attempted.\r\n     * @param from       The source of the attempted ERC20 transfer.\r\n     * @param to         The recipient of the attempted ERC20 transfer.\r\n     * @param amount     The amount for the attempted ERC20 transfer.\r\n     */\r\n    error BadReturnValueFromERC20OnTransfer(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    );\r\n\r\n    /**\r\n     * @dev Revert with an error when an account being called as an assumed\r\n     *      contract does not have code and returns no data.\r\n     *\r\n     * @param account The account that should contain code.\r\n     */\r\n    error NoContract(address account);\r\n}\r\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/conduit/Conduit.sol": {
        "Conduit": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BadReturnValueFromERC20OnTransfer",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ChannelClosed",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "identifiers",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "ERC1155BatchTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Invalid1155BatchTransferEncoding",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidController",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidERC721TransferAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidItemType",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "MissingItemAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "NoContract",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenTransferGenericFailure",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                }
              ],
              "name": "ChannelUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batchTransfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "standardTransfers",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batchTransfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeWithBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "updateChannel",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a080604052346100235733608052610c0b90816100298239608051816103dd0152f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081634ce34aa21461006657508063899e104c1461005d5780638df25d92146100545763c4e8fcb51461004c57600080fd5b61000e610378565b5061000e6102c0565b5061000e6101b4565b3461014f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014f5760043567ffffffffffffffff811161014b576100b5903690600401610152565b91338152806020526100ce60ff60408320541615151590565b610121575b828110610105576040517f4ce34aa2000000000000000000000000000000000000000000000000000000008152602090f35b8061011b6101166001938686610498565b61052a565b016100d3565b7f6821b7df0000000000000000000000000000000000000000000000000000000060805260046080fd5b5080fd5b80fd5b9181601f8401121561000e5782359167ffffffffffffffff831161000e5760208085019460c0850201011161000e57565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e57610205903690600401610152565b9160243590811161000e5761021e903690600401610183565b91909233600052600060205261023c60ff6040600020541615151590565b6102965760005b81811061027f576102548486610a28565b6040517f899e104c000000000000000000000000000000000000000000000000000000008152602090f35b806102906101166001938587610498565b01610243565b60046040517f6821b7df000000000000000000000000000000000000000000000000000000008152fd5b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e57610310903690600401610183565b33600052600060205260ff60406000205416156102965761033091610a28565b60206040517f8df25d92000000000000000000000000000000000000000000000000000000008152f35b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435906103b68261035a565b6024359182151580930361000e5773ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361046f576000937fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e29284921690818652856020528286207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff831617905582519182526020820152a151f35b600483517f6d5769be000000000000000000000000000000000000000000000000000000008152fd5b91908110156104a85760c0020190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600411156104e157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b35600481101561000e5790565b356105278161035a565b90565b600161053582610510565b61053e816104d7565b0361057957806105536020610577930161051d565b906105606040820161051d565b60a061056e6060840161051d565b92013592610678565b565b600261058482610510565b61058d816104d7565b036105fc57600160a0820135036105d257806105ae6020610577930161051d565b906105bb6040820161051d565b60806105c96060840161051d565b920135926107e5565b60046040517fefcc00b1000000000000000000000000000000000000000000000000000000008152fd5b600361060782610510565b610610816104d7565b0361064e57806106256020610577930161051d565b6106316040830161051d565b61063d6060840161051d565b90608060a0850135940135926108f0565b60046040517f7932f1fc000000000000000000000000000000000000000000000000000000008152fd5b9092604051926000947f23b872dd00000000000000000000000000000000000000000000000000000000865280600452816024528260445260208660648180885af1803d15601f3d1160018a51141617163d15158116156106e2575b505050505050604052606052565b80863b1515166106d45790879596911561072257602486887f5f15d672000000000000000000000000000000000000000000000000000000008252600452fd5b1561075c57506084947f98891923000000000000000000000000000000000000000000000000000000008552600452602452604452606452fd5b3d61079b575b5060a4947ff486bc8700000000000000000000000000000000000000000000000000000000855260045260245260445281606452608452fd5b3d60051c9060051c9080600302918082116107cc575b505060205a9101106107c35785610762565b833d81803e3d90fd5b8080600392028380020360091c920302010186806107b1565b9092813b156108c257604051926000947f23b872dd000000000000000000000000000000000000000000000000000000008652806004528160245282604452858060648180885af11561083e5750505050604052606052565b8593943d610881575b5060a4947ff486bc870000000000000000000000000000000000000000000000000000000085526004526024526044526064526001608452fd5b3d60051c9060051c9080600302918082116108a9575b505060205a9101106107c35785610847565b8080600392028380020360091c92030201018680610897565b507f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b929093833b156109fa57604051936080519160a0519360c051956000987ff242432a000000000000000000000000000000000000000000000000000000008a528060045281602452826044528360645260a06084528960a452898060c48180895af11561096d57505050505060805260a05260c052604052606052565b89949550883d6109b0575b5060a4957ff486bc87000000000000000000000000000000000000000000000000000000008652600452602452604452606452608452fd5b3d60051c9060051c9080600302918082116109e1575b505060205a9101106109d85786610978565b843d81803e3d90fd5b8080600392028380020360091c920302010187806109c6565b837f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b9190826020937f2eb2c2d600000000000000000000000000000000000000000000000000000000855260005b838110610a68575050505090506080604052565b82860192602490358301608080828a01843760a0918281018035918260061b9460e0860160a4526000610144870152856101040192866040019060c43760059380851b9160c090838201888601351490606086013514169284010135141615610bab573594853b15610b7f5750600080828d82895af115610af0575050505050600101610a54565b908a92913d610b37575b5050610128937fafc445e2000000000000000000000000000000000000000000000000000000006000526004526044526084908151019052016000fd5b3d821c911c90600381810292808311610b68575b505050825a910110610b5e578480610afa565b3d6000803e3d6000fd5b8080028380020360091c9203020101858080610b4b565b857f5f15d672000000000000000000000000000000000000000000000000000000006000526004526000fd5b7feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fdfea26469706673582212202e490d93d744ec3c60513ff515e1b5ba4801751166dfb42cd53a25d76767d3ae64736f6c634300080d0033",
              "opcodes": "PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x23 JUMPI CALLER PUSH1 0x80 MSTORE PUSH2 0xC0B SWAP1 DUP2 PUSH2 0x29 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x3DD ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4CE34AA2 EQ PUSH2 0x66 JUMPI POP DUP1 PUSH4 0x899E104C EQ PUSH2 0x5D JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0x54 JUMPI PUSH4 0xC4E8FCB5 EQ PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x378 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x2C0 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x14F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x14B JUMPI PUSH2 0xB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH2 0xCE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x121 JUMPI JUMPDEST DUP3 DUP2 LT PUSH2 0x105 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CE34AA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x11B PUSH2 0x116 PUSH1 0x1 SWAP4 DUP7 DUP7 PUSH2 0x498 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST ADD PUSH2 0xD3 JUMP JUMPDEST PUSH32 0x6821B7DF00000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MSTORE PUSH1 0x4 PUSH1 0x80 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 PUSH1 0xC0 DUP6 MUL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x205 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x21E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x183 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x23C PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x296 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x27F JUMPI PUSH2 0x254 DUP5 DUP7 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x899E104C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x290 PUSH2 0x116 PUSH1 0x1 SWAP4 DUP6 DUP8 PUSH2 0x498 JUMP JUMPDEST ADD PUSH2 0x243 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6821B7DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE JUMPI PUSH2 0x310 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x183 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x296 JUMPI PUSH2 0x330 SWAP2 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x8DF25D9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x3B6 DUP3 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x46F JUMPI PUSH1 0x0 SWAP4 PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 SWAP3 DUP5 SWAP3 AND SWAP1 DUP2 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 MLOAD RETURN JUMPDEST PUSH1 0x4 DUP4 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0xC0 MUL ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x4E1 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xE JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x527 DUP2 PUSH2 0x35A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x535 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x53E DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x579 JUMPI DUP1 PUSH2 0x553 PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH2 0x560 PUSH1 0x40 DUP3 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0xA0 PUSH2 0x56E PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x678 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH2 0x584 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x58D DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x5FC JUMPI PUSH1 0x1 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SUB PUSH2 0x5D2 JUMPI DUP1 PUSH2 0x5AE PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH2 0x5BB PUSH1 0x40 DUP3 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x80 PUSH2 0x5C9 PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x3 PUSH2 0x607 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x64E JUMPI DUP1 PUSH2 0x625 PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST PUSH2 0x631 PUSH1 0x40 DUP4 ADD PUSH2 0x51D JUMP JUMPDEST PUSH2 0x63D PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH1 0x80 PUSH1 0xA0 DUP6 ADD CALLDATALOAD SWAP5 ADD CALLDATALOAD SWAP3 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE PUSH1 0x20 DUP7 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 DUP11 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND ISZERO PUSH2 0x6E2 JUMPI JUMPDEST POP POP POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP1 DUP7 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x6D4 JUMPI SWAP1 DUP8 SWAP6 SWAP7 SWAP2 ISZERO PUSH2 0x722 JUMPI PUSH1 0x24 DUP7 DUP9 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x75C JUMPI POP PUSH1 0x84 SWAP5 PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH2 0x79B JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE DUP2 PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x7CC JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x7C3 JUMPI DUP6 PUSH2 0x762 JUMP JUMPDEST DUP4 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 EXTCODESIZE ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP6 DUP1 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL ISZERO PUSH2 0x83E JUMPI POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP6 SWAP4 SWAP5 RETURNDATASIZE PUSH2 0x881 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x8A9 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x7C3 JUMPI DUP6 PUSH2 0x847 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x897 JUMP JUMPDEST POP PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP1 SWAP4 DUP4 EXTCODESIZE ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 MLOAD SWAP2 PUSH1 0xA0 MLOAD SWAP4 PUSH1 0xC0 MLOAD SWAP6 PUSH1 0x0 SWAP9 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP11 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE DUP10 PUSH1 0xA4 MSTORE DUP10 DUP1 PUSH1 0xC4 DUP2 DUP1 DUP10 GAS CALL ISZERO PUSH2 0x96D JUMPI POP POP POP POP POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP10 SWAP5 SWAP6 POP DUP9 RETURNDATASIZE PUSH2 0x9B0 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP6 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x9E1 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x9D8 JUMPI DUP7 PUSH2 0x978 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP8 DUP1 PUSH2 0x9C6 JUMP JUMPDEST DUP4 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x20 SWAP4 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA68 JUMPI POP POP POP POP SWAP1 POP PUSH1 0x80 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP3 DUP7 ADD SWAP3 PUSH1 0x24 SWAP1 CALLDATALOAD DUP4 ADD PUSH1 0x80 DUP1 DUP3 DUP11 ADD DUP5 CALLDATACOPY PUSH1 0xA0 SWAP2 DUP3 DUP2 ADD DUP1 CALLDATALOAD SWAP2 DUP3 PUSH1 0x6 SHL SWAP5 PUSH1 0xE0 DUP7 ADD PUSH1 0xA4 MSTORE PUSH1 0x0 PUSH2 0x144 DUP8 ADD MSTORE DUP6 PUSH2 0x104 ADD SWAP3 DUP7 PUSH1 0x40 ADD SWAP1 PUSH1 0xC4 CALLDATACOPY PUSH1 0x5 SWAP4 DUP1 DUP6 SHL SWAP2 PUSH1 0xC0 SWAP1 DUP4 DUP3 ADD DUP9 DUP7 ADD CALLDATALOAD EQ SWAP1 PUSH1 0x60 DUP7 ADD CALLDATALOAD EQ AND SWAP3 DUP5 ADD ADD CALLDATALOAD EQ AND ISZERO PUSH2 0xBAB JUMPI CALLDATALOAD SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0xB7F JUMPI POP PUSH1 0x0 DUP1 DUP3 DUP14 DUP3 DUP10 GAS CALL ISZERO PUSH2 0xAF0 JUMPI POP POP POP POP POP PUSH1 0x1 ADD PUSH2 0xA54 JUMP JUMPDEST SWAP1 DUP11 SWAP3 SWAP2 RETURNDATASIZE PUSH2 0xB37 JUMPI JUMPDEST POP POP PUSH2 0x128 SWAP4 PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x44 MSTORE PUSH1 0x84 SWAP1 DUP2 MLOAD ADD SWAP1 MSTORE ADD PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE DUP3 SHR SWAP2 SHR SWAP1 PUSH1 0x3 DUP2 DUP2 MUL SWAP3 DUP1 DUP4 GT PUSH2 0xB68 JUMPI JUMPDEST POP POP POP DUP3 GAS SWAP2 ADD LT PUSH2 0xB5E JUMPI DUP5 DUP1 PUSH2 0xAFA JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 DUP1 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP6 DUP1 DUP1 PUSH2 0xB4B JUMP JUMPDEST DUP6 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x49 0xD SWAP4 0xD7 DIFFICULTY 0xEC EXTCODECOPY PUSH1 0x51 EXTCODEHASH CREATE2 ISZERO 0xE1 0xB5 0xBA BASEFEE ADD PUSH22 0x1166DFB42CD53A25D76767D3AE64736F6C634300080D STOP CALLER ",
              "sourceMap": "1067:6423:0:-:0;;;;;;;1527:10;1513:24;;1067:6423;;;;;;1513:24;1067:6423;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_array_struct_ConduitBatch1155Transfer_calldata_dyn_calldata": {
                  "entryPoint": 387,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_array_struct_ConduitTransfer_calldata_dyn_calldata": {
                  "entryPoint": 338,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_bytes4": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_bytes4": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "calldata_array_index_access_struct_ConduitTransfer_calldata_dyn_calldata": {
                  "entryPoint": 1176,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_executeBatch1155": {
                  "entryPoint": 704,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_executeWithBatch1155": {
                  "entryPoint": 436,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_updateChannel": {
                  "entryPoint": 888,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_performERC1155BatchTransfers": {
                  "entryPoint": 2600,
                  "id": 1412,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_performERC1155Transfer": {
                  "entryPoint": 2288,
                  "id": 1402,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "fun_performERC20Transfer": {
                  "entryPoint": 1656,
                  "id": 1372,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_performERC721Transfer": {
                  "entryPoint": 2021,
                  "id": 1386,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 1322,
                  "id": 292,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "read_from_calldatat_address": {
                  "entryPoint": 1309,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_enum_ConduitItemType": {
                  "entryPoint": 1296,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "validator_assert_enum_ConduitItemType": {
                  "entryPoint": 1239,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 858,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "17": [
                  {
                    "length": 32,
                    "start": 989
                  }
                ]
              },
              "linkReferences": {},
              "object": "60806040526004361015610013575b600080fd5b6000803560e01c9081634ce34aa21461006657508063899e104c1461005d5780638df25d92146100545763c4e8fcb51461004c57600080fd5b61000e610378565b5061000e6102c0565b5061000e6101b4565b3461014f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014f5760043567ffffffffffffffff811161014b576100b5903690600401610152565b91338152806020526100ce60ff60408320541615151590565b610121575b828110610105576040517f4ce34aa2000000000000000000000000000000000000000000000000000000008152602090f35b8061011b6101166001938686610498565b61052a565b016100d3565b7f6821b7df0000000000000000000000000000000000000000000000000000000060805260046080fd5b5080fd5b80fd5b9181601f8401121561000e5782359167ffffffffffffffff831161000e5760208085019460c0850201011161000e57565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e57610205903690600401610152565b9160243590811161000e5761021e903690600401610183565b91909233600052600060205261023c60ff6040600020541615151590565b6102965760005b81811061027f576102548486610a28565b6040517f899e104c000000000000000000000000000000000000000000000000000000008152602090f35b806102906101166001938587610498565b01610243565b60046040517f6821b7df000000000000000000000000000000000000000000000000000000008152fd5b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e57610310903690600401610183565b33600052600060205260ff60406000205416156102965761033091610a28565b60206040517f8df25d92000000000000000000000000000000000000000000000000000000008152f35b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435906103b68261035a565b6024359182151580930361000e5773ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361046f576000937fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e29284921690818652856020528286207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff831617905582519182526020820152a151f35b600483517f6d5769be000000000000000000000000000000000000000000000000000000008152fd5b91908110156104a85760c0020190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600411156104e157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b35600481101561000e5790565b356105278161035a565b90565b600161053582610510565b61053e816104d7565b0361057957806105536020610577930161051d565b906105606040820161051d565b60a061056e6060840161051d565b92013592610678565b565b600261058482610510565b61058d816104d7565b036105fc57600160a0820135036105d257806105ae6020610577930161051d565b906105bb6040820161051d565b60806105c96060840161051d565b920135926107e5565b60046040517fefcc00b1000000000000000000000000000000000000000000000000000000008152fd5b600361060782610510565b610610816104d7565b0361064e57806106256020610577930161051d565b6106316040830161051d565b61063d6060840161051d565b90608060a0850135940135926108f0565b60046040517f7932f1fc000000000000000000000000000000000000000000000000000000008152fd5b9092604051926000947f23b872dd00000000000000000000000000000000000000000000000000000000865280600452816024528260445260208660648180885af1803d15601f3d1160018a51141617163d15158116156106e2575b505050505050604052606052565b80863b1515166106d45790879596911561072257602486887f5f15d672000000000000000000000000000000000000000000000000000000008252600452fd5b1561075c57506084947f98891923000000000000000000000000000000000000000000000000000000008552600452602452604452606452fd5b3d61079b575b5060a4947ff486bc8700000000000000000000000000000000000000000000000000000000855260045260245260445281606452608452fd5b3d60051c9060051c9080600302918082116107cc575b505060205a9101106107c35785610762565b833d81803e3d90fd5b8080600392028380020360091c920302010186806107b1565b9092813b156108c257604051926000947f23b872dd000000000000000000000000000000000000000000000000000000008652806004528160245282604452858060648180885af11561083e5750505050604052606052565b8593943d610881575b5060a4947ff486bc870000000000000000000000000000000000000000000000000000000085526004526024526044526064526001608452fd5b3d60051c9060051c9080600302918082116108a9575b505060205a9101106107c35785610847565b8080600392028380020360091c92030201018680610897565b507f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b929093833b156109fa57604051936080519160a0519360c051956000987ff242432a000000000000000000000000000000000000000000000000000000008a528060045281602452826044528360645260a06084528960a452898060c48180895af11561096d57505050505060805260a05260c052604052606052565b89949550883d6109b0575b5060a4957ff486bc87000000000000000000000000000000000000000000000000000000008652600452602452604452606452608452fd5b3d60051c9060051c9080600302918082116109e1575b505060205a9101106109d85786610978565b843d81803e3d90fd5b8080600392028380020360091c920302010187806109c6565b837f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b9190826020937f2eb2c2d600000000000000000000000000000000000000000000000000000000855260005b838110610a68575050505090506080604052565b82860192602490358301608080828a01843760a0918281018035918260061b9460e0860160a4526000610144870152856101040192866040019060c43760059380851b9160c090838201888601351490606086013514169284010135141615610bab573594853b15610b7f5750600080828d82895af115610af0575050505050600101610a54565b908a92913d610b37575b5050610128937fafc445e2000000000000000000000000000000000000000000000000000000006000526004526044526084908151019052016000fd5b3d821c911c90600381810292808311610b68575b505050825a910110610b5e578480610afa565b3d6000803e3d6000fd5b8080028380020360091c9203020101858080610b4b565b857f5f15d672000000000000000000000000000000000000000000000000000000006000526004526000fd5b7feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fdfea26469706673582212202e490d93d744ec3c60513ff515e1b5ba4801751166dfb42cd53a25d76767d3ae64736f6c634300080d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4CE34AA2 EQ PUSH2 0x66 JUMPI POP DUP1 PUSH4 0x899E104C EQ PUSH2 0x5D JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0x54 JUMPI PUSH4 0xC4E8FCB5 EQ PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x378 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x2C0 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x14F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x14B JUMPI PUSH2 0xB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH2 0xCE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x121 JUMPI JUMPDEST DUP3 DUP2 LT PUSH2 0x105 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CE34AA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x11B PUSH2 0x116 PUSH1 0x1 SWAP4 DUP7 DUP7 PUSH2 0x498 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST ADD PUSH2 0xD3 JUMP JUMPDEST PUSH32 0x6821B7DF00000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MSTORE PUSH1 0x4 PUSH1 0x80 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 PUSH1 0xC0 DUP6 MUL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x205 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x21E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x183 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x23C PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x296 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x27F JUMPI PUSH2 0x254 DUP5 DUP7 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x899E104C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x290 PUSH2 0x116 PUSH1 0x1 SWAP4 DUP6 DUP8 PUSH2 0x498 JUMP JUMPDEST ADD PUSH2 0x243 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6821B7DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE JUMPI PUSH2 0x310 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x183 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x296 JUMPI PUSH2 0x330 SWAP2 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x8DF25D9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x3B6 DUP3 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x46F JUMPI PUSH1 0x0 SWAP4 PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 SWAP3 DUP5 SWAP3 AND SWAP1 DUP2 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 MLOAD RETURN JUMPDEST PUSH1 0x4 DUP4 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0xC0 MUL ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x4E1 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xE JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x527 DUP2 PUSH2 0x35A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x535 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x53E DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x579 JUMPI DUP1 PUSH2 0x553 PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH2 0x560 PUSH1 0x40 DUP3 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0xA0 PUSH2 0x56E PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x678 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH2 0x584 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x58D DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x5FC JUMPI PUSH1 0x1 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SUB PUSH2 0x5D2 JUMPI DUP1 PUSH2 0x5AE PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH2 0x5BB PUSH1 0x40 DUP3 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x80 PUSH2 0x5C9 PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x3 PUSH2 0x607 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x64E JUMPI DUP1 PUSH2 0x625 PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST PUSH2 0x631 PUSH1 0x40 DUP4 ADD PUSH2 0x51D JUMP JUMPDEST PUSH2 0x63D PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH1 0x80 PUSH1 0xA0 DUP6 ADD CALLDATALOAD SWAP5 ADD CALLDATALOAD SWAP3 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE PUSH1 0x20 DUP7 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 DUP11 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND ISZERO PUSH2 0x6E2 JUMPI JUMPDEST POP POP POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP1 DUP7 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x6D4 JUMPI SWAP1 DUP8 SWAP6 SWAP7 SWAP2 ISZERO PUSH2 0x722 JUMPI PUSH1 0x24 DUP7 DUP9 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x75C JUMPI POP PUSH1 0x84 SWAP5 PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH2 0x79B JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE DUP2 PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x7CC JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x7C3 JUMPI DUP6 PUSH2 0x762 JUMP JUMPDEST DUP4 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 EXTCODESIZE ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP6 DUP1 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL ISZERO PUSH2 0x83E JUMPI POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP6 SWAP4 SWAP5 RETURNDATASIZE PUSH2 0x881 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x8A9 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x7C3 JUMPI DUP6 PUSH2 0x847 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x897 JUMP JUMPDEST POP PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP1 SWAP4 DUP4 EXTCODESIZE ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 MLOAD SWAP2 PUSH1 0xA0 MLOAD SWAP4 PUSH1 0xC0 MLOAD SWAP6 PUSH1 0x0 SWAP9 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP11 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE DUP10 PUSH1 0xA4 MSTORE DUP10 DUP1 PUSH1 0xC4 DUP2 DUP1 DUP10 GAS CALL ISZERO PUSH2 0x96D JUMPI POP POP POP POP POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP10 SWAP5 SWAP6 POP DUP9 RETURNDATASIZE PUSH2 0x9B0 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP6 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x9E1 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x9D8 JUMPI DUP7 PUSH2 0x978 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP8 DUP1 PUSH2 0x9C6 JUMP JUMPDEST DUP4 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x20 SWAP4 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA68 JUMPI POP POP POP POP SWAP1 POP PUSH1 0x80 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP3 DUP7 ADD SWAP3 PUSH1 0x24 SWAP1 CALLDATALOAD DUP4 ADD PUSH1 0x80 DUP1 DUP3 DUP11 ADD DUP5 CALLDATACOPY PUSH1 0xA0 SWAP2 DUP3 DUP2 ADD DUP1 CALLDATALOAD SWAP2 DUP3 PUSH1 0x6 SHL SWAP5 PUSH1 0xE0 DUP7 ADD PUSH1 0xA4 MSTORE PUSH1 0x0 PUSH2 0x144 DUP8 ADD MSTORE DUP6 PUSH2 0x104 ADD SWAP3 DUP7 PUSH1 0x40 ADD SWAP1 PUSH1 0xC4 CALLDATACOPY PUSH1 0x5 SWAP4 DUP1 DUP6 SHL SWAP2 PUSH1 0xC0 SWAP1 DUP4 DUP3 ADD DUP9 DUP7 ADD CALLDATALOAD EQ SWAP1 PUSH1 0x60 DUP7 ADD CALLDATALOAD EQ AND SWAP3 DUP5 ADD ADD CALLDATALOAD EQ AND ISZERO PUSH2 0xBAB JUMPI CALLDATALOAD SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0xB7F JUMPI POP PUSH1 0x0 DUP1 DUP3 DUP14 DUP3 DUP10 GAS CALL ISZERO PUSH2 0xAF0 JUMPI POP POP POP POP POP PUSH1 0x1 ADD PUSH2 0xA54 JUMP JUMPDEST SWAP1 DUP11 SWAP3 SWAP2 RETURNDATASIZE PUSH2 0xB37 JUMPI JUMPDEST POP POP PUSH2 0x128 SWAP4 PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x44 MSTORE PUSH1 0x84 SWAP1 DUP2 MLOAD ADD SWAP1 MSTORE ADD PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE DUP3 SHR SWAP2 SHR SWAP1 PUSH1 0x3 DUP2 DUP2 MUL SWAP3 DUP1 DUP4 GT PUSH2 0xB68 JUMPI JUMPDEST POP POP POP DUP3 GAS SWAP2 ADD LT PUSH2 0xB5E JUMPI DUP5 DUP1 PUSH2 0xAFA JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 DUP1 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP6 DUP1 DUP1 PUSH2 0xB4B JUMP JUMPDEST DUP6 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x49 0xD SWAP4 0xD7 DIFFICULTY 0xEC EXTCODECOPY PUSH1 0x51 EXTCODEHASH CREATE2 ISZERO 0xE1 0xB5 0xBA BASEFEE ADD PUSH22 0x1166DFB42CD53A25D76767D3AE64736F6C634300080D STOP CALLER ",
              "sourceMap": "1067:6423:0:-:0;;;;;;;;;-1:-1:-1;1067:6423:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2134:10;;1067:6423;;;;;2123:22;1067:6423;;;;;;2123:22;1067:6423;;;;2123:22;2119:77;;2405:26;;;;;;1067:6423;;;;;;;;2390:13;2545:12;2622:16;2545:12;1067:6423;2545:12;;;;:::i;:::-;2622:16;:::i;:::-;1067:6423;2390:13;;2119:77;2169:15;1067:6423;2169:15;1067:6423;;2169:15;1067:6423;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;4568:10;;;;-1:-1:-1;1067:6423:0;-1:-1:-1;1067:6423:0;;4557:22;1067:6423;;-1:-1:-1;1067:6423:0;;;4557:22;1067:6423;;;;4557:22;4553:77;;-1:-1:-1;4856:26:0;;;;;;5335:14;;;;:::i;:::-;1067:6423;;;;;;;;4841:13;4996:20;5081:16;4996:20;1067:6423;4996:20;;;;:::i;5081:16::-;1067:6423;4841:13;;4553:77;1067:6423;;;4603:15;;;;1067:6423;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3518:10;-1:-1:-1;1067:6423:0;-1:-1:-1;1067:6423:0;;;;-1:-1:-1;1067:6423:0;;;3507:22;3503:77;;3664:14;;;:::i;:::-;1067:6423;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5909:11;;;1067:6423;5895:10;:25;5891:84;;-1:-1:-1;1067:6423:0;6118:31;1067:6423;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6118:31;1067:6423;;5891:84;1067:6423;;;5944:19;;;;1067:6423;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;1067:6423:0;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::o;6320:1167::-;6477:21;6460:13;;;:::i;:::-;1067:6423;;;:::i;:::-;6460:38;6477:21;;6575:10;;;6607:11;6575:10;;;:::i;:::-;6587:9;;;;;;:::i;:::-;6607:11;6598:7;;;;;:::i;:::-;6607:11;;1067:6423;6607:11;;:::i;:::-;6320:1167::o;6456:1024::-;6658:22;6641:13;;;:::i;:::-;1067:6423;;;:::i;:::-;6641:39;6658:22;;6477:21;6772:11;;;1067:6423;6772:16;6768:93;;6957:10;;;7040:15;6957:10;;;:::i;:::-;6986:9;;;;;;:::i;:::-;7040:15;7014:7;;;;;:::i;:::-;7040:15;;1067:6423;7040:15;;:::i;6768:93::-;6816:29;1067:6423;;6816:29;;;;6637:843;7109:23;7092:13;;;:::i;:::-;1067:6423;;;:::i;:::-;7092:40;7109:23;;7231:10;;;7348:11;7231:10;;;:::i;:::-;7260:9;;;;;:::i;:::-;7288:7;;;;;:::i;:::-;7348:11;7314:15;7348:11;;;1067:6423;7314:15;;1067:6423;7348:11;;:::i;7088:392::-;7451:17;1067:6423;;7451:17;;;;806:9169:7;;;1032:8936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;806:9169;1032:8936;;;;;;;;;;806:9169::o;1032:8936::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10436:4785;;;10668:4546;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10436:4785::o;10668:4546::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15860:5461;;;;16119:5195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15860:5461::o;16119:5195::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21768:11425;;;21967:11219;;;;;;;;;;;;;;;;;;;;;;21768:11425::o;21967:11219::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "execute((uint8,address,address,address,uint256,uint256)[])": "4ce34aa2",
              "executeBatch1155((address,address,address,uint256[],uint256[])[])": "8df25d92",
              "executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": "899e104c",
              "updateChannel(address,bool)": "c4e8fcb5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChannelClosed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidItemType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"ChannelUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batchTransfers\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"standardTransfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batchTransfers\",\"type\":\"tuple[]\"}],\"name\":\"executeWithBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ChannelClosed()\":[{\"details\":\"Revert with an error when attempting to execute transfers using a      caller that does not have an open channel.\"}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidController()\":[{\"details\":\"Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller.\"}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"InvalidItemType()\":[{\"details\":\"Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}]},\"kind\":\"dev\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"params\":{\"transfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batchTransfers\":\"The 1155 batch transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batchTransfers\":\"The 1155 batch transfers to perform.\",\"standardTransfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"updateChannel(address,bool)\":{\"params\":{\"channel\":\"The channel to open or close.\",\"isOpen\":\"The status of the channel (either open or closed).\"}}},\"title\":\"Conduit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"In the constructor, set the deployer as the controller.\"},\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"notice\":\"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function.\"},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of batch 1155 transfers. Only a caller with an         open channel can call this function.\"},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of transfers, both single and batch 1155. Only         a caller with an open channel can call this function.\"},\"updateChannel(address,bool)\":{\"notice\":\"Open or close a given channel. Only callable by the controller.\"}},\"notice\":\"This contract serves as an originator for \\\"proxied\\\" transfers. Each         conduit is deployed and controlled by a \\\"conduit controller\\\" that can         add and remove \\\"channels\\\" or contracts that can instruct the conduit         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each         conduit has an owner that can arbitrarily add or remove channels, and         a malicious or negligent owner can add a channel that allows for any         approved ERC20/721/1155 tokens to be taken immediately \\u2014 be extremely         cautious with what conduits you give token approvals to!*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/conduit/Conduit.sol\":\"Conduit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/conduit/Conduit.sol\":{\"keccak256\":\"0xeee6a76b6658556c79fc6fafd4fff43f94487b7417b0effb07708030a92d3040\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ada6eaf17348dbd3636fd3dc3212bfe65fdb9f9ac355119f3f3c180946068c0\",\"dweb:/ipfs/QmXjttG2NiBfBPz7mQiXXPrVrVFXmg5StRmEdE92KkUBMc\"]},\"contracts/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x7e05a70aa7804d5706cba5e474c8256a8a330b13ded8c772994e5462737d1d4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11add326c46e94f8c6af0f108e80de4aa4e4a980a5d13e3888f91381f4e1abb5\",\"dweb:/ipfs/QmcmuyNUZu6kviwZz4MUneQ4LjopP4HakaYzNyGKxvy6x2\"]},\"contracts/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0x4e9b5d93c9c8152bb4e36ab0efb5dd6fdfe87c39f9304c4d64816f99577de82a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d4b93aba37f60a74a6d0960497f120e51e27eac72e5efca134073a777052fda\",\"dweb:/ipfs/Qmbnf5PrDEe2gt1j1cVqxLLnHfCNX1GFUqtoC3JaaWfsqh\"]},\"contracts/interfaces/ConduitInterface.sol\":{\"keccak256\":\"0x34c194fb1682018f805e2648d413d47a73e5bf217dfed630df0ccff3aafdfd5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fed599e81f6ef91b57caf28ea67644aa725c5e1318b0451e8021970b8b31ac5\",\"dweb:/ipfs/QmQPUfagWQno3oEH6UL5DpLUfttGQtdtbD3h3H7nM3aMFM\"]},\"contracts/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0xb25320c460e06b5963d2c993774f1d4992118793520f872537c9144c664671e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5245dc3aa0da94a0a6fb4e579635e65e0f73c1ec65c9b6fbdd27ca2bad55d775\",\"dweb:/ipfs/QmcWcXPHLaymEr8GEDWWHZT2CsZ9ChyQa7UeJhDGVfJpBM\"]},\"contracts/lib/TokenTransferrer.sol\":{\"keccak256\":\"0x73adc797c56698dc118239a68918e4e19ec39efaee35110cfa58b121c7e70d6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d995813b3ab986ba302a0ec3355925302185a6f8204faee84c9f6d6f9e885c\",\"dweb:/ipfs/QmeknXR7CJHysTtbT2AsdDo3BMAt63Y2AbhB4Drt3UPvVQ\"]},\"contracts/lib/TokenTransferrerConstants.sol\":{\"keccak256\":\"0xcb69d4d0aa7cf1d2e22afef98e8e2ee876014a0c3e9e73c70aba7fd3b2dbf145\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a52b7e57a8d8d64eea9be0c61911876af305a0d382aa0a4fe5993170665fbe43\",\"dweb:/ipfs/QmdznLgz54kboj45J3R9Tg5NyumhoAcDskvTyEkmXhkFn3\"]}},\"version\":1}"
        }
      },
      "contracts/conduit/ConduitController.sol": {
        "ConduitController": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "CallerIsNotNewPotentialOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "CallerIsNotOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "ChannelOutOfRange",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "ConduitAlreadyExists",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidCreator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "NewPotentialOwnerIsZeroAddress",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoConduit",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                }
              ],
              "name": "NewConduit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newPotentialOwner",
                  "type": "address"
                }
              ],
              "name": "PotentialOwnerUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "cancelOwnershipTransfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                }
              ],
              "name": "createConduit",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "channelIndex",
                  "type": "uint256"
                }
              ],
              "name": "getChannel",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                }
              ],
              "name": "getChannelStatus",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "getChannels",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "channels",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                }
              ],
              "name": "getConduit",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getConduitCodeHashes",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "creationCodeHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "runtimeCodeHash",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "getKey",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "getPotentialOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "potentialOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "getTotalChannels",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalChannels",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newPotentialOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "updateChannel",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "panic_error_0x41": {
                  "entryPoint": 239,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 262,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60c08060405234620000ea57600090610c34906001600160401b03603f8301601f1916820181811183821017620000da575b604052828252620021f19160208101908484833951902060805260405192839281840192831184841017620000ca575b8339039082f58015620000ba575b6001600160a01b03163f60a0526040516120dd90816200011482396080518181816102b101528181610b530152610c6f015260a0518181816102d401528181610be90152610d120152f35b620000c462000106565b6200006f565b620000d4620000ef565b62000061565b620000e4620000ef565b62000031565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b506040513d6000823e3d90fdfe60806040526004361015610013575b600080fd5b60003560e01c8063027cc7641461012b5780630a96ad391461012257806313ad9cab1461011957806314afd79e1461011057806333bc8572146101075780634e3f9580146100fe57806351710e45146100f55780636d435421146100ec5780636e9bfd9f146100e3578063794593bc146100da5780637b37e561146100d15780638b9e028b146100c8578063906c87cc146100bf576393790f44146100b757600080fd5b61000e611142565b5061000e6110ce565b5061000e611010565b5061000e610f07565b5061000e610c11565b5061000e610ac3565b5061000e6109a7565b5061000e61074b565b5061000e6106d9565b5061000e610635565b5061000e6105c1565b5061000e6102fa565b5061000e61027b565b5061000e61017a565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576101b2610134565b602435906101bf81611448565b73ffffffffffffffffffffffffffffffffffffffff80911691600083815280602052600360408220015482101561023f5790600360408361023b9661020a95528060205220016112d4565b90549060031b1c166040519182918291909173ffffffffffffffffffffffffffffffffffffffff6020820193169052565b0390f35b602484604051907f6ceb340b0000000000000000000000000000000000000000000000000000000082526004820152fd5b600091031261000e57565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57604080517f000000000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006020820152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57610332610134565b61033a610157565b90604435918215918215840361000e57610353816113d9565b73ffffffffffffffffffffffffffffffffffffffff811690813b1561000e576040517fc4e8fcb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201528515156024820152610401926000908290604490829084905af180156105b4575b61059b575b5073ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b92600484019261043183859073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b549182159080610594575b1561048157505050600361047d92930161045682826113a2565b54929073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b555b005b919493918161058b575b5061049257005b6104c561047d938560036104a7600098611278565b9201916104b48354611278565b908082036104ea575b50505061131b565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b61055c61052a9161052161050161058295886112d4565b905473ffffffffffffffffffffffffffffffffffffffff9160031b1c1690565b928391876112d4565b90919082549060031b9173ffffffffffffffffffffffffffffffffffffffff9283811b93849216901b16911916179055565b859073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b553880806104bd565b9050153861048b565b508061043c565b806105a86105ae92611209565b80610270565b386103da565b6105bc61126b565b6103d5565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206105fb610134565b61060481611448565b73ffffffffffffffffffffffffffffffffffffffff8091166000526000825260016040600020015416604051908152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206106ce610672610134565b73ffffffffffffffffffffffffffffffffffffffff61068f610157565b9161069981611448565b166000526000835260046040600020019073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541515604051908152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff610726610134565b61072f81611448565b1660005260006020526020600360406000200154604051908152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57610783610134565b61078c81611448565b6107f26107d960026107be8473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b330361095e578073ffffffffffffffffffffffffffffffffffffffff61047f92166000817fd4116aaf34f80123d0229f02f46f776b386a377dbb3404be10fdf4e81ba9cdb682604051a3610894600261086b8473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b017fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b33906108c86107d960016107be8673ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b907fc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec6000604051a4600161091d339273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6040517f88c3a11500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602490fd5b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576109df610134565b6109e7610157565b906109f1816113d9565b73ffffffffffffffffffffffffffffffffffffffff808316918215610a915792610a8f916000941660405193817fd4116aaf34f80123d0229f02f46f776b386a377dbb3404be10fdf4e81ba9cdb68787a3845283602052600260408520019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565bf35b602491604051917fa388d263000000000000000000000000000000000000000000000000000000008352166004820152fd5b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576040517fff00000000000000000000000000000000000000000000000000000000000000602082019081523060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260043560358301527f0000000000000000000000000000000000000000000000000000000000000000605583015273ffffffffffffffffffffffffffffffffffffffff91610bc281607581015b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183528261122a565b519020604080519290911673ffffffffffffffffffffffffffffffffffffffff811683523f7f000000000000000000000000000000000000000000000000000000000000000014602083015290f35b503461000e576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043590610c4e610157565b90338360601c03610ede57610d0d6107d982516020810190610cf181610b967f00000000000000000000000000000000000000000000000000000000000000008a3087917fffffffffffffffffffffffffffffffffffffffff000000000000000000000000605594927fff00000000000000000000000000000000000000000000000000000000000000855260601b166001840152601583015260358201520190565b51902073ffffffffffffffffffffffffffffffffffffffff1690565b92833f7f000000000000000000000000000000000000000000000000000000000000000014610e9857907f4397af6128d529b8ae0442f99db1296d5136062597a15bbc61c1b2a6431a7d15610e178361023b94845180610c348082019082821067ffffffffffffffff831117610e8b575b611474833903906000f515610e7e575b610dbe86600161091d8a73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b80610de98873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b55835173ffffffffffffffffffffffffffffffffffffffff8816815260208101919091529081906040820190565b0390a151928392600073ffffffffffffffffffffffffffffffffffffffff8092169183167fc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec8287a473ffffffffffffffffffffffffffffffffffffffff1682526020820190565b610e8661126b565b610d8e565b610e936111d9565b610d7e565b81517f6328ccb200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602490fd5b600490517fcb6e5344000000000000000000000000000000000000000000000000000000008152fd5b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff610f54610134565b610f5d816113d9565b1660405160009182817fd4116aaf34f80123d0229f02f46f776b386a377dbb3404be10fdf4e81ba9cdb68285a3825281602052600260408320017fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055f35b6020908160408183019282815285518094520193019160005b828110610fe6575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101610fd8565b503461000e576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57611049610134565b9061105382611448565b73ffffffffffffffffffffffffffffffffffffffff91826000911681528082526003604082200192604051908193808654938481520195845280842093915b8383106110b55761023b866110a9818a038261122a565b60405191829182610fbf565b8454811687529581019560019485019490920191611092565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576020611108610134565b61111181611448565b73ffffffffffffffffffffffffffffffffffffffff8091166000526000825260026040600020015416604051908152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff61118f610134565b16600052600060205260406000205480156111af57602090604051908152f35b60046040517f4ca82090000000000000000000000000000000000000000000000000000000008152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161121d57604052565b6112256111d9565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761121d57604052565b506040513d6000823e3d90fd5b600181106112a5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80548210156112ec5760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80548015611373577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019061135082826112d4565b73ffffffffffffffffffffffffffffffffffffffff82549160031b1b1916905555565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b9061052a6113ca92805490680100000000000000008210156113cc575b6001820181556112d4565b565b6113d46111d9565b6113bf565b6113e281611448565b73ffffffffffffffffffffffffffffffffffffffff809116908160005260006020526001604060002001541633036114175750565b602490604051907fd4ed9a170000000000000000000000000000000000000000000000000000000082526004820152fd5b73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002054156111af5756fe60a080604052346100235733608052610c0b90816100298239608051816103dd0152f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081634ce34aa21461006657508063899e104c1461005d5780638df25d92146100545763c4e8fcb51461004c57600080fd5b61000e610378565b5061000e6102c0565b5061000e6101b4565b3461014f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014f5760043567ffffffffffffffff811161014b576100b5903690600401610152565b91338152806020526100ce60ff60408320541615151590565b610121575b828110610105576040517f4ce34aa2000000000000000000000000000000000000000000000000000000008152602090f35b8061011b6101166001938686610498565b61052a565b016100d3565b7f6821b7df0000000000000000000000000000000000000000000000000000000060805260046080fd5b5080fd5b80fd5b9181601f8401121561000e5782359167ffffffffffffffff831161000e5760208085019460c0850201011161000e57565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e57610205903690600401610152565b9160243590811161000e5761021e903690600401610183565b91909233600052600060205261023c60ff6040600020541615151590565b6102965760005b81811061027f576102548486610a28565b6040517f899e104c000000000000000000000000000000000000000000000000000000008152602090f35b806102906101166001938587610498565b01610243565b60046040517f6821b7df000000000000000000000000000000000000000000000000000000008152fd5b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e57610310903690600401610183565b33600052600060205260ff60406000205416156102965761033091610a28565b60206040517f8df25d92000000000000000000000000000000000000000000000000000000008152f35b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435906103b68261035a565b6024359182151580930361000e5773ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361046f576000937fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e29284921690818652856020528286207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff831617905582519182526020820152a151f35b600483517f6d5769be000000000000000000000000000000000000000000000000000000008152fd5b91908110156104a85760c0020190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600411156104e157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b35600481101561000e5790565b356105278161035a565b90565b600161053582610510565b61053e816104d7565b0361057957806105536020610577930161051d565b906105606040820161051d565b60a061056e6060840161051d565b92013592610678565b565b600261058482610510565b61058d816104d7565b036105fc57600160a0820135036105d257806105ae6020610577930161051d565b906105bb6040820161051d565b60806105c96060840161051d565b920135926107e5565b60046040517fefcc00b1000000000000000000000000000000000000000000000000000000008152fd5b600361060782610510565b610610816104d7565b0361064e57806106256020610577930161051d565b6106316040830161051d565b61063d6060840161051d565b90608060a0850135940135926108f0565b60046040517f7932f1fc000000000000000000000000000000000000000000000000000000008152fd5b9092604051926000947f23b872dd00000000000000000000000000000000000000000000000000000000865280600452816024528260445260208660648180885af1803d15601f3d1160018a51141617163d15158116156106e2575b505050505050604052606052565b80863b1515166106d45790879596911561072257602486887f5f15d672000000000000000000000000000000000000000000000000000000008252600452fd5b1561075c57506084947f98891923000000000000000000000000000000000000000000000000000000008552600452602452604452606452fd5b3d61079b575b5060a4947ff486bc8700000000000000000000000000000000000000000000000000000000855260045260245260445281606452608452fd5b3d60051c9060051c9080600302918082116107cc575b505060205a9101106107c35785610762565b833d81803e3d90fd5b8080600392028380020360091c920302010186806107b1565b9092813b156108c257604051926000947f23b872dd000000000000000000000000000000000000000000000000000000008652806004528160245282604452858060648180885af11561083e5750505050604052606052565b8593943d610881575b5060a4947ff486bc870000000000000000000000000000000000000000000000000000000085526004526024526044526064526001608452fd5b3d60051c9060051c9080600302918082116108a9575b505060205a9101106107c35785610847565b8080600392028380020360091c92030201018680610897565b507f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b929093833b156109fa57604051936080519160a0519360c051956000987ff242432a000000000000000000000000000000000000000000000000000000008a528060045281602452826044528360645260a06084528960a452898060c48180895af11561096d57505050505060805260a05260c052604052606052565b89949550883d6109b0575b5060a4957ff486bc87000000000000000000000000000000000000000000000000000000008652600452602452604452606452608452fd5b3d60051c9060051c9080600302918082116109e1575b505060205a9101106109d85786610978565b843d81803e3d90fd5b8080600392028380020360091c920302010187806109c6565b837f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b9190826020937f2eb2c2d600000000000000000000000000000000000000000000000000000000855260005b838110610a68575050505090506080604052565b82860192602490358301608080828a01843760a0918281018035918260061b9460e0860160a4526000610144870152856101040192866040019060c43760059380851b9160c090838201888601351490606086013514169284010135141615610bab573594853b15610b7f5750600080828d82895af115610af0575050505050600101610a54565b908a92913d610b37575b5050610128937fafc445e2000000000000000000000000000000000000000000000000000000006000526004526044526084908151019052016000fd5b3d821c911c90600381810292808311610b68575b505050825a910110610b5e578480610afa565b3d6000803e3d6000fd5b8080028380020360091c9203020101858080610b4b565b857f5f15d672000000000000000000000000000000000000000000000000000000006000526004526000fd5b7feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fdfea26469706673582212202e490d93d744ec3c60513ff515e1b5ba4801751166dfb42cd53a25d76767d3ae64736f6c634300080d0033a2646970667358221220658abd754f34c828e06ba61269abdc5a62196b84f8bc78d46c0a10ef13a8aa9364736f6c634300080d003360a080604052346100235733608052610c0b90816100298239608051816103dd0152f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081634ce34aa21461006657508063899e104c1461005d5780638df25d92146100545763c4e8fcb51461004c57600080fd5b61000e610378565b5061000e6102c0565b5061000e6101b4565b3461014f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014f5760043567ffffffffffffffff811161014b576100b5903690600401610152565b91338152806020526100ce60ff60408320541615151590565b610121575b828110610105576040517f4ce34aa2000000000000000000000000000000000000000000000000000000008152602090f35b8061011b6101166001938686610498565b61052a565b016100d3565b7f6821b7df0000000000000000000000000000000000000000000000000000000060805260046080fd5b5080fd5b80fd5b9181601f8401121561000e5782359167ffffffffffffffff831161000e5760208085019460c0850201011161000e57565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e57610205903690600401610152565b9160243590811161000e5761021e903690600401610183565b91909233600052600060205261023c60ff6040600020541615151590565b6102965760005b81811061027f576102548486610a28565b6040517f899e104c000000000000000000000000000000000000000000000000000000008152602090f35b806102906101166001938587610498565b01610243565b60046040517f6821b7df000000000000000000000000000000000000000000000000000000008152fd5b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e57610310903690600401610183565b33600052600060205260ff60406000205416156102965761033091610a28565b60206040517f8df25d92000000000000000000000000000000000000000000000000000000008152f35b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435906103b68261035a565b6024359182151580930361000e5773ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361046f576000937fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e29284921690818652856020528286207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff831617905582519182526020820152a151f35b600483517f6d5769be000000000000000000000000000000000000000000000000000000008152fd5b91908110156104a85760c0020190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600411156104e157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b35600481101561000e5790565b356105278161035a565b90565b600161053582610510565b61053e816104d7565b0361057957806105536020610577930161051d565b906105606040820161051d565b60a061056e6060840161051d565b92013592610678565b565b600261058482610510565b61058d816104d7565b036105fc57600160a0820135036105d257806105ae6020610577930161051d565b906105bb6040820161051d565b60806105c96060840161051d565b920135926107e5565b60046040517fefcc00b1000000000000000000000000000000000000000000000000000000008152fd5b600361060782610510565b610610816104d7565b0361064e57806106256020610577930161051d565b6106316040830161051d565b61063d6060840161051d565b90608060a0850135940135926108f0565b60046040517f7932f1fc000000000000000000000000000000000000000000000000000000008152fd5b9092604051926000947f23b872dd00000000000000000000000000000000000000000000000000000000865280600452816024528260445260208660648180885af1803d15601f3d1160018a51141617163d15158116156106e2575b505050505050604052606052565b80863b1515166106d45790879596911561072257602486887f5f15d672000000000000000000000000000000000000000000000000000000008252600452fd5b1561075c57506084947f98891923000000000000000000000000000000000000000000000000000000008552600452602452604452606452fd5b3d61079b575b5060a4947ff486bc8700000000000000000000000000000000000000000000000000000000855260045260245260445281606452608452fd5b3d60051c9060051c9080600302918082116107cc575b505060205a9101106107c35785610762565b833d81803e3d90fd5b8080600392028380020360091c920302010186806107b1565b9092813b156108c257604051926000947f23b872dd000000000000000000000000000000000000000000000000000000008652806004528160245282604452858060648180885af11561083e5750505050604052606052565b8593943d610881575b5060a4947ff486bc870000000000000000000000000000000000000000000000000000000085526004526024526044526064526001608452fd5b3d60051c9060051c9080600302918082116108a9575b505060205a9101106107c35785610847565b8080600392028380020360091c92030201018680610897565b507f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b929093833b156109fa57604051936080519160a0519360c051956000987ff242432a000000000000000000000000000000000000000000000000000000008a528060045281602452826044528360645260a06084528960a452898060c48180895af11561096d57505050505060805260a05260c052604052606052565b89949550883d6109b0575b5060a4957ff486bc87000000000000000000000000000000000000000000000000000000008652600452602452604452606452608452fd5b3d60051c9060051c9080600302918082116109e1575b505060205a9101106109d85786610978565b843d81803e3d90fd5b8080600392028380020360091c920302010187806109c6565b837f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b9190826020937f2eb2c2d600000000000000000000000000000000000000000000000000000000855260005b838110610a68575050505090506080604052565b82860192602490358301608080828a01843760a0918281018035918260061b9460e0860160a4526000610144870152856101040192866040019060c43760059380851b9160c090838201888601351490606086013514169284010135141615610bab573594853b15610b7f5750600080828d82895af115610af0575050505050600101610a54565b908a92913d610b37575b5050610128937fafc445e2000000000000000000000000000000000000000000000000000000006000526004526044526084908151019052016000fd5b3d821c911c90600381810292808311610b68575b505050825a910110610b5e578480610afa565b3d6000803e3d6000fd5b8080028380020360091c9203020101858080610b4b565b857f5f15d672000000000000000000000000000000000000000000000000000000006000526004526000fd5b7feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fdfea26469706673582212202e490d93d744ec3c60513ff515e1b5ba4801751166dfb42cd53a25d76767d3ae64736f6c634300080d0033",
              "opcodes": "PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xEA JUMPI PUSH1 0x0 SWAP1 PUSH2 0xC34 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x3F DUP4 ADD PUSH1 0x1F NOT AND DUP3 ADD DUP2 DUP2 GT DUP4 DUP3 LT OR PUSH3 0xDA JUMPI JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP3 MSTORE PUSH3 0x21F1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 DUP5 DUP5 DUP4 CODECOPY MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP3 DUP4 GT DUP5 DUP5 LT OR PUSH3 0xCA JUMPI JUMPDEST DUP4 CODECOPY SUB SWAP1 DUP3 CREATE2 DUP1 ISZERO PUSH3 0xBA JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODEHASH PUSH1 0xA0 MSTORE PUSH1 0x40 MLOAD PUSH2 0x20DD SWAP1 DUP2 PUSH3 0x114 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2B1 ADD MSTORE DUP2 DUP2 PUSH2 0xB53 ADD MSTORE PUSH2 0xC6F ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x2D4 ADD MSTORE DUP2 DUP2 PUSH2 0xBE9 ADD MSTORE PUSH2 0xD12 ADD MSTORE RETURN JUMPDEST PUSH3 0xC4 PUSH3 0x106 JUMP JUMPDEST PUSH3 0x6F JUMP JUMPDEST PUSH3 0xD4 PUSH3 0xEF JUMP JUMPDEST PUSH3 0x61 JUMP JUMPDEST PUSH3 0xE4 PUSH3 0xEF JUMP JUMPDEST PUSH3 0x31 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27CC764 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xA96AD39 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x13AD9CAB EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x14AFD79E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x33BC8572 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x4E3F9580 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x51710E45 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x6D435421 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x6E9BFD9F EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x794593BC EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x7B37E561 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8B9E028B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x906C87CC EQ PUSH2 0xBF JUMPI PUSH4 0x93790F44 EQ PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x1142 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x10CE JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1010 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xF07 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xC11 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xAC3 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x9A7 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x74B JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x6D9 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x635 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x5C1 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x2FA JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x27B JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x17A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x1B2 PUSH2 0x134 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1BF DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 PUSH1 0x0 DUP4 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD DUP3 LT ISZERO PUSH2 0x23F JUMPI SWAP1 PUSH1 0x3 PUSH1 0x40 DUP4 PUSH2 0x23B SWAP7 PUSH2 0x20A SWAP6 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 ADD PUSH2 0x12D4 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD SWAP4 AND SWAP1 MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6CEB340B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 DUP2 MSTORE PUSH32 0x0 PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x332 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x33A PUSH2 0x157 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 ISZERO SWAP2 DUP3 ISZERO DUP5 SUB PUSH2 0xE JUMPI PUSH2 0x353 DUP2 PUSH2 0x13D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0xE JUMPI PUSH1 0x40 MLOAD PUSH32 0xC4E8FCB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE DUP6 ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x401 SWAP3 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x5B4 JUMPI JUMPDEST PUSH2 0x59B JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x4 DUP5 ADD SWAP3 PUSH2 0x431 DUP4 DUP6 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP2 DUP3 ISZERO SWAP1 DUP1 PUSH2 0x594 JUMPI JUMPDEST ISZERO PUSH2 0x481 JUMPI POP POP POP PUSH1 0x3 PUSH2 0x47D SWAP3 SWAP4 ADD PUSH2 0x456 DUP3 DUP3 PUSH2 0x13A2 JUMP JUMPDEST SLOAD SWAP3 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMPDEST STOP JUMPDEST SWAP2 SWAP5 SWAP4 SWAP2 DUP2 PUSH2 0x58B JUMPI JUMPDEST POP PUSH2 0x492 JUMPI STOP JUMPDEST PUSH2 0x4C5 PUSH2 0x47D SWAP4 DUP6 PUSH1 0x3 PUSH2 0x4A7 PUSH1 0x0 SWAP9 PUSH2 0x1278 JUMP JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x4B4 DUP4 SLOAD PUSH2 0x1278 JUMP JUMPDEST SWAP1 DUP1 DUP3 SUB PUSH2 0x4EA JUMPI JUMPDEST POP POP POP PUSH2 0x131B JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x55C PUSH2 0x52A SWAP2 PUSH2 0x521 PUSH2 0x501 PUSH2 0x582 SWAP6 DUP9 PUSH2 0x12D4 JUMP JUMPDEST SWAP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x3 SHL SHR AND SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x12D4 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP2 SHL SWAP4 DUP5 SWAP3 AND SWAP1 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP6 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x48B JUMP JUMPDEST POP DUP1 PUSH2 0x43C JUMP JUMPDEST DUP1 PUSH2 0x5A8 PUSH2 0x5AE SWAP3 PUSH2 0x1209 JUMP JUMPDEST DUP1 PUSH2 0x270 JUMP JUMPDEST CODESIZE PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x5BC PUSH2 0x126B JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH2 0x5FB PUSH2 0x134 JUMP JUMPDEST PUSH2 0x604 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH2 0x6CE PUSH2 0x672 PUSH2 0x134 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x68F PUSH2 0x157 JUMP JUMPDEST SWAP2 PUSH2 0x699 DUP2 PUSH2 0x1448 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x726 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x72F DUP2 PUSH2 0x1448 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x783 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x78C DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x7F2 PUSH2 0x7D9 PUSH1 0x2 PUSH2 0x7BE DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0x95E JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x47F SWAP3 AND PUSH1 0x0 DUP2 PUSH32 0xD4116AAF34F80123D0229F02F46F776B386A377DBB3404BE10FDF4E81BA9CDB6 DUP3 PUSH1 0x40 MLOAD LOG3 PUSH2 0x894 PUSH1 0x2 PUSH2 0x86B DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 PUSH2 0x8C8 PUSH2 0x7D9 PUSH1 0x1 PUSH2 0x7BE DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH32 0xC8894F26F396CE8C004245C8B7CD1B92103A6E4302FCBAB883987149AC01B7EC PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 PUSH1 0x1 PUSH2 0x91D CALLER SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x88C3A11500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x9DF PUSH2 0x134 JUMP JUMPDEST PUSH2 0x9E7 PUSH2 0x157 JUMP JUMPDEST SWAP1 PUSH2 0x9F1 DUP2 PUSH2 0x13D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP2 DUP3 ISZERO PUSH2 0xA91 JUMPI SWAP3 PUSH2 0xA8F SWAP2 PUSH1 0x0 SWAP5 AND PUSH1 0x40 MLOAD SWAP4 DUP2 PUSH32 0xD4116AAF34F80123D0229F02F46F776B386A377DBB3404BE10FDF4E81BA9CDB6 DUP8 DUP8 LOG3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP6 KECCAK256 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA388D26300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x40 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x60 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x35 DUP4 ADD MSTORE PUSH32 0x0 PUSH1 0x55 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH2 0xBC2 DUP2 PUSH1 0x75 DUP2 ADD JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x122A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE EXTCODEHASH PUSH32 0x0 EQ PUSH1 0x20 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xC4E PUSH2 0x157 JUMP JUMPDEST SWAP1 CALLER DUP4 PUSH1 0x60 SHR SUB PUSH2 0xEDE JUMPI PUSH2 0xD0D PUSH2 0x7D9 DUP3 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCF1 DUP2 PUSH2 0xB96 PUSH32 0x0 DUP11 ADDRESS DUP8 SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x55 SWAP5 SWAP3 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x60 SHL AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP3 DUP4 EXTCODEHASH PUSH32 0x0 EQ PUSH2 0xE98 JUMPI SWAP1 PUSH32 0x4397AF6128D529B8AE0442F99DB1296D5136062597A15BBC61C1B2A6431A7D15 PUSH2 0xE17 DUP4 PUSH2 0x23B SWAP5 DUP5 MLOAD DUP1 PUSH2 0xC34 DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0xE8B JUMPI JUMPDEST PUSH2 0x1474 DUP4 CODECOPY SUB SWAP1 PUSH1 0x0 CREATE2 ISZERO PUSH2 0xE7E JUMPI JUMPDEST PUSH2 0xDBE DUP7 PUSH1 0x1 PUSH2 0x91D DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 PUSH2 0xDE9 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x40 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP2 DUP4 AND PUSH32 0xC8894F26F396CE8C004245C8B7CD1B92103A6E4302FCBAB883987149AC01B7EC DUP3 DUP8 LOG4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0xE86 PUSH2 0x126B JUMP JUMPDEST PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xE93 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST DUP2 MLOAD PUSH32 0x6328CCB200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x4 SWAP1 MLOAD PUSH32 0xCB6E534400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF54 PUSH2 0x134 JUMP JUMPDEST PUSH2 0xF5D DUP2 PUSH2 0x13D9 JUMP JUMPDEST AND PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 DUP2 PUSH32 0xD4116AAF34F80123D0229F02F46F776B386A377DBB3404BE10FDF4E81BA9CDB6 DUP3 DUP6 LOG3 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP4 KECCAK256 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 SLOAD AND SWAP1 SSTORE RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xFE6 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xFD8 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x1049 PUSH2 0x134 JUMP JUMPDEST SWAP1 PUSH2 0x1053 DUP3 PUSH2 0x1448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x0 SWAP2 AND DUP2 MSTORE DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x40 DUP3 KECCAK256 ADD SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP4 DUP1 DUP7 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP6 DUP5 MSTORE DUP1 DUP5 KECCAK256 SWAP4 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x10B5 JUMPI PUSH2 0x23B DUP7 PUSH2 0x10A9 DUP2 DUP11 SUB DUP3 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xFBF JUMP JUMPDEST DUP5 SLOAD DUP2 AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1092 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH2 0x1108 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x1111 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x118F PUSH2 0x134 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x11AF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x4CA8209000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x121D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1225 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x121D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x12A5 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1373 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 PUSH2 0x1350 DUP3 DUP3 PUSH2 0x12D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x52A PUSH2 0x13CA SWAP3 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x13CC JUMPI JUMPDEST PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x12D4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13D4 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x13E2 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER SUB PUSH2 0x1417 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0xD4ED9A1700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x11AF JUMPI JUMP INVALID PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x23 JUMPI CALLER PUSH1 0x80 MSTORE PUSH2 0xC0B SWAP1 DUP2 PUSH2 0x29 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x3DD ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4CE34AA2 EQ PUSH2 0x66 JUMPI POP DUP1 PUSH4 0x899E104C EQ PUSH2 0x5D JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0x54 JUMPI PUSH4 0xC4E8FCB5 EQ PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x378 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x2C0 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x14F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x14B JUMPI PUSH2 0xB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH2 0xCE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x121 JUMPI JUMPDEST DUP3 DUP2 LT PUSH2 0x105 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CE34AA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x11B PUSH2 0x116 PUSH1 0x1 SWAP4 DUP7 DUP7 PUSH2 0x498 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST ADD PUSH2 0xD3 JUMP JUMPDEST PUSH32 0x6821B7DF00000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MSTORE PUSH1 0x4 PUSH1 0x80 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 PUSH1 0xC0 DUP6 MUL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x205 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x21E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x183 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x23C PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x296 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x27F JUMPI PUSH2 0x254 DUP5 DUP7 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x899E104C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x290 PUSH2 0x116 PUSH1 0x1 SWAP4 DUP6 DUP8 PUSH2 0x498 JUMP JUMPDEST ADD PUSH2 0x243 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6821B7DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE JUMPI PUSH2 0x310 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x183 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x296 JUMPI PUSH2 0x330 SWAP2 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x8DF25D9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x3B6 DUP3 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x46F JUMPI PUSH1 0x0 SWAP4 PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 SWAP3 DUP5 SWAP3 AND SWAP1 DUP2 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 MLOAD RETURN JUMPDEST PUSH1 0x4 DUP4 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0xC0 MUL ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x4E1 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xE JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x527 DUP2 PUSH2 0x35A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x535 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x53E DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x579 JUMPI DUP1 PUSH2 0x553 PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH2 0x560 PUSH1 0x40 DUP3 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0xA0 PUSH2 0x56E PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x678 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH2 0x584 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x58D DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x5FC JUMPI PUSH1 0x1 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SUB PUSH2 0x5D2 JUMPI DUP1 PUSH2 0x5AE PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH2 0x5BB PUSH1 0x40 DUP3 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x80 PUSH2 0x5C9 PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x3 PUSH2 0x607 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x64E JUMPI DUP1 PUSH2 0x625 PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST PUSH2 0x631 PUSH1 0x40 DUP4 ADD PUSH2 0x51D JUMP JUMPDEST PUSH2 0x63D PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH1 0x80 PUSH1 0xA0 DUP6 ADD CALLDATALOAD SWAP5 ADD CALLDATALOAD SWAP3 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE PUSH1 0x20 DUP7 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 DUP11 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND ISZERO PUSH2 0x6E2 JUMPI JUMPDEST POP POP POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP1 DUP7 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x6D4 JUMPI SWAP1 DUP8 SWAP6 SWAP7 SWAP2 ISZERO PUSH2 0x722 JUMPI PUSH1 0x24 DUP7 DUP9 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x75C JUMPI POP PUSH1 0x84 SWAP5 PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH2 0x79B JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE DUP2 PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x7CC JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x7C3 JUMPI DUP6 PUSH2 0x762 JUMP JUMPDEST DUP4 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 EXTCODESIZE ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP6 DUP1 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL ISZERO PUSH2 0x83E JUMPI POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP6 SWAP4 SWAP5 RETURNDATASIZE PUSH2 0x881 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x8A9 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x7C3 JUMPI DUP6 PUSH2 0x847 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x897 JUMP JUMPDEST POP PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP1 SWAP4 DUP4 EXTCODESIZE ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 MLOAD SWAP2 PUSH1 0xA0 MLOAD SWAP4 PUSH1 0xC0 MLOAD SWAP6 PUSH1 0x0 SWAP9 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP11 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE DUP10 PUSH1 0xA4 MSTORE DUP10 DUP1 PUSH1 0xC4 DUP2 DUP1 DUP10 GAS CALL ISZERO PUSH2 0x96D JUMPI POP POP POP POP POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP10 SWAP5 SWAP6 POP DUP9 RETURNDATASIZE PUSH2 0x9B0 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP6 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x9E1 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x9D8 JUMPI DUP7 PUSH2 0x978 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP8 DUP1 PUSH2 0x9C6 JUMP JUMPDEST DUP4 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x20 SWAP4 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA68 JUMPI POP POP POP POP SWAP1 POP PUSH1 0x80 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP3 DUP7 ADD SWAP3 PUSH1 0x24 SWAP1 CALLDATALOAD DUP4 ADD PUSH1 0x80 DUP1 DUP3 DUP11 ADD DUP5 CALLDATACOPY PUSH1 0xA0 SWAP2 DUP3 DUP2 ADD DUP1 CALLDATALOAD SWAP2 DUP3 PUSH1 0x6 SHL SWAP5 PUSH1 0xE0 DUP7 ADD PUSH1 0xA4 MSTORE PUSH1 0x0 PUSH2 0x144 DUP8 ADD MSTORE DUP6 PUSH2 0x104 ADD SWAP3 DUP7 PUSH1 0x40 ADD SWAP1 PUSH1 0xC4 CALLDATACOPY PUSH1 0x5 SWAP4 DUP1 DUP6 SHL SWAP2 PUSH1 0xC0 SWAP1 DUP4 DUP3 ADD DUP9 DUP7 ADD CALLDATALOAD EQ SWAP1 PUSH1 0x60 DUP7 ADD CALLDATALOAD EQ AND SWAP3 DUP5 ADD ADD CALLDATALOAD EQ AND ISZERO PUSH2 0xBAB JUMPI CALLDATALOAD SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0xB7F JUMPI POP PUSH1 0x0 DUP1 DUP3 DUP14 DUP3 DUP10 GAS CALL ISZERO PUSH2 0xAF0 JUMPI POP POP POP POP POP PUSH1 0x1 ADD PUSH2 0xA54 JUMP JUMPDEST SWAP1 DUP11 SWAP3 SWAP2 RETURNDATASIZE PUSH2 0xB37 JUMPI JUMPDEST POP POP PUSH2 0x128 SWAP4 PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x44 MSTORE PUSH1 0x84 SWAP1 DUP2 MLOAD ADD SWAP1 MSTORE ADD PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE DUP3 SHR SWAP2 SHR SWAP1 PUSH1 0x3 DUP2 DUP2 MUL SWAP3 DUP1 DUP4 GT PUSH2 0xB68 JUMPI JUMPDEST POP POP POP DUP3 GAS SWAP2 ADD LT PUSH2 0xB5E JUMPI DUP5 DUP1 PUSH2 0xAFA JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 DUP1 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP6 DUP1 DUP1 PUSH2 0xB4B JUMP JUMPDEST DUP6 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x49 0xD SWAP4 0xD7 DIFFICULTY 0xEC EXTCODECOPY PUSH1 0x51 EXTCODEHASH CREATE2 ISZERO 0xE1 0xB5 0xBA BASEFEE ADD PUSH22 0x1166DFB42CD53A25D76767D3AE64736F6C634300080D STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x8ABD754F34C8 0x28 0xE0 PUSH12 0xA61269ABDC5A62196B84F8BC PUSH25 0xD46C0A10EF13A8AA9364736F6C634300080D003360A0806040 MSTORE CALLVALUE PUSH2 0x23 JUMPI CALLER PUSH1 0x80 MSTORE PUSH2 0xC0B SWAP1 DUP2 PUSH2 0x29 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x3DD ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4CE34AA2 EQ PUSH2 0x66 JUMPI POP DUP1 PUSH4 0x899E104C EQ PUSH2 0x5D JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0x54 JUMPI PUSH4 0xC4E8FCB5 EQ PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x378 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x2C0 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x14F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x14B JUMPI PUSH2 0xB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH2 0xCE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x121 JUMPI JUMPDEST DUP3 DUP2 LT PUSH2 0x105 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CE34AA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x11B PUSH2 0x116 PUSH1 0x1 SWAP4 DUP7 DUP7 PUSH2 0x498 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST ADD PUSH2 0xD3 JUMP JUMPDEST PUSH32 0x6821B7DF00000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MSTORE PUSH1 0x4 PUSH1 0x80 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 PUSH1 0xC0 DUP6 MUL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x205 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x21E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x183 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x23C PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x296 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x27F JUMPI PUSH2 0x254 DUP5 DUP7 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x899E104C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x290 PUSH2 0x116 PUSH1 0x1 SWAP4 DUP6 DUP8 PUSH2 0x498 JUMP JUMPDEST ADD PUSH2 0x243 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6821B7DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE JUMPI PUSH2 0x310 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x183 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x296 JUMPI PUSH2 0x330 SWAP2 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x8DF25D9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x3B6 DUP3 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x46F JUMPI PUSH1 0x0 SWAP4 PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 SWAP3 DUP5 SWAP3 AND SWAP1 DUP2 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 MLOAD RETURN JUMPDEST PUSH1 0x4 DUP4 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0xC0 MUL ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x4E1 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xE JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x527 DUP2 PUSH2 0x35A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x535 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x53E DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x579 JUMPI DUP1 PUSH2 0x553 PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH2 0x560 PUSH1 0x40 DUP3 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0xA0 PUSH2 0x56E PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x678 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH2 0x584 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x58D DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x5FC JUMPI PUSH1 0x1 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SUB PUSH2 0x5D2 JUMPI DUP1 PUSH2 0x5AE PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH2 0x5BB PUSH1 0x40 DUP3 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x80 PUSH2 0x5C9 PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x3 PUSH2 0x607 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x64E JUMPI DUP1 PUSH2 0x625 PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST PUSH2 0x631 PUSH1 0x40 DUP4 ADD PUSH2 0x51D JUMP JUMPDEST PUSH2 0x63D PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH1 0x80 PUSH1 0xA0 DUP6 ADD CALLDATALOAD SWAP5 ADD CALLDATALOAD SWAP3 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE PUSH1 0x20 DUP7 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 DUP11 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND ISZERO PUSH2 0x6E2 JUMPI JUMPDEST POP POP POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP1 DUP7 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x6D4 JUMPI SWAP1 DUP8 SWAP6 SWAP7 SWAP2 ISZERO PUSH2 0x722 JUMPI PUSH1 0x24 DUP7 DUP9 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x75C JUMPI POP PUSH1 0x84 SWAP5 PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH2 0x79B JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE DUP2 PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x7CC JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x7C3 JUMPI DUP6 PUSH2 0x762 JUMP JUMPDEST DUP4 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 EXTCODESIZE ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP6 DUP1 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL ISZERO PUSH2 0x83E JUMPI POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP6 SWAP4 SWAP5 RETURNDATASIZE PUSH2 0x881 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x8A9 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x7C3 JUMPI DUP6 PUSH2 0x847 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x897 JUMP JUMPDEST POP PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP1 SWAP4 DUP4 EXTCODESIZE ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 MLOAD SWAP2 PUSH1 0xA0 MLOAD SWAP4 PUSH1 0xC0 MLOAD SWAP6 PUSH1 0x0 SWAP9 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP11 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE DUP10 PUSH1 0xA4 MSTORE DUP10 DUP1 PUSH1 0xC4 DUP2 DUP1 DUP10 GAS CALL ISZERO PUSH2 0x96D JUMPI POP POP POP POP POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP10 SWAP5 SWAP6 POP DUP9 RETURNDATASIZE PUSH2 0x9B0 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP6 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x9E1 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x9D8 JUMPI DUP7 PUSH2 0x978 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP8 DUP1 PUSH2 0x9C6 JUMP JUMPDEST DUP4 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x20 SWAP4 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA68 JUMPI POP POP POP POP SWAP1 POP PUSH1 0x80 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP3 DUP7 ADD SWAP3 PUSH1 0x24 SWAP1 CALLDATALOAD DUP4 ADD PUSH1 0x80 DUP1 DUP3 DUP11 ADD DUP5 CALLDATACOPY PUSH1 0xA0 SWAP2 DUP3 DUP2 ADD DUP1 CALLDATALOAD SWAP2 DUP3 PUSH1 0x6 SHL SWAP5 PUSH1 0xE0 DUP7 ADD PUSH1 0xA4 MSTORE PUSH1 0x0 PUSH2 0x144 DUP8 ADD MSTORE DUP6 PUSH2 0x104 ADD SWAP3 DUP7 PUSH1 0x40 ADD SWAP1 PUSH1 0xC4 CALLDATACOPY PUSH1 0x5 SWAP4 DUP1 DUP6 SHL SWAP2 PUSH1 0xC0 SWAP1 DUP4 DUP3 ADD DUP9 DUP7 ADD CALLDATALOAD EQ SWAP1 PUSH1 0x60 DUP7 ADD CALLDATALOAD EQ AND SWAP3 DUP5 ADD ADD CALLDATALOAD EQ AND ISZERO PUSH2 0xBAB JUMPI CALLDATALOAD SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0xB7F JUMPI POP PUSH1 0x0 DUP1 DUP3 DUP14 DUP3 DUP10 GAS CALL ISZERO PUSH2 0xAF0 JUMPI POP POP POP POP POP PUSH1 0x1 ADD PUSH2 0xA54 JUMP JUMPDEST SWAP1 DUP11 SWAP3 SWAP2 RETURNDATASIZE PUSH2 0xB37 JUMPI JUMPDEST POP POP PUSH2 0x128 SWAP4 PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x44 MSTORE PUSH1 0x84 SWAP1 DUP2 MLOAD ADD SWAP1 MSTORE ADD PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE DUP3 SHR SWAP2 SHR SWAP1 PUSH1 0x3 DUP2 DUP2 MUL SWAP3 DUP1 DUP4 GT PUSH2 0xB68 JUMPI JUMPDEST POP POP POP DUP3 GAS SWAP2 ADD LT PUSH2 0xB5E JUMPI DUP5 DUP1 PUSH2 0xAFA JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 DUP1 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP6 DUP1 DUP1 PUSH2 0xB4B JUMP JUMPDEST DUP6 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x49 0xD SWAP4 0xD7 DIFFICULTY 0xEC EXTCODECOPY PUSH1 0x51 EXTCODEHASH CREATE2 ISZERO 0xE1 0xB5 0xBA BASEFEE ADD PUSH22 0x1166DFB42CD53A25D76767D3AE64736F6C634300080D STOP CALLER ",
              "sourceMap": "575:18930:1:-:0;;;;;;;-1:-1:-1;;1295:26:1;;-1:-1:-1;;;;;575:18930:1;;;-1:-1:-1;;575:18930:1;;;;;;;;;;;;-1:-1:-1;575:18930:1;;1295:26;;;;;;;;;;;;;575:18930;1285:37;;1255:67;;575:18930;;;;;1418:33;;;;;;;;;;;;-1:-1:-1;1418:33:1;;;;;;;;;;-1:-1:-1;;;;;;575:18930:1;1572:29;575:18930;1543:58;575:18930;;;;;;;;1255:67;575:18930;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1418:33;;;:::i;:::-;;;;;;:::i;:::-;;;575:18930;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 624,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 308,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_4180": {
                  "entryPoint": 343,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_address_dyn": {
                  "entryPoint": 4031,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_packed_bytes1_address_bytes32_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "array_pop_array_address_dyn_storage_ptr": {
                  "entryPoint": 4891,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "array_push_from_address_to_array_address_dyn_storage_ptr": {
                  "entryPoint": 5026,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "checked_sub_uint256": {
                  "entryPoint": 4728,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_acceptOwnership": {
                  "entryPoint": 1867,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_cancelOwnershipTransfer": {
                  "entryPoint": 3847,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_createConduit": {
                  "entryPoint": 3089,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getChannel": {
                  "entryPoint": 378,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getChannelStatus": {
                  "entryPoint": 1589,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getChannels": {
                  "entryPoint": 4112,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getConduit": {
                  "entryPoint": 2755,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getConduitCodeHashes": {
                  "entryPoint": 635,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getKey": {
                  "entryPoint": 4418,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getPotentialOwner": {
                  "entryPoint": 4302,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getTotalChannels": {
                  "entryPoint": 1753,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_ownerOf": {
                  "entryPoint": 1473,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferOwnership": {
                  "entryPoint": 2471,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_updateChannel": {
                  "entryPoint": 762,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_dynamict_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 4650,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_4181": {
                  "entryPoint": 4617,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_assertCallerIsConduitOwner": {
                  "entryPoint": 5081,
                  "id": 976,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_assertConduitExists": {
                  "entryPoint": 5192,
                  "id": 997,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "mapping_index_access_mapping_address_struct_ConduitProperties_storage_of_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_struct_ConduitProperties_storage_of_address_4182": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_struct_ConduitProperties_storage_of_address_4191": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 4569,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_forward": {
                  "entryPoint": 4715,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 4820,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "update_storage_value_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_address_to_address_4193": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "311": [
                  {
                    "length": 32,
                    "start": 689
                  },
                  {
                    "length": 32,
                    "start": 2899
                  },
                  {
                    "length": 32,
                    "start": 3183
                  }
                ],
                "313": [
                  {
                    "length": 32,
                    "start": 724
                  },
                  {
                    "length": 32,
                    "start": 3049
                  },
                  {
                    "length": 32,
                    "start": 3346
                  }
                ]
              },
              "linkReferences": {},
              "object": "60806040526004361015610013575b600080fd5b60003560e01c8063027cc7641461012b5780630a96ad391461012257806313ad9cab1461011957806314afd79e1461011057806333bc8572146101075780634e3f9580146100fe57806351710e45146100f55780636d435421146100ec5780636e9bfd9f146100e3578063794593bc146100da5780637b37e561146100d15780638b9e028b146100c8578063906c87cc146100bf576393790f44146100b757600080fd5b61000e611142565b5061000e6110ce565b5061000e611010565b5061000e610f07565b5061000e610c11565b5061000e610ac3565b5061000e6109a7565b5061000e61074b565b5061000e6106d9565b5061000e610635565b5061000e6105c1565b5061000e6102fa565b5061000e61027b565b5061000e61017a565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576101b2610134565b602435906101bf81611448565b73ffffffffffffffffffffffffffffffffffffffff80911691600083815280602052600360408220015482101561023f5790600360408361023b9661020a95528060205220016112d4565b90549060031b1c166040519182918291909173ffffffffffffffffffffffffffffffffffffffff6020820193169052565b0390f35b602484604051907f6ceb340b0000000000000000000000000000000000000000000000000000000082526004820152fd5b600091031261000e57565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57604080517f000000000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006020820152f35b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57610332610134565b61033a610157565b90604435918215918215840361000e57610353816113d9565b73ffffffffffffffffffffffffffffffffffffffff811690813b1561000e576040517fc4e8fcb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201528515156024820152610401926000908290604490829084905af180156105b4575b61059b575b5073ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b92600484019261043183859073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b549182159080610594575b1561048157505050600361047d92930161045682826113a2565b54929073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b555b005b919493918161058b575b5061049257005b6104c561047d938560036104a7600098611278565b9201916104b48354611278565b908082036104ea575b50505061131b565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b61055c61052a9161052161050161058295886112d4565b905473ffffffffffffffffffffffffffffffffffffffff9160031b1c1690565b928391876112d4565b90919082549060031b9173ffffffffffffffffffffffffffffffffffffffff9283811b93849216901b16911916179055565b859073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b553880806104bd565b9050153861048b565b508061043c565b806105a86105ae92611209565b80610270565b386103da565b6105bc61126b565b6103d5565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206105fb610134565b61060481611448565b73ffffffffffffffffffffffffffffffffffffffff8091166000526000825260016040600020015416604051908152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206106ce610672610134565b73ffffffffffffffffffffffffffffffffffffffff61068f610157565b9161069981611448565b166000526000835260046040600020019073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541515604051908152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff610726610134565b61072f81611448565b1660005260006020526020600360406000200154604051908152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57610783610134565b61078c81611448565b6107f26107d960026107be8473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b330361095e578073ffffffffffffffffffffffffffffffffffffffff61047f92166000817fd4116aaf34f80123d0229f02f46f776b386a377dbb3404be10fdf4e81ba9cdb682604051a3610894600261086b8473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b017fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b33906108c86107d960016107be8673ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b907fc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec6000604051a4600161091d339273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6040517f88c3a11500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602490fd5b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576109df610134565b6109e7610157565b906109f1816113d9565b73ffffffffffffffffffffffffffffffffffffffff808316918215610a915792610a8f916000941660405193817fd4116aaf34f80123d0229f02f46f776b386a377dbb3404be10fdf4e81ba9cdb68787a3845283602052600260408520019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565bf35b602491604051917fa388d263000000000000000000000000000000000000000000000000000000008352166004820152fd5b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576040517fff00000000000000000000000000000000000000000000000000000000000000602082019081523060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602183015260043560358301527f0000000000000000000000000000000000000000000000000000000000000000605583015273ffffffffffffffffffffffffffffffffffffffff91610bc281607581015b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810183528261122a565b519020604080519290911673ffffffffffffffffffffffffffffffffffffffff811683523f7f000000000000000000000000000000000000000000000000000000000000000014602083015290f35b503461000e576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043590610c4e610157565b90338360601c03610ede57610d0d6107d982516020810190610cf181610b967f00000000000000000000000000000000000000000000000000000000000000008a3087917fffffffffffffffffffffffffffffffffffffffff000000000000000000000000605594927fff00000000000000000000000000000000000000000000000000000000000000855260601b166001840152601583015260358201520190565b51902073ffffffffffffffffffffffffffffffffffffffff1690565b92833f7f000000000000000000000000000000000000000000000000000000000000000014610e9857907f4397af6128d529b8ae0442f99db1296d5136062597a15bbc61c1b2a6431a7d15610e178361023b94845180610c348082019082821067ffffffffffffffff831117610e8b575b611474833903906000f515610e7e575b610dbe86600161091d8a73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b80610de98873ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b55835173ffffffffffffffffffffffffffffffffffffffff8816815260208101919091529081906040820190565b0390a151928392600073ffffffffffffffffffffffffffffffffffffffff8092169183167fc8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec8287a473ffffffffffffffffffffffffffffffffffffffff1682526020820190565b610e8661126b565b610d8e565b610e936111d9565b610d7e565b81517f6328ccb200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602490fd5b600490517fcb6e5344000000000000000000000000000000000000000000000000000000008152fd5b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff610f54610134565b610f5d816113d9565b1660405160009182817fd4116aaf34f80123d0229f02f46f776b386a377dbb3404be10fdf4e81ba9cdb68285a3825281602052600260408320017fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055f35b6020908160408183019282815285518094520193019160005b828110610fe6575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101610fd8565b503461000e576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57611049610134565b9061105382611448565b73ffffffffffffffffffffffffffffffffffffffff91826000911681528082526003604082200192604051908193808654938481520195845280842093915b8383106110b55761023b866110a9818a038261122a565b60405191829182610fbf565b8454811687529581019560019485019490920191611092565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576020611108610134565b61111181611448565b73ffffffffffffffffffffffffffffffffffffffff8091166000526000825260026040600020015416604051908152f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5773ffffffffffffffffffffffffffffffffffffffff61118f610134565b16600052600060205260406000205480156111af57602090604051908152f35b60046040517f4ca82090000000000000000000000000000000000000000000000000000000008152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161121d57604052565b6112256111d9565b604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761121d57604052565b506040513d6000823e3d90fd5b600181106112a5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80548210156112ec5760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80548015611373577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019061135082826112d4565b73ffffffffffffffffffffffffffffffffffffffff82549160031b1b1916905555565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b9061052a6113ca92805490680100000000000000008210156113cc575b6001820181556112d4565b565b6113d46111d9565b6113bf565b6113e281611448565b73ffffffffffffffffffffffffffffffffffffffff809116908160005260006020526001604060002001541633036114175750565b602490604051907fd4ed9a170000000000000000000000000000000000000000000000000000000082526004820152fd5b73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002054156111af5756fe60a080604052346100235733608052610c0b90816100298239608051816103dd0152f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081634ce34aa21461006657508063899e104c1461005d5780638df25d92146100545763c4e8fcb51461004c57600080fd5b61000e610378565b5061000e6102c0565b5061000e6101b4565b3461014f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014f5760043567ffffffffffffffff811161014b576100b5903690600401610152565b91338152806020526100ce60ff60408320541615151590565b610121575b828110610105576040517f4ce34aa2000000000000000000000000000000000000000000000000000000008152602090f35b8061011b6101166001938686610498565b61052a565b016100d3565b7f6821b7df0000000000000000000000000000000000000000000000000000000060805260046080fd5b5080fd5b80fd5b9181601f8401121561000e5782359167ffffffffffffffff831161000e5760208085019460c0850201011161000e57565b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020808501948460051b01011161000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5767ffffffffffffffff60043581811161000e57610205903690600401610152565b9160243590811161000e5761021e903690600401610183565b91909233600052600060205261023c60ff6040600020541615151590565b6102965760005b81811061027f576102548486610a28565b6040517f899e104c000000000000000000000000000000000000000000000000000000008152602090f35b806102906101166001938587610498565b01610243565b60046040517f6821b7df000000000000000000000000000000000000000000000000000000008152fd5b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e57610310903690600401610183565b33600052600060205260ff60406000205416156102965761033091610a28565b60206040517f8df25d92000000000000000000000000000000000000000000000000000000008152f35b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435906103b68261035a565b6024359182151580930361000e5773ffffffffffffffffffffffffffffffffffffffff90817f000000000000000000000000000000000000000000000000000000000000000016330361046f576000937fae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e29284921690818652856020528286207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff831617905582519182526020820152a151f35b600483517f6d5769be000000000000000000000000000000000000000000000000000000008152fd5b91908110156104a85760c0020190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600411156104e157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b35600481101561000e5790565b356105278161035a565b90565b600161053582610510565b61053e816104d7565b0361057957806105536020610577930161051d565b906105606040820161051d565b60a061056e6060840161051d565b92013592610678565b565b600261058482610510565b61058d816104d7565b036105fc57600160a0820135036105d257806105ae6020610577930161051d565b906105bb6040820161051d565b60806105c96060840161051d565b920135926107e5565b60046040517fefcc00b1000000000000000000000000000000000000000000000000000000008152fd5b600361060782610510565b610610816104d7565b0361064e57806106256020610577930161051d565b6106316040830161051d565b61063d6060840161051d565b90608060a0850135940135926108f0565b60046040517f7932f1fc000000000000000000000000000000000000000000000000000000008152fd5b9092604051926000947f23b872dd00000000000000000000000000000000000000000000000000000000865280600452816024528260445260208660648180885af1803d15601f3d1160018a51141617163d15158116156106e2575b505050505050604052606052565b80863b1515166106d45790879596911561072257602486887f5f15d672000000000000000000000000000000000000000000000000000000008252600452fd5b1561075c57506084947f98891923000000000000000000000000000000000000000000000000000000008552600452602452604452606452fd5b3d61079b575b5060a4947ff486bc8700000000000000000000000000000000000000000000000000000000855260045260245260445281606452608452fd5b3d60051c9060051c9080600302918082116107cc575b505060205a9101106107c35785610762565b833d81803e3d90fd5b8080600392028380020360091c920302010186806107b1565b9092813b156108c257604051926000947f23b872dd000000000000000000000000000000000000000000000000000000008652806004528160245282604452858060648180885af11561083e5750505050604052606052565b8593943d610881575b5060a4947ff486bc870000000000000000000000000000000000000000000000000000000085526004526024526044526064526001608452fd5b3d60051c9060051c9080600302918082116108a9575b505060205a9101106107c35785610847565b8080600392028380020360091c92030201018680610897565b507f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b929093833b156109fa57604051936080519160a0519360c051956000987ff242432a000000000000000000000000000000000000000000000000000000008a528060045281602452826044528360645260a06084528960a452898060c48180895af11561096d57505050505060805260a05260c052604052606052565b89949550883d6109b0575b5060a4957ff486bc87000000000000000000000000000000000000000000000000000000008652600452602452604452606452608452fd5b3d60051c9060051c9080600302918082116109e1575b505060205a9101106109d85786610978565b843d81803e3d90fd5b8080600392028380020360091c920302010187806109c6565b837f5f15d6720000000000000000000000000000000000000000000000000000000060005260045260246000fd5b9190826020937f2eb2c2d600000000000000000000000000000000000000000000000000000000855260005b838110610a68575050505090506080604052565b82860192602490358301608080828a01843760a0918281018035918260061b9460e0860160a4526000610144870152856101040192866040019060c43760059380851b9160c090838201888601351490606086013514169284010135141615610bab573594853b15610b7f5750600080828d82895af115610af0575050505050600101610a54565b908a92913d610b37575b5050610128937fafc445e2000000000000000000000000000000000000000000000000000000006000526004526044526084908151019052016000fd5b3d821c911c90600381810292808311610b68575b505050825a910110610b5e578480610afa565b3d6000803e3d6000fd5b8080028380020360091c9203020101858080610b4b565b857f5f15d672000000000000000000000000000000000000000000000000000000006000526004526000fd5b7feba2084c0000000000000000000000000000000000000000000000000000000060005260046000fdfea26469706673582212202e490d93d744ec3c60513ff515e1b5ba4801751166dfb42cd53a25d76767d3ae64736f6c634300080d0033a2646970667358221220658abd754f34c828e06ba61269abdc5a62196b84f8bc78d46c0a10ef13a8aa9364736f6c634300080d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27CC764 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xA96AD39 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x13AD9CAB EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x14AFD79E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x33BC8572 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x4E3F9580 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x51710E45 EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0x6D435421 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x6E9BFD9F EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x794593BC EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x7B37E561 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x8B9E028B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x906C87CC EQ PUSH2 0xBF JUMPI PUSH4 0x93790F44 EQ PUSH2 0xB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x1142 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x10CE JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1010 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xF07 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xC11 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0xAC3 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x9A7 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x74B JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x6D9 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x635 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x5C1 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x2FA JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x27B JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x17A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x1B2 PUSH2 0x134 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1BF DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 PUSH1 0x0 DUP4 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD DUP3 LT ISZERO PUSH2 0x23F JUMPI SWAP1 PUSH1 0x3 PUSH1 0x40 DUP4 PUSH2 0x23B SWAP7 PUSH2 0x20A SWAP6 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 ADD PUSH2 0x12D4 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD SWAP4 AND SWAP1 MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x6CEB340B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 DUP2 MSTORE PUSH32 0x0 PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x332 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x33A PUSH2 0x157 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 DUP3 ISZERO SWAP2 DUP3 ISZERO DUP5 SUB PUSH2 0xE JUMPI PUSH2 0x353 DUP2 PUSH2 0x13D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0xE JUMPI PUSH1 0x40 MLOAD PUSH32 0xC4E8FCB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE DUP6 ISZERO ISZERO PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x401 SWAP3 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x5B4 JUMPI JUMPDEST PUSH2 0x59B JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x4 DUP5 ADD SWAP3 PUSH2 0x431 DUP4 DUP6 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP2 DUP3 ISZERO SWAP1 DUP1 PUSH2 0x594 JUMPI JUMPDEST ISZERO PUSH2 0x481 JUMPI POP POP POP PUSH1 0x3 PUSH2 0x47D SWAP3 SWAP4 ADD PUSH2 0x456 DUP3 DUP3 PUSH2 0x13A2 JUMP JUMPDEST SLOAD SWAP3 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMPDEST STOP JUMPDEST SWAP2 SWAP5 SWAP4 SWAP2 DUP2 PUSH2 0x58B JUMPI JUMPDEST POP PUSH2 0x492 JUMPI STOP JUMPDEST PUSH2 0x4C5 PUSH2 0x47D SWAP4 DUP6 PUSH1 0x3 PUSH2 0x4A7 PUSH1 0x0 SWAP9 PUSH2 0x1278 JUMP JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x4B4 DUP4 SLOAD PUSH2 0x1278 JUMP JUMPDEST SWAP1 DUP1 DUP3 SUB PUSH2 0x4EA JUMPI JUMPDEST POP POP POP PUSH2 0x131B JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x55C PUSH2 0x52A SWAP2 PUSH2 0x521 PUSH2 0x501 PUSH2 0x582 SWAP6 DUP9 PUSH2 0x12D4 JUMP JUMPDEST SWAP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x3 SHL SHR AND SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x12D4 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP2 SHL SWAP4 DUP5 SWAP3 AND SWAP1 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP6 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x4BD JUMP JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x48B JUMP JUMPDEST POP DUP1 PUSH2 0x43C JUMP JUMPDEST DUP1 PUSH2 0x5A8 PUSH2 0x5AE SWAP3 PUSH2 0x1209 JUMP JUMPDEST DUP1 PUSH2 0x270 JUMP JUMPDEST CODESIZE PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x5BC PUSH2 0x126B JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH2 0x5FB PUSH2 0x134 JUMP JUMPDEST PUSH2 0x604 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH2 0x6CE PUSH2 0x672 PUSH2 0x134 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x68F PUSH2 0x157 JUMP JUMPDEST SWAP2 PUSH2 0x699 DUP2 PUSH2 0x1448 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x726 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x72F DUP2 PUSH2 0x1448 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x783 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x78C DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x7F2 PUSH2 0x7D9 PUSH1 0x2 PUSH2 0x7BE DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0x95E JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x47F SWAP3 AND PUSH1 0x0 DUP2 PUSH32 0xD4116AAF34F80123D0229F02F46F776B386A377DBB3404BE10FDF4E81BA9CDB6 DUP3 PUSH1 0x40 MLOAD LOG3 PUSH2 0x894 PUSH1 0x2 PUSH2 0x86B DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 PUSH2 0x8C8 PUSH2 0x7D9 PUSH1 0x1 PUSH2 0x7BE DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH32 0xC8894F26F396CE8C004245C8B7CD1B92103A6E4302FCBAB883987149AC01B7EC PUSH1 0x0 PUSH1 0x40 MLOAD LOG4 PUSH1 0x1 PUSH2 0x91D CALLER SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x88C3A11500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x9DF PUSH2 0x134 JUMP JUMPDEST PUSH2 0x9E7 PUSH2 0x157 JUMP JUMPDEST SWAP1 PUSH2 0x9F1 DUP2 PUSH2 0x13D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP2 DUP3 ISZERO PUSH2 0xA91 JUMPI SWAP3 PUSH2 0xA8F SWAP2 PUSH1 0x0 SWAP5 AND PUSH1 0x40 MLOAD SWAP4 DUP2 PUSH32 0xD4116AAF34F80123D0229F02F46F776B386A377DBB3404BE10FDF4E81BA9CDB6 DUP8 DUP8 LOG3 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP6 KECCAK256 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST RETURN JUMPDEST PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH32 0xA388D26300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x40 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x60 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 AND PUSH1 0x21 DUP4 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x35 DUP4 ADD MSTORE PUSH32 0x0 PUSH1 0x55 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH2 0xBC2 DUP2 PUSH1 0x75 DUP2 ADD JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x122A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE EXTCODEHASH PUSH32 0x0 EQ PUSH1 0x20 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xC4E PUSH2 0x157 JUMP JUMPDEST SWAP1 CALLER DUP4 PUSH1 0x60 SHR SUB PUSH2 0xEDE JUMPI PUSH2 0xD0D PUSH2 0x7D9 DUP3 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCF1 DUP2 PUSH2 0xB96 PUSH32 0x0 DUP11 ADDRESS DUP8 SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x55 SWAP5 SWAP3 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x60 SHL AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD MSTORE PUSH1 0x35 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP3 DUP4 EXTCODEHASH PUSH32 0x0 EQ PUSH2 0xE98 JUMPI SWAP1 PUSH32 0x4397AF6128D529B8AE0442F99DB1296D5136062597A15BBC61C1B2A6431A7D15 PUSH2 0xE17 DUP4 PUSH2 0x23B SWAP5 DUP5 MLOAD DUP1 PUSH2 0xC34 DUP1 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0xE8B JUMPI JUMPDEST PUSH2 0x1474 DUP4 CODECOPY SUB SWAP1 PUSH1 0x0 CREATE2 ISZERO PUSH2 0xE7E JUMPI JUMPDEST PUSH2 0xDBE DUP7 PUSH1 0x1 PUSH2 0x91D DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 PUSH2 0xDE9 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x40 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP2 DUP4 AND PUSH32 0xC8894F26F396CE8C004245C8B7CD1B92103A6E4302FCBAB883987149AC01B7EC DUP3 DUP8 LOG4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0xE86 PUSH2 0x126B JUMP JUMPDEST PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xE93 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST DUP2 MLOAD PUSH32 0x6328CCB200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x4 SWAP1 MLOAD PUSH32 0xCB6E534400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF54 PUSH2 0x134 JUMP JUMPDEST PUSH2 0xF5D DUP2 PUSH2 0x13D9 JUMP JUMPDEST AND PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 DUP2 PUSH32 0xD4116AAF34F80123D0229F02F46F776B386A377DBB3404BE10FDF4E81BA9CDB6 DUP3 DUP6 LOG3 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP4 KECCAK256 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 SLOAD AND SWAP1 SSTORE RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xFE6 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xFD8 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH2 0x1049 PUSH2 0x134 JUMP JUMPDEST SWAP1 PUSH2 0x1053 DUP3 PUSH2 0x1448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH1 0x0 SWAP2 AND DUP2 MSTORE DUP1 DUP3 MSTORE PUSH1 0x3 PUSH1 0x40 DUP3 KECCAK256 ADD SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP4 DUP1 DUP7 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP6 DUP5 MSTORE DUP1 DUP5 KECCAK256 SWAP4 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x10B5 JUMPI PUSH2 0x23B DUP7 PUSH2 0x10A9 DUP2 DUP11 SUB DUP3 PUSH2 0x122A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xFBF JUMP JUMPDEST DUP5 SLOAD DUP2 AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1092 JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x20 PUSH2 0x1108 PUSH2 0x134 JUMP JUMPDEST PUSH2 0x1111 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x118F PUSH2 0x134 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x11AF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x4CA8209000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x121D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1225 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x121D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x12A5 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1373 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 PUSH2 0x1350 DUP3 DUP3 PUSH2 0x12D4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x52A PUSH2 0x13CA SWAP3 DUP1 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x13CC JUMPI JUMPDEST PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x12D4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x13D4 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x13E2 DUP2 PUSH2 0x1448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER SUB PUSH2 0x1417 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0xD4ED9A1700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x11AF JUMPI JUMP INVALID PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x23 JUMPI CALLER PUSH1 0x80 MSTORE PUSH2 0xC0B SWAP1 DUP2 PUSH2 0x29 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x3DD ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4CE34AA2 EQ PUSH2 0x66 JUMPI POP DUP1 PUSH4 0x899E104C EQ PUSH2 0x5D JUMPI DUP1 PUSH4 0x8DF25D92 EQ PUSH2 0x54 JUMPI PUSH4 0xC4E8FCB5 EQ PUSH2 0x4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE PUSH2 0x378 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x2C0 JUMP JUMPDEST POP PUSH2 0xE PUSH2 0x1B4 JUMP JUMPDEST CALLVALUE PUSH2 0x14F JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x14F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x14B JUMPI PUSH2 0xB5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH2 0xCE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND ISZERO ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x121 JUMPI JUMPDEST DUP3 DUP2 LT PUSH2 0x105 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4CE34AA200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x11B PUSH2 0x116 PUSH1 0x1 SWAP4 DUP7 DUP7 PUSH2 0x498 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST ADD PUSH2 0xD3 JUMP JUMPDEST PUSH32 0x6821B7DF00000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MSTORE PUSH1 0x4 PUSH1 0x80 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 PUSH1 0xC0 DUP6 MUL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xE JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xE JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x205 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x152 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xE JUMPI PUSH2 0x21E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x183 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH2 0x23C PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x296 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x27F JUMPI PUSH2 0x254 DUP5 DUP7 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x899E104C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 PUSH2 0x290 PUSH2 0x116 PUSH1 0x1 SWAP4 DUP6 DUP8 PUSH2 0x498 JUMP JUMPDEST ADD PUSH2 0x243 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x6821B7DF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE JUMPI PUSH2 0x310 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x183 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x296 JUMPI PUSH2 0x330 SWAP2 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x8DF25D9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE RETURN JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0xE JUMPI JUMP JUMPDEST POP CALLVALUE PUSH2 0xE JUMPI PUSH1 0x40 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x3B6 DUP3 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0xE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH32 0x0 AND CALLER SUB PUSH2 0x46F JUMPI PUSH1 0x0 SWAP4 PUSH32 0xAE63067D43AC07563B7EB8DB6595635FC77F1578A2A5EA06BA91B63E2AFA37E2 SWAP3 DUP5 SWAP3 AND SWAP1 DUP2 DUP7 MSTORE DUP6 PUSH1 0x20 MSTORE DUP3 DUP7 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 MLOAD RETURN JUMPDEST PUSH1 0x4 DUP4 MLOAD PUSH32 0x6D5769BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x4A8 JUMPI PUSH1 0xC0 MUL ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x4E1 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xE JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x527 DUP2 PUSH2 0x35A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x535 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x53E DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x579 JUMPI DUP1 PUSH2 0x553 PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH2 0x560 PUSH1 0x40 DUP3 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0xA0 PUSH2 0x56E PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x678 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH2 0x584 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x58D DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x5FC JUMPI PUSH1 0x1 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SUB PUSH2 0x5D2 JUMPI DUP1 PUSH2 0x5AE PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH2 0x5BB PUSH1 0x40 DUP3 ADD PUSH2 0x51D JUMP JUMPDEST PUSH1 0x80 PUSH2 0x5C9 PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP3 PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEFCC00B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x3 PUSH2 0x607 DUP3 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x610 DUP2 PUSH2 0x4D7 JUMP JUMPDEST SUB PUSH2 0x64E JUMPI DUP1 PUSH2 0x625 PUSH1 0x20 PUSH2 0x577 SWAP4 ADD PUSH2 0x51D JUMP JUMPDEST PUSH2 0x631 PUSH1 0x40 DUP4 ADD PUSH2 0x51D JUMP JUMPDEST PUSH2 0x63D PUSH1 0x60 DUP5 ADD PUSH2 0x51D JUMP JUMPDEST SWAP1 PUSH1 0x80 PUSH1 0xA0 DUP6 ADD CALLDATALOAD SWAP5 ADD CALLDATALOAD SWAP3 PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7932F1FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE PUSH1 0x20 DUP7 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL DUP1 RETURNDATASIZE ISZERO PUSH1 0x1F RETURNDATASIZE GT PUSH1 0x1 DUP11 MLOAD EQ AND OR AND RETURNDATASIZE ISZERO ISZERO DUP2 AND ISZERO PUSH2 0x6E2 JUMPI JUMPDEST POP POP POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP1 DUP7 EXTCODESIZE ISZERO ISZERO AND PUSH2 0x6D4 JUMPI SWAP1 DUP8 SWAP6 SWAP7 SWAP2 ISZERO PUSH2 0x722 JUMPI PUSH1 0x24 DUP7 DUP9 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST ISZERO PUSH2 0x75C JUMPI POP PUSH1 0x84 SWAP5 PUSH32 0x9889192300000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH2 0x79B JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE DUP2 PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x7CC JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x7C3 JUMPI DUP6 PUSH2 0x762 JUMP JUMPDEST DUP4 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x7B1 JUMP JUMPDEST SWAP1 SWAP3 DUP2 EXTCODESIZE ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH1 0x0 SWAP5 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP6 DUP1 PUSH1 0x64 DUP2 DUP1 DUP9 GAS CALL ISZERO PUSH2 0x83E JUMPI POP POP POP POP PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP6 SWAP4 SWAP5 RETURNDATASIZE PUSH2 0x881 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP5 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x1 PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x8A9 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x7C3 JUMPI DUP6 PUSH2 0x847 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP7 DUP1 PUSH2 0x897 JUMP JUMPDEST POP PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP1 SWAP4 DUP4 EXTCODESIZE ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 MLOAD SWAP2 PUSH1 0xA0 MLOAD SWAP4 PUSH1 0xC0 MLOAD SWAP6 PUSH1 0x0 SWAP9 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP11 MSTORE DUP1 PUSH1 0x4 MSTORE DUP2 PUSH1 0x24 MSTORE DUP3 PUSH1 0x44 MSTORE DUP4 PUSH1 0x64 MSTORE PUSH1 0xA0 PUSH1 0x84 MSTORE DUP10 PUSH1 0xA4 MSTORE DUP10 DUP1 PUSH1 0xC4 DUP2 DUP1 DUP10 GAS CALL ISZERO PUSH2 0x96D JUMPI POP POP POP POP POP PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 MSTORE PUSH1 0x60 MSTORE JUMP JUMPDEST DUP10 SWAP5 SWAP6 POP DUP9 RETURNDATASIZE PUSH2 0x9B0 JUMPI JUMPDEST POP PUSH1 0xA4 SWAP6 PUSH32 0xF486BC8700000000000000000000000000000000000000000000000000000000 DUP7 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 MSTORE PUSH1 0x84 MSTORE REVERT JUMPDEST RETURNDATASIZE PUSH1 0x5 SHR SWAP1 PUSH1 0x5 SHR SWAP1 DUP1 PUSH1 0x3 MUL SWAP2 DUP1 DUP3 GT PUSH2 0x9E1 JUMPI JUMPDEST POP POP PUSH1 0x20 GAS SWAP2 ADD LT PUSH2 0x9D8 JUMPI DUP7 PUSH2 0x978 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP2 DUP1 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x3 SWAP3 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP8 DUP1 PUSH2 0x9C6 JUMP JUMPDEST DUP4 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x20 SWAP4 PUSH32 0x2EB2C2D600000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA68 JUMPI POP POP POP POP SWAP1 POP PUSH1 0x80 PUSH1 0x40 MSTORE JUMP JUMPDEST DUP3 DUP7 ADD SWAP3 PUSH1 0x24 SWAP1 CALLDATALOAD DUP4 ADD PUSH1 0x80 DUP1 DUP3 DUP11 ADD DUP5 CALLDATACOPY PUSH1 0xA0 SWAP2 DUP3 DUP2 ADD DUP1 CALLDATALOAD SWAP2 DUP3 PUSH1 0x6 SHL SWAP5 PUSH1 0xE0 DUP7 ADD PUSH1 0xA4 MSTORE PUSH1 0x0 PUSH2 0x144 DUP8 ADD MSTORE DUP6 PUSH2 0x104 ADD SWAP3 DUP7 PUSH1 0x40 ADD SWAP1 PUSH1 0xC4 CALLDATACOPY PUSH1 0x5 SWAP4 DUP1 DUP6 SHL SWAP2 PUSH1 0xC0 SWAP1 DUP4 DUP3 ADD DUP9 DUP7 ADD CALLDATALOAD EQ SWAP1 PUSH1 0x60 DUP7 ADD CALLDATALOAD EQ AND SWAP3 DUP5 ADD ADD CALLDATALOAD EQ AND ISZERO PUSH2 0xBAB JUMPI CALLDATALOAD SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0xB7F JUMPI POP PUSH1 0x0 DUP1 DUP3 DUP14 DUP3 DUP10 GAS CALL ISZERO PUSH2 0xAF0 JUMPI POP POP POP POP POP PUSH1 0x1 ADD PUSH2 0xA54 JUMP JUMPDEST SWAP1 DUP11 SWAP3 SWAP2 RETURNDATASIZE PUSH2 0xB37 JUMPI JUMPDEST POP POP PUSH2 0x128 SWAP4 PUSH32 0xAFC445E200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x44 MSTORE PUSH1 0x84 SWAP1 DUP2 MLOAD ADD SWAP1 MSTORE ADD PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE DUP3 SHR SWAP2 SHR SWAP1 PUSH1 0x3 DUP2 DUP2 MUL SWAP3 DUP1 DUP4 GT PUSH2 0xB68 JUMPI JUMPDEST POP POP POP DUP3 GAS SWAP2 ADD LT PUSH2 0xB5E JUMPI DUP5 DUP1 PUSH2 0xAFA JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 DUP1 MUL DUP4 DUP1 MUL SUB PUSH1 0x9 SHR SWAP3 SUB MUL ADD ADD DUP6 DUP1 DUP1 PUSH2 0xB4B JUMP JUMPDEST DUP6 PUSH32 0x5F15D67200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEBA2084C00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x49 0xD SWAP4 0xD7 DIFFICULTY 0xEC EXTCODECOPY PUSH1 0x51 EXTCODEHASH CREATE2 ISZERO 0xE1 0xB5 0xBA BASEFEE ADD PUSH22 0x1166DFB42CD53A25D76767D3AE64736F6C634300080D STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x8ABD754F34C8 0x28 0xE0 PUSH12 0xA61269ABDC5A62196B84F8BC PUSH25 0xD46C0A10EF13A8AA9364736F6C634300080D00330000000000 ",
              "sourceMap": "575:18930:1:-:0;;;;;;;;;-1:-1:-1;575:18930:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;16672:7;;;;:::i;:::-;575:18930;;;;-1:-1:-1;;575:18930:1;;;;;;16796:27;575:18930;;;16796:27;575:18930;16907:29;;;16903:95;;575:18930;16796:27;575:18930;;;;17073:41;575:18930;;;;;;17073:27;:41;:::i;:::-;575:18930;;;16796:27;575:18930;;;;;;;;;;;;;;;;;;;;;;;;;16903:95;575:18930;;;;16960:26;;;;575:18930;16960:26;;575:18930;16960:26;575:18930;;;;;;;:::o;:::-;;;;;;;;;;;;;;;18226:27;575:18930;;18349:26;575:18930;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;5240:7;;;:::i;:::-;575:18930;;;5313:56;;;;;;575:18930;;;5313:56;;575:18930;;;;5313:56;;575:18930;;;;;;;;5508:18;;-1:-1:-1;;575:18930:1;;;;;;-1:-1:-1;;5313:56:1;;;;;;575:18930;5313:56;;575:18930;5508:18;575:18930;;5313:56;575:18930;5313:56;575:18930;;;5313:56;575:18930;;;5508:18;5666:39;575:18930;5666:39;;:48;;;;575:18930;;;;;;;;;;;;5666:48;575:18930;5845:24;;;5963:32;;;;575:18930;5959:1867;;;6083:26;;;;6220:48;6083:26;;;:40;;;;:::i;:::-;575:18930;6220:48;575:18930;;;;;;;;;;;;6220:48;575:18930;5959:1867;575:18930;5959:1867;6360:32;;;;;;;5959:1867;6356:1470;;;5959:1867;6356:1470;7632:30;7766:48;6600:23;;6749:26;6600:23;-1:-1:-1;6600:23:1;;:::i;:::-;6749:26;;575:18930;6749:37;575:18930;;6749:37;:::i;:::-;6886:40;;;;6882:653;;6356:1470;7632:30;;;;:::i;:::-;575:18930;;;;;;;;;;;;6882:653;7240:62;:47;7074:45;575:18930;7074:45;7402:53;7074:45;;;:::i;:::-;575:18930;;;;;;;;;;;7240:47;;;;;:::i;:::-;:62;575:18930;;;;;;;;;;;;;;;;;;;;;;;;;;;7240:62;7402:53;575:18930;;;;;;;;;;;;7402:53;575:18930;6882:653;;;;;6360:32;5845:24;;;6360:32;;;5963;;;;;5313:56;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;575:18930;;;;;;;;;;;;;;;:::i;:::-;11504:7;;;:::i;:::-;575:18930;;;;-1:-1:-1;575:18930:1;-1:-1:-1;575:18930:1;;11600:24;575:18930;-1:-1:-1;575:18930:1;11600:24;575:18930;;;;;;;;;;;;;;;;;;;;;15216:49;575:18930;;:::i;:::-;;;;:::i;:::-;15109:7;;;;:::i;:::-;575:18930;-1:-1:-1;575:18930:1;-1:-1:-1;575:18930:1;;;;-1:-1:-1;575:18930:1;15216:40;575:18930;;;;;;;;;;;;15216:49;575:18930;15216:54;;575:18930;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15790:7;;;:::i;:::-;575:18930;-1:-1:-1;575:18930:1;-1:-1:-1;575:18930:1;;;15906:27;575:18930;-1:-1:-1;575:18930:1;15906:27;575:18930;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10161:7;;;:::i;:::-;10265:47;10279:33;;:18;;575:18930;;10279:9;575:18930;10279:9;575:18930;;;10279:9;575:18930;;;10279:18;:33;575:18930;;;;;10279:33;575:18930;;;;10265:47;:10;:47;10261:203;;575:18930;;11005:37;575:18930;;-1:-1:-1;575:18930:1;10561:42;575:18930;;;10561:42;575:18930;10279:33;10691:18;;575:18930;;10279:9;575:18930;10279:9;575:18930;;;10279:9;575:18930;;;10691:18;:33;575:18930;;;;;;;;10265:10;10876:18;10819:117;10876:24;;:18;;575:18930;;10279:9;575:18930;10279:9;575:18930;;;10279:9;575:18930;;;10819:117;575:18930;10819:117;-1:-1:-1;575:18930:1;;10819:117;10876:24;11005:18;10265:10;11005:18;575:18930;;10279:9;575:18930;10279:9;575:18930;;;10279:9;575:18930;;;11005:18;:24;575:18930;;;;;;;;;;;10261:203;575:18930;;10415:37;;;575:18930;;;;;;10415:37;;575:18930;;;10415:37;575:18930;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;8494:7;;;;:::i;:::-;575:18930;;;;8589:31;;;8585:110;;575:18930;8933:53;575:18930;-1:-1:-1;575:18930:1;;;;8792:49;;;;;;575:18930;;;;;8933:33;575:18930;;;8933:33;575:18930;;;;;;;;;;;8933:53;575:18930;8585:110;575:18930;;;;8644:39;;;;575:18930;;8644:39;;575:18930;8644:39;575:18930;;;;;;;;;;;;;;;;13187:229;;575:18930;;;13285:4;575:18930;;;;;;;;;;;;;;13362:27;575:18930;;;;;;13187:229;575:18930;;;;13187:229;;;;;;;;;:::i;:::-;575:18930;13151:288;;575:18930;;;;;;;;;;;;13584:16;13604:26;13584:46;575:18930;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2661:10;;575:18930;;;2620:51;2616:184;;2900:411;2922:378;575:18930;;;3014:229;;3189:27;3014:229;3189:27;3014:229;3189:27;3112:4;;3014:229;575:18930;;;;;;;;;;;;;;;;;;;;;;;;;;3014:229;575:18930;2978:288;;575:18930;;;;2900:411;3409:16;;;3429:26;3409:46;3405:196;;575:18930;4068:31;;575:18930;;;;;3691:33;;;;;;;;;;;;;;;575:18930;3691:33;;;;;-1:-1:-1;3691:33:1;;;;575:18930;3809:39;:18;:24;:18;;575:18930;;5313:56;575:18930;5313:56;575:18930;;;5313:56;575:18930;;;3809:39;3942:18;;;575:18930;;5313:56;575:18930;5313:56;575:18930;;;5313:56;575:18930;;;3942:18;575:18930;;;;;;;;;;;;;;;;;;;;;;;4068:31;;;;575:18930;;;;-1:-1:-1;575:18930:1;;;;;;;4196:55;;;;575:18930;;;;;;;;;3691:33;;;:::i;:::-;;;;;;:::i;:::-;;;3405:196;575:18930;;3560:29;;;575:18930;;;;3560:29;;575:18930;;;10415:37;2616:184;575:18930;;;2772:16;;;;575:18930;;;;;;;;;;;;;;;:::i;:::-;9452:7;;;:::i;:::-;575:18930;;;-1:-1:-1;9558:42:1;;;;;;;575:18930;;;;;9688:33;575:18930;;;9688:33;575:18930;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17734:7;;;;:::i;:::-;575:18930;-1:-1:-1;;;575:18930:1;;;;;;;17840:27;575:18930;;;17840:27;575:18930;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14351:7;;;:::i;:::-;575:18930;;;;-1:-1:-1;575:18930:1;-1:-1:-1;575:18930:1;;14466:33;575:18930;-1:-1:-1;575:18930:1;14466:33;575:18930;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;575:18930:1;-1:-1:-1;575:18930:1;;;-1:-1:-1;575:18930:1;;12276:24;;12272:75;;575:18930;;;;;;;;12272:75;575:18930;;;12324:11;;;;575:18930;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;6622:1;575:18930;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;575:18930:1;;-1:-1:-1;575:18930:1;;;-1:-1:-1;575:18930:1;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;;18593:433;18749:7;;;:::i;:::-;575:18930;;;;;;18865:9;575:18930;18865:9;575:18930;;18865:24;575:18930;18865:9;575:18930;18865:24;575:18930;;18851:10;:38;18847:172;;18593:433;:::o;18847:172::-;575:18930;;;;18982:25;;;;;;;575:18930;18982:25;19207:295;575:18930;;19358:9;575:18930;19358:9;575:18930;;;19358:9;575:18930;;19358:36;19354:141;;19207:295::o"
            },
            "methodIdentifiers": {
              "acceptOwnership(address)": "51710e45",
              "cancelOwnershipTransfer(address)": "7b37e561",
              "createConduit(bytes32,address)": "794593bc",
              "getChannel(address,uint256)": "027cc764",
              "getChannelStatus(address,address)": "33bc8572",
              "getChannels(address)": "8b9e028b",
              "getConduit(bytes32)": "6e9bfd9f",
              "getConduitCodeHashes()": "0a96ad39",
              "getKey(address)": "93790f44",
              "getPotentialOwner(address)": "906c87cc",
              "getTotalChannels(address)": "4e3f9580",
              "ownerOf(address)": "14afd79e",
              "transferOwnership(address,address)": "6d435421",
              "updateChannel(address,address,bool)": "13ad9cab"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"CallerIsNotNewPotentialOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ChannelOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ConduitAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"NewPotentialOwnerIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoConduit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"name\":\"NewConduit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"PotentialOwnerUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"cancelOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"createConduit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"channelIndex\",\"type\":\"uint256\"}],\"name\":\"getChannel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"getChannelStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getChannels\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"channels\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"name\":\"getConduit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConduitCodeHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"creationCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"runtimeCodeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getPotentialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"potentialOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getTotalChannels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalChannels\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"CallerIsNotNewPotentialOwner(address)\":[{\"details\":\"Revert with an error when attempting to claim ownership of a conduit      with a caller that is not the current potential owner for the      conduit in question.\"}],\"CallerIsNotOwner(address)\":[{\"details\":\"Revert with an error when attempting to update channels or transfer      ownership of a conduit when the caller is not the owner of the      conduit in question.\"}],\"ChannelOutOfRange(address)\":[{\"details\":\"Revert with an error when attempting to retrieve a channel using an      index that is out of range.\"}],\"ConduitAlreadyExists(address)\":[{\"details\":\"Revert with an error when attempting to create a conduit that      already exists.\"}],\"InvalidCreator()\":[{\"details\":\"Revert with an error when attempting to create a new conduit using a      conduit key where the last twenty bytes of the key do not match the      address of the caller.\"}],\"NewPotentialOwnerIsZeroAddress(address)\":[{\"details\":\"Revert with an error when attempting to register a new potential      owner and supplying the null address.\"}],\"NoConduit()\":[{\"details\":\"Revert with an error when attempting to interact with a conduit that      does not yet exist.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership(address)\":{\"params\":{\"conduit\":\"The conduit for which to accept ownership.\"}},\"cancelOwnershipTransfer(address)\":{\"params\":{\"conduit\":\"The conduit for which to cancel ownership transfer.\"}},\"constructor\":{\"details\":\"Initialize contract by deploying a conduit and setting the creation      code and runtime code hashes as immutable arguments.\"},\"createConduit(bytes32,address)\":{\"params\":{\"conduitKey\":\"The conduit key used to deploy the conduit. Note that                     the first twenty bytes of the conduit key must match                     the caller of this contract.\",\"initialOwner\":\"The initial owner to set for the new conduit.\"},\"returns\":{\"conduit\":\"The address of the newly deployed conduit.\"}},\"getChannel(address,uint256)\":{\"params\":{\"channelIndex\":\"The index of the channel in question.\",\"conduit\":\"The conduit for which to retrieve the open channel.\"},\"returns\":{\"channel\":\"The open channel, if any, at the specified channel index.\"}},\"getChannelStatus(address,address)\":{\"params\":{\"channel\":\"The channel for which to retrieve the status.\",\"conduit\":\"The conduit for which to retrieve the channel status.\"},\"returns\":{\"isOpen\":\"The status of the channel on the given conduit.\"}},\"getChannels(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve open channels.\"},\"returns\":{\"channels\":\"An array of open channels on the given conduit.\"}},\"getConduit(bytes32)\":{\"params\":{\"conduitKey\":\"The conduit key used to derive the conduit.\"},\"returns\":{\"conduit\":\"The derived address of the conduit.\",\"exists\":\" A boolean indicating whether the derived conduit has been                 deployed or not.\"}},\"getConduitCodeHashes()\":{\"details\":\"Retrieve the conduit creation code and runtime code hashes.\"},\"getKey(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the associated conduit                key.\"},\"returns\":{\"conduitKey\":\"The conduit key used to deploy the supplied conduit.\"}},\"getPotentialOwner(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the potential owner.\"},\"returns\":{\"potentialOwner\":\"The potential owner, if any, for the conduit.\"}},\"getTotalChannels(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the total channel count.\"},\"returns\":{\"totalChannels\":\"The total number of open channels for the conduit.\"}},\"ownerOf(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the associated owner.\"},\"returns\":{\"owner\":\"The owner of the supplied conduit.\"}},\"transferOwnership(address,address)\":{\"params\":{\"conduit\":\"The conduit for which to initiate ownership transfer.\"}},\"updateChannel(address,address,bool)\":{\"params\":{\"channel\":\"The channel to open or close on the conduit.\",\"conduit\":\"The conduit for which to open or close the channel.\",\"isOpen\":\"A boolean indicating whether to open or close the channel.\"}}},\"title\":\"ConduitController\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership(address)\":{\"notice\":\"Accept ownership of a supplied conduit. Only accounts that the         current owner has set as the new potential owner may call this         function.\"},\"cancelOwnershipTransfer(address)\":{\"notice\":\"Clear the currently set potential owner, if any, from a conduit.         Only the owner of the conduit in question may call this function.\"},\"createConduit(bytes32,address)\":{\"notice\":\"Deploy a new conduit using a supplied conduit key and assigning         an initial owner for the deployed conduit. Note that the first         twenty bytes of the supplied conduit key must match the caller         and that a new conduit cannot be created if one has already been         deployed using the same conduit key.\"},\"getChannel(address,uint256)\":{\"notice\":\"Retrieve an open channel at a specific index for a given conduit.         Note that the index of a channel can change as a result of other         channels being closed on the conduit.\"},\"getChannelStatus(address,address)\":{\"notice\":\"Retrieve the status (either open or closed) of a given channel on         a conduit.\"},\"getChannels(address)\":{\"notice\":\"Retrieve all open channels for a given conduit. Note that calling         this function for a conduit with many channels will revert with         an out-of-gas error.\"},\"getConduit(bytes32)\":{\"notice\":\"Derive the conduit associated with a given conduit key and         determine whether that conduit exists (i.e. whether it has been         deployed).\"},\"getKey(address)\":{\"notice\":\"Retrieve the conduit key for a deployed conduit via reverse         lookup.\"},\"getPotentialOwner(address)\":{\"notice\":\"Retrieve the potential owner, if any, for a given conduit. The         current owner may set a new potential owner via         `transferOwnership` and that owner may then accept ownership of         the conduit in question via `acceptOwnership`.\"},\"getTotalChannels(address)\":{\"notice\":\"Retrieve the total number of open channels for a given conduit.\"},\"ownerOf(address)\":{\"notice\":\"Retrieve the current owner of a deployed conduit.\"},\"transferOwnership(address,address)\":{\"notice\":\"Initiate conduit ownership transfer by assigning a new potential         owner for the given conduit. Once set, the new potential owner         may call `acceptOwnership` to claim ownership of the conduit.         Only the owner of the conduit in question may call this function.\"},\"updateChannel(address,address,bool)\":{\"notice\":\"Open or close a channel on a given conduit, thereby allowing the         specified account to execute transfers against that conduit.         Extreme care must be taken when updating channels, as malicious         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155         tokens where the token holder has granted the conduit approval.         Only the owner of the conduit in question may call this function.\"}},\"notice\":\"ConduitController enables deploying and managing new conduits, or         contracts that allow registered callers (or open \\\"channels\\\") to         transfer approved ERC20/721/1155 tokens on their behalf.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/conduit/ConduitController.sol\":\"ConduitController\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/conduit/Conduit.sol\":{\"keccak256\":\"0xeee6a76b6658556c79fc6fafd4fff43f94487b7417b0effb07708030a92d3040\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ada6eaf17348dbd3636fd3dc3212bfe65fdb9f9ac355119f3f3c180946068c0\",\"dweb:/ipfs/QmXjttG2NiBfBPz7mQiXXPrVrVFXmg5StRmEdE92KkUBMc\"]},\"contracts/conduit/ConduitController.sol\":{\"keccak256\":\"0x60b8a346f113dcdf13aed85071981e01ac9fb6785ad84200b5da39a78be8f01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51132cd83f23acf5277a6f042774582714e9d02f7eacf2fc2950e168153f1b21\",\"dweb:/ipfs/QmTpz5nin2jDNSdcw2rz2EznEZQBw7ACSGbDD7b2RbmDRP\"]},\"contracts/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x7e05a70aa7804d5706cba5e474c8256a8a330b13ded8c772994e5462737d1d4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11add326c46e94f8c6af0f108e80de4aa4e4a980a5d13e3888f91381f4e1abb5\",\"dweb:/ipfs/QmcmuyNUZu6kviwZz4MUneQ4LjopP4HakaYzNyGKxvy6x2\"]},\"contracts/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0x4e9b5d93c9c8152bb4e36ab0efb5dd6fdfe87c39f9304c4d64816f99577de82a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d4b93aba37f60a74a6d0960497f120e51e27eac72e5efca134073a777052fda\",\"dweb:/ipfs/Qmbnf5PrDEe2gt1j1cVqxLLnHfCNX1GFUqtoC3JaaWfsqh\"]},\"contracts/interfaces/ConduitControllerInterface.sol\":{\"keccak256\":\"0x352082fba784954b2bb7241d379fd585efbe8fbb957501a4f3fded57876cf136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f85c24989be7a8c12cc313ba3a0b4383616d2840e3c67fc3aba00873572ca6e\",\"dweb:/ipfs/QmNMQoWZEW5x72mLyqkDvkeL7k4TZvZiCksPuMCShK3LiJ\"]},\"contracts/interfaces/ConduitInterface.sol\":{\"keccak256\":\"0x34c194fb1682018f805e2648d413d47a73e5bf217dfed630df0ccff3aafdfd5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fed599e81f6ef91b57caf28ea67644aa725c5e1318b0451e8021970b8b31ac5\",\"dweb:/ipfs/QmQPUfagWQno3oEH6UL5DpLUfttGQtdtbD3h3H7nM3aMFM\"]},\"contracts/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0xb25320c460e06b5963d2c993774f1d4992118793520f872537c9144c664671e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5245dc3aa0da94a0a6fb4e579635e65e0f73c1ec65c9b6fbdd27ca2bad55d775\",\"dweb:/ipfs/QmcWcXPHLaymEr8GEDWWHZT2CsZ9ChyQa7UeJhDGVfJpBM\"]},\"contracts/lib/TokenTransferrer.sol\":{\"keccak256\":\"0x73adc797c56698dc118239a68918e4e19ec39efaee35110cfa58b121c7e70d6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d995813b3ab986ba302a0ec3355925302185a6f8204faee84c9f6d6f9e885c\",\"dweb:/ipfs/QmeknXR7CJHysTtbT2AsdDo3BMAt63Y2AbhB4Drt3UPvVQ\"]},\"contracts/lib/TokenTransferrerConstants.sol\":{\"keccak256\":\"0xcb69d4d0aa7cf1d2e22afef98e8e2ee876014a0c3e9e73c70aba7fd3b2dbf145\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a52b7e57a8d8d64eea9be0c61911876af305a0d382aa0a4fe5993170665fbe43\",\"dweb:/ipfs/QmdznLgz54kboj45J3R9Tg5NyumhoAcDskvTyEkmXhkFn3\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ConduitControllerInterface.sol": {
        "ConduitControllerInterface": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "CallerIsNotNewPotentialOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "CallerIsNotOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "ChannelOutOfRange",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "ConduitAlreadyExists",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidCreator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "NewPotentialOwnerIsZeroAddress",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoConduit",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                }
              ],
              "name": "NewConduit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newPotentialOwner",
                  "type": "address"
                }
              ],
              "name": "PotentialOwnerUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "cancelOwnershipTransfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                }
              ],
              "name": "createConduit",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "channelIndex",
                  "type": "uint256"
                }
              ],
              "name": "getChannel",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                }
              ],
              "name": "getChannelStatus",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "getChannels",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "channels",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                }
              ],
              "name": "getConduit",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getConduitCodeHashes",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "creationCodeHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "runtimeCodeHash",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "getKey",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "conduitKey",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "getPotentialOwner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "potentialOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "getTotalChannels",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalChannels",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newPotentialOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "conduit",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "updateChannel",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "acceptOwnership(address)": "51710e45",
              "cancelOwnershipTransfer(address)": "7b37e561",
              "createConduit(bytes32,address)": "794593bc",
              "getChannel(address,uint256)": "027cc764",
              "getChannelStatus(address,address)": "33bc8572",
              "getChannels(address)": "8b9e028b",
              "getConduit(bytes32)": "6e9bfd9f",
              "getConduitCodeHashes()": "0a96ad39",
              "getKey(address)": "93790f44",
              "getPotentialOwner(address)": "906c87cc",
              "getTotalChannels(address)": "4e3f9580",
              "ownerOf(address)": "14afd79e",
              "transferOwnership(address,address)": "6d435421",
              "updateChannel(address,address,bool)": "13ad9cab"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"CallerIsNotNewPotentialOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ChannelOutOfRange\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ConduitAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCreator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"NewPotentialOwnerIsZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoConduit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"name\":\"NewConduit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"PotentialOwnerUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"cancelOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"createConduit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"channelIndex\",\"type\":\"uint256\"}],\"name\":\"getChannel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"}],\"name\":\"getChannelStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getChannels\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"channels\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"name\":\"getConduit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConduitCodeHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"creationCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"runtimeCodeHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"conduitKey\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getPotentialOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"potentialOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"getTotalChannels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalChannels\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPotentialOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"conduit\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"CallerIsNotNewPotentialOwner(address)\":[{\"details\":\"Revert with an error when attempting to claim ownership of a conduit      with a caller that is not the current potential owner for the      conduit in question.\"}],\"CallerIsNotOwner(address)\":[{\"details\":\"Revert with an error when attempting to update channels or transfer      ownership of a conduit when the caller is not the owner of the      conduit in question.\"}],\"ChannelOutOfRange(address)\":[{\"details\":\"Revert with an error when attempting to retrieve a channel using an      index that is out of range.\"}],\"ConduitAlreadyExists(address)\":[{\"details\":\"Revert with an error when attempting to create a conduit that      already exists.\"}],\"InvalidCreator()\":[{\"details\":\"Revert with an error when attempting to create a new conduit using a      conduit key where the last twenty bytes of the key do not match the      address of the caller.\"}],\"NewPotentialOwnerIsZeroAddress(address)\":[{\"details\":\"Revert with an error when attempting to register a new potential      owner and supplying the null address.\"}],\"NoConduit()\":[{\"details\":\"Revert with an error when attempting to interact with a conduit that      does not yet exist.\"}]},\"events\":{\"NewConduit(address,bytes32)\":{\"details\":\"Emit an event whenever a new conduit is created.\",\"params\":{\"conduit\":\"The newly created conduit.\",\"conduitKey\":\"The conduit key used to create the new conduit.\"}},\"OwnershipTransferred(address,address,address)\":{\"details\":\"Emit an event whenever conduit ownership is transferred.\",\"params\":{\"conduit\":\"The conduit for which ownership has been                      transferred.\",\"newOwner\":\"The new owner of the conduit.\",\"previousOwner\":\"The previous owner of the conduit.\"}},\"PotentialOwnerUpdated(address,address)\":{\"details\":\"Emit an event whenever a conduit owner registers a new potential      owner for that conduit.\",\"params\":{\"conduit\":\"The conduit for which ownership may now be                          transferred.\",\"newPotentialOwner\":\"The new potential owner of the conduit.\"}}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership(address)\":{\"params\":{\"conduit\":\"The conduit for which to accept ownership.\"}},\"cancelOwnershipTransfer(address)\":{\"params\":{\"conduit\":\"The conduit for which to cancel ownership transfer.\"}},\"createConduit(bytes32,address)\":{\"params\":{\"conduitKey\":\"The conduit key used to deploy the conduit. Note that                     the last twenty bytes of the conduit key must match                     the caller of this contract.\",\"initialOwner\":\"The initial owner to set for the new conduit.\"},\"returns\":{\"conduit\":\"The address of the newly deployed conduit.\"}},\"getChannel(address,uint256)\":{\"params\":{\"channelIndex\":\"The index of the channel in question.\",\"conduit\":\"The conduit for which to retrieve the open channel.\"},\"returns\":{\"channel\":\"The open channel, if any, at the specified channel index.\"}},\"getChannelStatus(address,address)\":{\"params\":{\"channel\":\"The channel for which to retrieve the status.\",\"conduit\":\"The conduit for which to retrieve the channel status.\"},\"returns\":{\"isOpen\":\"The status of the channel on the given conduit.\"}},\"getChannels(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve open channels.\"},\"returns\":{\"channels\":\"An array of open channels on the given conduit.\"}},\"getConduit(bytes32)\":{\"params\":{\"conduitKey\":\"The conduit key used to derive the conduit.\"},\"returns\":{\"conduit\":\"The derived address of the conduit.\",\"exists\":\" A boolean indicating whether the derived conduit has been                 deployed or not.\"}},\"getConduitCodeHashes()\":{\"details\":\"Retrieve the conduit creation code and runtime code hashes.\"},\"getKey(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the associated conduit                key.\"},\"returns\":{\"conduitKey\":\"The conduit key used to deploy the supplied conduit.\"}},\"getPotentialOwner(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the potential owner.\"},\"returns\":{\"potentialOwner\":\"The potential owner, if any, for the conduit.\"}},\"getTotalChannels(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the total channel count.\"},\"returns\":{\"totalChannels\":\"The total number of open channels for the conduit.\"}},\"ownerOf(address)\":{\"params\":{\"conduit\":\"The conduit for which to retrieve the associated owner.\"},\"returns\":{\"owner\":\"The owner of the supplied conduit.\"}},\"transferOwnership(address,address)\":{\"params\":{\"conduit\":\"The conduit for which to initiate ownership transfer.\"}},\"updateChannel(address,address,bool)\":{\"params\":{\"channel\":\"The channel to open or close on the conduit.\",\"conduit\":\"The conduit for which to open or close the channel.\",\"isOpen\":\"A boolean indicating whether to open or close the channel.\"}}},\"title\":\"ConduitControllerInterface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership(address)\":{\"notice\":\"Accept ownership of a supplied conduit. Only accounts that the         current owner has set as the new potential owner may call this         function.\"},\"cancelOwnershipTransfer(address)\":{\"notice\":\"Clear the currently set potential owner, if any, from a conduit.         Only the owner of the conduit in question may call this function.\"},\"createConduit(bytes32,address)\":{\"notice\":\"Deploy a new conduit using a supplied conduit key and assigning         an initial owner for the deployed conduit. Note that the last         twenty bytes of the supplied conduit key must match the caller         and that a new conduit cannot be created if one has already been         deployed using the same conduit key.\"},\"getChannel(address,uint256)\":{\"notice\":\"Retrieve an open channel at a specific index for a given conduit.         Note that the index of a channel can change as a result of other         channels being closed on the conduit.\"},\"getChannelStatus(address,address)\":{\"notice\":\"Retrieve the status (either open or closed) of a given channel on         a conduit.\"},\"getChannels(address)\":{\"notice\":\"Retrieve all open channels for a given conduit. Note that calling         this function for a conduit with many channels will revert with         an out-of-gas error.\"},\"getConduit(bytes32)\":{\"notice\":\"Derive the conduit associated with a given conduit key and         determine whether that conduit exists (i.e. whether it has been         deployed).\"},\"getKey(address)\":{\"notice\":\"Retrieve the conduit key for a deployed conduit via reverse         lookup.\"},\"getPotentialOwner(address)\":{\"notice\":\"Retrieve the potential owner, if any, for a given conduit. The         current owner may set a new potential owner via         `transferOwnership` and that owner may then accept ownership of         the conduit in question via `acceptOwnership`.\"},\"getTotalChannels(address)\":{\"notice\":\"Retrieve the total number of open channels for a given conduit.\"},\"ownerOf(address)\":{\"notice\":\"Retrieve the current owner of a deployed conduit.\"},\"transferOwnership(address,address)\":{\"notice\":\"Initiate conduit ownership transfer by assigning a new potential         owner for the given conduit. Once set, the new potential owner         may call `acceptOwnership` to claim ownership of the conduit.         Only the owner of the conduit in question may call this function.\"},\"updateChannel(address,address,bool)\":{\"notice\":\"Open or close a channel on a given conduit, thereby allowing the         specified account to execute transfers against that conduit.         Extreme care must be taken when updating channels, as malicious         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155         tokens where the token holder has granted the conduit approval.         Only the owner of the conduit in question may call this function.\"}},\"notice\":\"ConduitControllerInterface contains all external function interfaces,         structs, events, and errors for the conduit controller.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ConduitControllerInterface.sol\":\"ConduitControllerInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ConduitControllerInterface.sol\":{\"keccak256\":\"0x352082fba784954b2bb7241d379fd585efbe8fbb957501a4f3fded57876cf136\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f85c24989be7a8c12cc313ba3a0b4383616d2840e3c67fc3aba00873572ca6e\",\"dweb:/ipfs/QmNMQoWZEW5x72mLyqkDvkeL7k4TZvZiCksPuMCShK3LiJ\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/ConduitInterface.sol": {
        "ConduitInterface": {
          "abi": [
            {
              "inputs": [],
              "name": "ChannelClosed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Invalid1155BatchTransferEncoding",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidController",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidItemType",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                }
              ],
              "name": "ChannelUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "execute",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batch1155Transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "enum ConduitItemType",
                      "name": "itemType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "identifier",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConduitTransfer[]",
                  "name": "standardTransfers",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "ids",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "amounts",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct ConduitBatch1155Transfer[]",
                  "name": "batch1155Transfers",
                  "type": "tuple[]"
                }
              ],
              "name": "executeWithBatch1155",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "magicValue",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "channel",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isOpen",
                  "type": "bool"
                }
              ],
              "name": "updateChannel",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "execute((uint8,address,address,address,uint256,uint256)[])": "4ce34aa2",
              "executeBatch1155((address,address,address,uint256[],uint256[])[])": "8df25d92",
              "executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])": "899e104c",
              "updateChannel(address,bool)": "c4e8fcb5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ChannelClosed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Invalid1155BatchTransferEncoding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidController\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidItemType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"}],\"name\":\"ChannelUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"transfers\",\"type\":\"tuple[]\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batch1155Transfers\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ConduitItemType\",\"name\":\"itemType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ConduitTransfer[]\",\"name\":\"standardTransfers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ConduitBatch1155Transfer[]\",\"name\":\"batch1155Transfers\",\"type\":\"tuple[]\"}],\"name\":\"executeWithBatch1155\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"channel\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"updateChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0age\",\"errors\":{\"ChannelClosed()\":[{\"details\":\"Revert with an error when attempting to execute transfers using a      caller that does not have an open channel.\"}],\"Invalid1155BatchTransferEncoding()\":[{\"details\":\"Revert with an error when attempting to execute an 1155 batch      transfer using calldata not produced by default ABI encoding or with      different lengths for ids and amounts arrays.\"}],\"InvalidController()\":[{\"details\":\"Revert with an error when attempting to update the status of a      channel from a caller that is not the conduit controller.\"}],\"InvalidItemType()\":[{\"details\":\"Revert with an error when attempting to execute a transfer for an      item that does not have an ERC20/721/1155 item type.\"}]},\"events\":{\"ChannelUpdated(address,bool)\":{\"details\":\"Emit an event whenever a channel is opened or closed.\",\"params\":{\"channel\":\"The channel that has been updated.\",\"open\":\"A boolean indicating whether the conduit is open or not.\"}}},\"kind\":\"dev\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"params\":{\"transfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batch1155Transfers\":\"The 1155 batch transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"params\":{\"batch1155Transfers\":\"The 1155 batch transfers to perform.\",\"standardTransfers\":\"The ERC20/721/1155 transfers to perform.\"},\"returns\":{\"magicValue\":\"A magic value indicating that the transfers were                    performed successfully.\"}},\"updateChannel(address,bool)\":{\"params\":{\"channel\":\"The channel to open or close.\",\"isOpen\":\"The status of the channel (either open or closed).\"}}},\"title\":\"ConduitInterface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((uint8,address,address,address,uint256,uint256)[])\":{\"notice\":\"Execute a sequence of ERC20/721/1155 transfers. Only a caller         with an open channel can call this function.\"},\"executeBatch1155((address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of batch 1155 transfers. Only a caller with an         open channel can call this function.\"},\"executeWithBatch1155((uint8,address,address,address,uint256,uint256)[],(address,address,address,uint256[],uint256[])[])\":{\"notice\":\"Execute a sequence of transfers, both single and batch 1155. Only         a caller with an open channel can call this function.\"},\"updateChannel(address,bool)\":{\"notice\":\"Open or close a given channel. Only callable by the controller.\"}},\"notice\":\"ConduitInterface contains all external function interfaces, events,         and errors for conduit contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ConduitInterface.sol\":\"ConduitInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x7e05a70aa7804d5706cba5e474c8256a8a330b13ded8c772994e5462737d1d4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11add326c46e94f8c6af0f108e80de4aa4e4a980a5d13e3888f91381f4e1abb5\",\"dweb:/ipfs/QmcmuyNUZu6kviwZz4MUneQ4LjopP4HakaYzNyGKxvy6x2\"]},\"contracts/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0x4e9b5d93c9c8152bb4e36ab0efb5dd6fdfe87c39f9304c4d64816f99577de82a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d4b93aba37f60a74a6d0960497f120e51e27eac72e5efca134073a777052fda\",\"dweb:/ipfs/Qmbnf5PrDEe2gt1j1cVqxLLnHfCNX1GFUqtoC3JaaWfsqh\"]},\"contracts/interfaces/ConduitInterface.sol\":{\"keccak256\":\"0x34c194fb1682018f805e2648d413d47a73e5bf217dfed630df0ccff3aafdfd5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fed599e81f6ef91b57caf28ea67644aa725c5e1318b0451e8021970b8b31ac5\",\"dweb:/ipfs/QmQPUfagWQno3oEH6UL5DpLUfttGQtdtbD3h3H7nM3aMFM\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/TokenTransferrerErrors.sol": {
        "TokenTransferrerErrors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BadReturnValueFromERC20OnTransfer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "identifiers",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "ERC1155BatchTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidERC721TransferAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "MissingItemAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "NoContract",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenTransferGenericFailure",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"TokenTransferrerErrors\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/TokenTransferrerErrors.sol\":\"TokenTransferrerErrors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0xb25320c460e06b5963d2c993774f1d4992118793520f872537c9144c664671e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5245dc3aa0da94a0a6fb4e579635e65e0f73c1ec65c9b6fbdd27ca2bad55d775\",\"dweb:/ipfs/QmcWcXPHLaymEr8GEDWWHZT2CsZ9ChyQa7UeJhDGVfJpBM\"]}},\"version\":1}"
        }
      },
      "contracts/lib/TokenTransferrer.sol": {
        "TokenTransferrer": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "BadReturnValueFromERC20OnTransfer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "identifiers",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "amounts",
                  "type": "uint256[]"
                }
              ],
              "name": "ERC1155BatchTransferGenericFailure",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidERC721TransferAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "MissingItemAmount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "NoContract",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "identifier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "TokenTransferGenericFailure",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601357603a908160198239f35b600080fdfe600080fdfea2646970667358221220b91afca8e4fc0c0910964e7e5b88b9d240e98d92ce3a99b8967a24312c966dfa64736f6c634300080d0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 BYTE 0xFC 0xA8 0xE4 0xFC 0xC MULMOD LT SWAP7 0x4E PUSH31 0x5B88B9D240E98D92CE3A99B8967A24312C966DFA64736F6C634300080D0033 ",
              "sourceMap": "299:32897:7:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220b91afca8e4fc0c0910964e7e5b88b9d240e98d92ce3a99b8967a24312c966dfa64736f6c634300080d0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 BYTE 0xFC 0xA8 0xE4 0xFC 0xC MULMOD LT SWAP7 0x4E PUSH31 0x5B88B9D240E98D92CE3A99B8967A24312C966DFA64736F6C634300080D0033 ",
              "sourceMap": "299:32897:7:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BadReturnValueFromERC20OnTransfer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"identifiers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferGenericFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidERC721TransferAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MissingItemAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NoContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"identifier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferGenericFailure\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"BadReturnValueFromERC20OnTransfer(address,address,address,uint256)\":[{\"details\":\"Revert with an error when an ERC20 token transfer returns a falsey      value.\",\"params\":{\"amount\":\"The amount for the attempted ERC20 transfer.\",\"from\":\"The source of the attempted ERC20 transfer.\",\"to\":\"The recipient of the attempted ERC20 transfer.\",\"token\":\"The token for which the ERC20 transfer was attempted.\"}}],\"ERC1155BatchTransferGenericFailure(address,address,address,uint256[],uint256[])\":[{\"details\":\"Revert with an error when a batch ERC1155 token transfer reverts.\",\"params\":{\"amounts\":\"The amounts for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifiers\":\"The identifiers for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}],\"InvalidERC721TransferAmount()\":[{\"details\":\"Revert with an error when an ERC721 transfer with amount other than      one is attempted.\"}],\"MissingItemAmount()\":[{\"details\":\"Revert with an error when attempting to fulfill an order where an      item has an amount of zero.\"}],\"NoContract(address)\":[{\"details\":\"Revert with an error when an account being called as an assumed      contract does not have code and returns no data.\",\"params\":{\"account\":\"The account that should contain code.\"}}],\"TokenTransferGenericFailure(address,address,address,uint256,uint256)\":[{\"details\":\"Revert with an error when an ERC20, ERC721, or ERC1155 token      transfer reverts.\",\"params\":{\"amount\":\"The amount for the attempted transfer.\",\"from\":\"The source of the attempted transfer.\",\"identifier\":\"The identifier for the attempted transfer.\",\"to\":\"The recipient of the attempted transfer.\",\"token\":\"The token for which the transfer was attempted.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/TokenTransferrer.sol\":\"TokenTransferrer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/conduit/lib/ConduitEnums.sol\":{\"keccak256\":\"0x7e05a70aa7804d5706cba5e474c8256a8a330b13ded8c772994e5462737d1d4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11add326c46e94f8c6af0f108e80de4aa4e4a980a5d13e3888f91381f4e1abb5\",\"dweb:/ipfs/QmcmuyNUZu6kviwZz4MUneQ4LjopP4HakaYzNyGKxvy6x2\"]},\"contracts/conduit/lib/ConduitStructs.sol\":{\"keccak256\":\"0x4e9b5d93c9c8152bb4e36ab0efb5dd6fdfe87c39f9304c4d64816f99577de82a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d4b93aba37f60a74a6d0960497f120e51e27eac72e5efca134073a777052fda\",\"dweb:/ipfs/Qmbnf5PrDEe2gt1j1cVqxLLnHfCNX1GFUqtoC3JaaWfsqh\"]},\"contracts/interfaces/TokenTransferrerErrors.sol\":{\"keccak256\":\"0xb25320c460e06b5963d2c993774f1d4992118793520f872537c9144c664671e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5245dc3aa0da94a0a6fb4e579635e65e0f73c1ec65c9b6fbdd27ca2bad55d775\",\"dweb:/ipfs/QmcWcXPHLaymEr8GEDWWHZT2CsZ9ChyQa7UeJhDGVfJpBM\"]},\"contracts/lib/TokenTransferrer.sol\":{\"keccak256\":\"0x73adc797c56698dc118239a68918e4e19ec39efaee35110cfa58b121c7e70d6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d995813b3ab986ba302a0ec3355925302185a6f8204faee84c9f6d6f9e885c\",\"dweb:/ipfs/QmeknXR7CJHysTtbT2AsdDo3BMAt63Y2AbhB4Drt3UPvVQ\"]},\"contracts/lib/TokenTransferrerConstants.sol\":{\"keccak256\":\"0xcb69d4d0aa7cf1d2e22afef98e8e2ee876014a0c3e9e73c70aba7fd3b2dbf145\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a52b7e57a8d8d64eea9be0c61911876af305a0d382aa0a4fe5993170665fbe43\",\"dweb:/ipfs/QmdznLgz54kboj45J3R9Tg5NyumhoAcDskvTyEkmXhkFn3\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/conduit/Conduit.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/Conduit.sol",
          "exportedSymbols": {
            "Conduit": [
              293
            ],
            "ConduitBatch1155Transfer": [
              1036
            ],
            "ConduitInterface": [
              1295
            ],
            "ConduitItemType": [
              1005
            ],
            "ConduitTransfer": [
              1023
            ],
            "TokenTransferrer": [
              1413
            ]
          },
          "id": 294,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:0"
            },
            {
              "absolutePath": "contracts/interfaces/ConduitInterface.sol",
              "file": "../interfaces/ConduitInterface.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 294,
              "sourceUnit": 1296,
              "src": "61:70:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "ConduitInterface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1295,
                    "src": "70:16:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitEnums.sol",
              "file": "./lib/ConduitEnums.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 294,
              "sourceUnit": 1006,
              "src": "135:57:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "ConduitItemType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1005,
                    "src": "144:15:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/TokenTransferrer.sol",
              "file": "../lib/TokenTransferrer.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 294,
              "sourceUnit": 1414,
              "src": "196:63:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 6,
                    "name": "TokenTransferrer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1413,
                    "src": "205:16:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
              "file": "./lib/ConduitStructs.sol",
              "id": 10,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 294,
              "sourceUnit": 1037,
              "src": "283:96:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 8,
                    "name": "ConduitTransfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1023,
                    "src": "297:15:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 9,
                    "name": "ConduitBatch1155Transfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1036,
                    "src": "319:24:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 12,
                    "name": "ConduitInterface",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1295,
                    "src": "1087:16:0"
                  },
                  "id": 13,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1087:16:0"
                },
                {
                  "baseName": {
                    "id": 14,
                    "name": "TokenTransferrer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1413,
                    "src": "1105:16:0"
                  },
                  "id": 15,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1105:16:0"
                }
              ],
              "canonicalName": "Conduit",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 11,
                "nodeType": "StructuredDocumentation",
                "src": "383:682:0",
                "text": " @title Conduit\n @author 0age\n @notice This contract serves as an originator for \"proxied\" transfers. Each\n         conduit is deployed and controlled by a \"conduit controller\" that can\n         add and remove \"channels\" or contracts that can instruct the conduit\n         to transfer approved ERC20/721/1155 tokens. *IMPORTANT NOTE: each\n         conduit has an owner that can arbitrarily add or remove channels, and\n         a malicious or negligent owner can add a channel that allows for any\n         approved ERC20/721/1155 tokens to be taken immediately — be extremely\n         cautious with what conduits you give token approvals to!*"
              },
              "fullyImplemented": true,
              "id": 293,
              "linearizedBaseContracts": [
                293,
                1413,
                1349,
                1295
              ],
              "name": "Conduit",
              "nameLocation": "1076:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "immutable",
                  "name": "_controller",
                  "nameLocation": "1237:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "1211:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_channels",
                  "nameLocation": "1332:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "1299:42:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 20,
                    "keyType": {
                      "id": 18,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1307:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1299:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 19,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1318:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 30,
                    "nodeType": "Block",
                    "src": "1454:91:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 25,
                            "name": "_controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1513:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 26,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1527:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 27,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1527:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1513:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 29,
                        "nodeType": "ExpressionStatement",
                        "src": "1513:24:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 22,
                    "nodeType": "StructuredDocumentation",
                    "src": "1350:84:0",
                    "text": " @notice In the constructor, set the deployer as the controller."
                  },
                  "id": 31,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1451:2:0"
                  },
                  "returnParameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1454:0:0"
                  },
                  "scope": 293,
                  "src": "1440:105:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1262
                  ],
                  "body": {
                    "id": 87,
                    "nodeType": "Block",
                    "src": "2052:873:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2123:22:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 42,
                              "name": "_channels",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "2124:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 45,
                            "indexExpression": {
                              "expression": {
                                "id": 43,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2134:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 44,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2134:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2124:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 51,
                        "nodeType": "IfStatement",
                        "src": "2119:77:0",
                        "trueBody": {
                          "id": 50,
                          "nodeType": "Block",
                          "src": "2147:49:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 47,
                                  "name": "ChannelClosed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1236,
                                  "src": "2169:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 48,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2169:15:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 49,
                              "nodeType": "RevertStatement",
                              "src": "2162:22:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          53
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 53,
                            "mutability": "mutable",
                            "name": "totalStandardTransfers",
                            "nameLocation": "2291:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 87,
                            "src": "2283:30:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 52,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2283:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 56,
                        "initialValue": {
                          "expression": {
                            "id": 54,
                            "name": "transfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "2316:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct ConduitTransfer calldata[] calldata"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2316:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2283:49:0"
                      },
                      {
                        "body": {
                          "id": 79,
                          "nodeType": "Block",
                          "src": "2435:357:0",
                          "statements": [
                            {
                              "assignments": [
                                66
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 66,
                                  "mutability": "mutable",
                                  "name": "standardTransfer",
                                  "nameLocation": "2526:16:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 79,
                                  "src": "2501:41:0",
                                  "stateVariable": false,
                                  "storageLocation": "calldata",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                    "typeString": "struct ConduitTransfer"
                                  },
                                  "typeName": {
                                    "id": 65,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 64,
                                      "name": "ConduitTransfer",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 1023,
                                      "src": "2501:15:0"
                                    },
                                    "referencedDeclaration": 1023,
                                    "src": "2501:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$1023_storage_ptr",
                                      "typeString": "struct ConduitTransfer"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 70,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 67,
                                  "name": "transfers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36,
                                  "src": "2545:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct ConduitTransfer calldata[] calldata"
                                  }
                                },
                                "id": 69,
                                "indexExpression": {
                                  "id": 68,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58,
                                  "src": "2555:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2545:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                  "typeString": "struct ConduitTransfer calldata"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2501:56:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 72,
                                    "name": "standardTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66,
                                    "src": "2622:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  ],
                                  "id": 71,
                                  "name": "_transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 292,
                                  "src": "2612:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ConduitTransfer_$1023_calldata_ptr_$returns$__$",
                                    "typeString": "function (struct ConduitTransfer calldata)"
                                  }
                                },
                                "id": 73,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2612:27:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 74,
                              "nodeType": "ExpressionStatement",
                              "src": "2612:27:0"
                            },
                            {
                              "id": 78,
                              "nodeType": "UncheckedBlock",
                              "src": "2733:48:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 76,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "2762:3:0",
                                    "subExpression": {
                                      "id": 75,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 58,
                                      "src": "2764:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 77,
                                  "nodeType": "ExpressionStatement",
                                  "src": "2762:3:0"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "2405:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 62,
                            "name": "totalStandardTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "2409:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2405:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 80,
                        "initializationExpression": {
                          "assignments": [
                            58
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 58,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2398:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 80,
                              "src": "2390:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 57,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2390:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 60,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2402:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2390:13:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "2385:407:0"
                      },
                      {
                        "expression": {
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 81,
                            "name": "magicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "2883:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 82,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2896:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Conduit_$293",
                                  "typeString": "contract Conduit"
                                }
                              },
                              "id": 83,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "execute",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 88,
                              "src": "2896:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitTransfer_$1023_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (struct ConduitTransfer memory[] memory) external returns (bytes4)"
                              }
                            },
                            "id": 84,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "2896:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "2883:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 86,
                        "nodeType": "ExpressionStatement",
                        "src": "2883:34:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 32,
                    "nodeType": "StructuredDocumentation",
                    "src": "1553:360:0",
                    "text": " @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n         with an open channel can call this function.\n @param transfers The ERC20/721/1155 transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "4ce34aa2",
                  "id": 88,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nameLocation": "1928:7:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 38,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2001:8:0"
                  },
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "transfers",
                        "nameLocation": "1963:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "1936:36:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 34,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 33,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1023,
                              "src": "1936:15:0"
                            },
                            "referencedDeclaration": 1023,
                            "src": "1936:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$1023_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 35,
                          "nodeType": "ArrayTypeName",
                          "src": "1936:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1935:38:0"
                  },
                  "returnParameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "2035:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "2028:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2028:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2027:19:0"
                  },
                  "scope": 293,
                  "src": "1919:1006:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1272
                  ],
                  "body": {
                    "id": 119,
                    "nodeType": "Block",
                    "src": "3436:386:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3507:22:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 99,
                              "name": "_channels",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "3508:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 102,
                            "indexExpression": {
                              "expression": {
                                "id": 100,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3518:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3518:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3508:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 108,
                        "nodeType": "IfStatement",
                        "src": "3503:77:0",
                        "trueBody": {
                          "id": 107,
                          "nodeType": "Block",
                          "src": "3531:49:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 104,
                                  "name": "ChannelClosed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1236,
                                  "src": "3553:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3553:15:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 106,
                              "nodeType": "RevertStatement",
                              "src": "3546:22:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 110,
                              "name": "batchTransfers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "3664:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            ],
                            "id": 109,
                            "name": "_performERC1155BatchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1412,
                            "src": "3634:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1036_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (struct ConduitBatch1155Transfer calldata[] calldata)"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3634:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 112,
                        "nodeType": "ExpressionStatement",
                        "src": "3634:45:0"
                      },
                      {
                        "expression": {
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 113,
                            "name": "magicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "3771:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 114,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3784:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Conduit_$293",
                                  "typeString": "contract Conduit"
                                }
                              },
                              "id": 115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executeBatch1155",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 120,
                              "src": "3784:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1036_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (struct ConduitBatch1155Transfer memory[] memory) external returns (bytes4)"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3784:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "3771:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 118,
                        "nodeType": "ExpressionStatement",
                        "src": "3771:43:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 89,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:357:0",
                    "text": " @notice Execute a sequence of batch 1155 transfers. Only a caller with an\n         open channel can call this function.\n @param batchTransfers The 1155 batch transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "8df25d92",
                  "id": 120,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeBatch1155",
                  "nameLocation": "3305:16:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 95,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3399:8:0"
                  },
                  "parameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "batchTransfers",
                        "nameLocation": "3368:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "3332:50:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 91,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 90,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1036,
                              "src": "3332:24:0"
                            },
                            "referencedDeclaration": 1036,
                            "src": "3332:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1036_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 92,
                          "nodeType": "ArrayTypeName",
                          "src": "3332:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3321:68:0"
                  },
                  "returnParameters": {
                    "id": 98,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 97,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "3424:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "3417:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3417:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3416:19:0"
                  },
                  "scope": 293,
                  "src": "3296:526:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1286
                  ],
                  "body": {
                    "id": 184,
                    "nodeType": "Block",
                    "src": "4486:1011:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4557:22:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 135,
                              "name": "_channels",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "4558:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 138,
                            "indexExpression": {
                              "expression": {
                                "id": 136,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4568:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4568:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4558:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 144,
                        "nodeType": "IfStatement",
                        "src": "4553:77:0",
                        "trueBody": {
                          "id": 143,
                          "nodeType": "Block",
                          "src": "4581:49:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 140,
                                  "name": "ChannelClosed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1236,
                                  "src": "4603:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4603:15:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 142,
                              "nodeType": "RevertStatement",
                              "src": "4596:22:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          146
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 146,
                            "mutability": "mutable",
                            "name": "totalStandardTransfers",
                            "nameLocation": "4725:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 184,
                            "src": "4717:30:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 145,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4717:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 149,
                        "initialValue": {
                          "expression": {
                            "id": 147,
                            "name": "standardTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "4750:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct ConduitTransfer calldata[] calldata"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4750:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4717:57:0"
                      },
                      {
                        "body": {
                          "id": 172,
                          "nodeType": "Block",
                          "src": "4886:365:0",
                          "statements": [
                            {
                              "assignments": [
                                159
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 159,
                                  "mutability": "mutable",
                                  "name": "standardTransfer",
                                  "nameLocation": "4977:16:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 172,
                                  "src": "4952:41:0",
                                  "stateVariable": false,
                                  "storageLocation": "calldata",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                    "typeString": "struct ConduitTransfer"
                                  },
                                  "typeName": {
                                    "id": 158,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 157,
                                      "name": "ConduitTransfer",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 1023,
                                      "src": "4952:15:0"
                                    },
                                    "referencedDeclaration": 1023,
                                    "src": "4952:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$1023_storage_ptr",
                                      "typeString": "struct ConduitTransfer"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 163,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 160,
                                  "name": "standardTransfers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 125,
                                  "src": "4996:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct ConduitTransfer calldata[] calldata"
                                  }
                                },
                                "id": 162,
                                "indexExpression": {
                                  "id": 161,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151,
                                  "src": "5014:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4996:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                  "typeString": "struct ConduitTransfer calldata"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4952:64:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 165,
                                    "name": "standardTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 159,
                                    "src": "5081:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                      "typeString": "struct ConduitTransfer calldata"
                                    }
                                  ],
                                  "id": 164,
                                  "name": "_transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 292,
                                  "src": "5071:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ConduitTransfer_$1023_calldata_ptr_$returns$__$",
                                    "typeString": "function (struct ConduitTransfer calldata)"
                                  }
                                },
                                "id": 166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5071:27:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 167,
                              "nodeType": "ExpressionStatement",
                              "src": "5071:27:0"
                            },
                            {
                              "id": 171,
                              "nodeType": "UncheckedBlock",
                              "src": "5192:48:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 169,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "5221:3:0",
                                    "subExpression": {
                                      "id": 168,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 151,
                                      "src": "5223:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 170,
                                  "nodeType": "ExpressionStatement",
                                  "src": "5221:3:0"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 154,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "4856:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 155,
                            "name": "totalStandardTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "4860:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4856:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 173,
                        "initializationExpression": {
                          "assignments": [
                            151
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 151,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "4849:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 173,
                              "src": "4841:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 150,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4841:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 153,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4853:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4841:13:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "4836:415:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 175,
                              "name": "batchTransfers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "5335:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ConduitBatch1155Transfer calldata[] calldata"
                              }
                            ],
                            "id": 174,
                            "name": "_performERC1155BatchTransfers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1412,
                            "src": "5305:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_ConduitBatch1155Transfer_$1036_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (struct ConduitBatch1155Transfer calldata[] calldata)"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5305:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 177,
                        "nodeType": "ExpressionStatement",
                        "src": "5305:45:0"
                      },
                      {
                        "expression": {
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 178,
                            "name": "magicValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "5442:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 179,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5455:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Conduit_$293",
                                  "typeString": "contract Conduit"
                                }
                              },
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "executeWithBatch1155",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 185,
                              "src": "5455:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_ConduitTransfer_$1023_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ConduitBatch1155Transfer_$1036_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (struct ConduitTransfer memory[] memory,struct ConduitBatch1155Transfer memory[] memory) external returns (bytes4)"
                              }
                            },
                            "id": 181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5455:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "5442:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 183,
                        "nodeType": "ExpressionStatement",
                        "src": "5442:47:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 121,
                    "nodeType": "StructuredDocumentation",
                    "src": "3830:451:0",
                    "text": " @notice Execute a sequence of transfers, both single and batch 1155. Only\n         a caller with an open channel can call this function.\n @param standardTransfers The ERC20/721/1155 transfers to perform.\n @param batchTransfers    The 1155 batch transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "899e104c",
                  "id": 185,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeWithBatch1155",
                  "nameLocation": "4296:20:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 131,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4449:8:0"
                  },
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 125,
                        "mutability": "mutable",
                        "name": "standardTransfers",
                        "nameLocation": "4354:17:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "4327:44:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 123,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 122,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1023,
                              "src": "4327:15:0"
                            },
                            "referencedDeclaration": 1023,
                            "src": "4327:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$1023_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 124,
                          "nodeType": "ArrayTypeName",
                          "src": "4327:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "batchTransfers",
                        "nameLocation": "4418:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "4382:50:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 127,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 126,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1036,
                              "src": "4382:24:0"
                            },
                            "referencedDeclaration": 1036,
                            "src": "4382:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1036_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 128,
                          "nodeType": "ArrayTypeName",
                          "src": "4382:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4316:123:0"
                  },
                  "returnParameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "4474:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 185,
                        "src": "4467:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "4467:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4466:19:0"
                  },
                  "scope": 293,
                  "src": "4287:1210:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1294
                  ],
                  "body": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "5809:348:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 194,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5895:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5895:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 196,
                            "name": "_controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "5909:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5895:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 202,
                        "nodeType": "IfStatement",
                        "src": "5891:84:0",
                        "trueBody": {
                          "id": 201,
                          "nodeType": "Block",
                          "src": "5922:53:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 198,
                                  "name": "InvalidController",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1242,
                                  "src": "5944:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5944:19:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 200,
                              "nodeType": "RevertStatement",
                              "src": "5937:26:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 203,
                              "name": "_channels",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "6033:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 205,
                            "indexExpression": {
                              "id": 204,
                              "name": "channel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 188,
                              "src": "6043:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6033:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 206,
                            "name": "isOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 190,
                            "src": "6054:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6033:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 208,
                        "nodeType": "ExpressionStatement",
                        "src": "6033:27:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 210,
                              "name": "channel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 188,
                              "src": "6133:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 211,
                              "name": "isOpen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "6142:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 209,
                            "name": "ChannelUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1252,
                            "src": "6118:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool)"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6118:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 213,
                        "nodeType": "EmitStatement",
                        "src": "6113:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 186,
                    "nodeType": "StructuredDocumentation",
                    "src": "5505:227:0",
                    "text": " @notice Open or close a given channel. Only callable by the controller.\n @param channel The channel to open or close.\n @param isOpen  The status of the channel (either open or closed)."
                  },
                  "functionSelector": "c4e8fcb5",
                  "id": 215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateChannel",
                  "nameLocation": "5747:13:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 192,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5800:8:0"
                  },
                  "parameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 188,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "5769:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "5761:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 187,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5761:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "5783:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "5778:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5778:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5760:30:0"
                  },
                  "returnParameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5809:0:0"
                  },
                  "scope": 293,
                  "src": "5738:419:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 291,
                    "nodeType": "Block",
                    "src": "6379:1108:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ConduitItemType_$1005",
                            "typeString": "enum ConduitItemType"
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 222,
                              "name": "item",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "6460:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                "typeString": "struct ConduitTransfer calldata"
                              }
                            },
                            "id": 223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "itemType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1012,
                            "src": "6460:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$1005",
                              "typeString": "enum ConduitItemType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 224,
                              "name": "ConduitItemType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "6477:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$1005_$",
                                "typeString": "type(enum ConduitItemType)"
                              }
                            },
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1002,
                            "src": "6477:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$1005",
                              "typeString": "enum ConduitItemType"
                            }
                          },
                          "src": "6460:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_ConduitItemType_$1005",
                              "typeString": "enum ConduitItemType"
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 239,
                                "name": "item",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 219,
                                "src": "6641:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                  "typeString": "struct ConduitTransfer calldata"
                                }
                              },
                              "id": 240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "itemType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1012,
                              "src": "6641:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$1005",
                                "typeString": "enum ConduitItemType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 241,
                                "name": "ConduitItemType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1005,
                                "src": "6658:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$1005_$",
                                  "typeString": "type(enum ConduitItemType)"
                                }
                              },
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ERC721",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1003,
                              "src": "6658:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$1005",
                                "typeString": "enum ConduitItemType"
                              }
                            },
                            "src": "6641:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ConduitItemType_$1005",
                                "typeString": "enum ConduitItemType"
                              },
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 265,
                                  "name": "item",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 219,
                                  "src": "7092:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                    "typeString": "struct ConduitTransfer calldata"
                                  }
                                },
                                "id": 266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "itemType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1012,
                                "src": "7092:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ConduitItemType_$1005",
                                  "typeString": "enum ConduitItemType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 267,
                                  "name": "ConduitItemType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1005,
                                  "src": "7109:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ConduitItemType_$1005_$",
                                    "typeString": "type(enum ConduitItemType)"
                                  }
                                },
                                "id": 268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ERC1155",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1004,
                                "src": "7109:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ConduitItemType_$1005",
                                  "typeString": "enum ConduitItemType"
                                }
                              },
                              "src": "7092:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 287,
                              "nodeType": "Block",
                              "src": "7392:88:0",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 284,
                                      "name": "InvalidItemType",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1239,
                                      "src": "7451:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 285,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7451:17:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 286,
                                  "nodeType": "RevertStatement",
                                  "src": "7444:24:0"
                                }
                              ]
                            },
                            "id": 288,
                            "nodeType": "IfStatement",
                            "src": "7088:392:0",
                            "trueBody": {
                              "id": 283,
                              "nodeType": "Block",
                              "src": "7134:252:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 271,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 219,
                                          "src": "7231:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 272,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "token",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1014,
                                        "src": "7231:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 273,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 219,
                                          "src": "7260:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 274,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "from",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1016,
                                        "src": "7260:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 275,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 219,
                                          "src": "7288:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 276,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "to",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1018,
                                        "src": "7288:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 277,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 219,
                                          "src": "7314:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 278,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "identifier",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1020,
                                        "src": "7314:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 279,
                                          "name": "item",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 219,
                                          "src": "7348:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                            "typeString": "struct ConduitTransfer calldata"
                                          }
                                        },
                                        "id": 280,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1022,
                                        "src": "7348:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 270,
                                      "name": "_performERC1155Transfer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1402,
                                      "src": "7189:23:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,address,uint256,uint256)"
                                      }
                                    },
                                    "id": 281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7189:185:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 282,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7189:185:0"
                                }
                              ]
                            }
                          },
                          "id": 289,
                          "nodeType": "IfStatement",
                          "src": "6637:843:0",
                          "trueBody": {
                            "id": 264,
                            "nodeType": "Block",
                            "src": "6682:400:0",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 247,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 244,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 219,
                                      "src": "6772:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1022,
                                    "src": "6772:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 246,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6787:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "6772:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 252,
                                "nodeType": "IfStatement",
                                "src": "6768:93:0",
                                "trueBody": {
                                  "id": 251,
                                  "nodeType": "Block",
                                  "src": "6790:71:0",
                                  "statements": [
                                    {
                                      "errorCall": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 248,
                                          "name": "InvalidERC721TransferAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1301,
                                          "src": "6816:27:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                            "typeString": "function () pure"
                                          }
                                        },
                                        "id": 249,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6816:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 250,
                                      "nodeType": "RevertStatement",
                                      "src": "6809:36:0"
                                    }
                                  ]
                                }
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 254,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 219,
                                        "src": "6957:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 255,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "token",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1014,
                                      "src": "6957:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 256,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 219,
                                        "src": "6986:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 257,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "from",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1016,
                                      "src": "6986:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 258,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 219,
                                        "src": "7014:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 259,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "to",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1018,
                                      "src": "7014:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 260,
                                        "name": "item",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 219,
                                        "src": "7040:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                          "typeString": "struct ConduitTransfer calldata"
                                        }
                                      },
                                      "id": 261,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "identifier",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1020,
                                      "src": "7040:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 253,
                                    "name": "_performERC721Transfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1386,
                                    "src": "6916:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,address,address,uint256)"
                                    }
                                  },
                                  "id": 262,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6916:154:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 263,
                                "nodeType": "ExpressionStatement",
                                "src": "6916:154:0"
                              }
                            ]
                          }
                        },
                        "id": 290,
                        "nodeType": "IfStatement",
                        "src": "6456:1024:0",
                        "trueBody": {
                          "id": 238,
                          "nodeType": "Block",
                          "src": "6500:131:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 228,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 219,
                                      "src": "6575:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "token",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1014,
                                    "src": "6575:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 230,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 219,
                                      "src": "6587:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "from",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1016,
                                    "src": "6587:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 232,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 219,
                                      "src": "6598:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "to",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1018,
                                    "src": "6598:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 234,
                                      "name": "item",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 219,
                                      "src": "6607:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                                        "typeString": "struct ConduitTransfer calldata"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1022,
                                    "src": "6607:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 227,
                                  "name": "_performERC20Transfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1372,
                                  "src": "6553:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256)"
                                  }
                                },
                                "id": 236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6553:66:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 237,
                              "nodeType": "ExpressionStatement",
                              "src": "6553:66:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "6165:149:0",
                    "text": " @dev Internal function to transfer a given ERC20/721/1155 item.\n @param item The ERC20/721/1155 item to transfer."
                  },
                  "id": 292,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "6329:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "item",
                        "nameLocation": "6364:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 292,
                        "src": "6339:29:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConduitTransfer_$1023_calldata_ptr",
                          "typeString": "struct ConduitTransfer"
                        },
                        "typeName": {
                          "id": 218,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 217,
                            "name": "ConduitTransfer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1023,
                            "src": "6339:15:0"
                          },
                          "referencedDeclaration": 1023,
                          "src": "6339:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitTransfer_$1023_storage_ptr",
                            "typeString": "struct ConduitTransfer"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6338:31:0"
                  },
                  "returnParameters": {
                    "id": 221,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6379:0:0"
                  },
                  "scope": 293,
                  "src": "6320:1167:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 294,
              "src": "1067:6423:0",
              "usedErrors": [
                1236,
                1239,
                1242,
                1245,
                1301,
                1304,
                1317,
                1332,
                1343,
                1348
              ]
            }
          ],
          "src": "33:7459:0"
        },
        "id": 0
      },
      "contracts/conduit/ConduitController.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/ConduitController.sol",
          "exportedSymbols": {
            "Conduit": [
              293
            ],
            "ConduitController": [
              998
            ],
            "ConduitControllerInterface": [
              1227
            ],
            "ConduitInterface": [
              1295
            ]
          },
          "id": 999,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 295,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:1"
            },
            {
              "absolutePath": "contracts/interfaces/ConduitControllerInterface.sol",
              "file": "../interfaces/ConduitControllerInterface.sol",
              "id": 297,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 999,
              "sourceUnit": 1228,
              "src": "81:93:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 296,
                    "name": "ConduitControllerInterface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1227,
                    "src": "92:26:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/ConduitInterface.sol",
              "file": "../interfaces/ConduitInterface.sol",
              "id": 299,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 999,
              "sourceUnit": 1296,
              "src": "178:70:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 298,
                    "name": "ConduitInterface",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1295,
                    "src": "187:16:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/Conduit.sol",
              "file": "./Conduit.sol",
              "id": 301,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 999,
              "sourceUnit": 294,
              "src": "252:40:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 300,
                    "name": "Conduit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 293,
                    "src": "261:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 303,
                    "name": "ConduitControllerInterface",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1227,
                    "src": "605:26:1"
                  },
                  "id": 304,
                  "nodeType": "InheritanceSpecifier",
                  "src": "605:26:1"
                }
              ],
              "canonicalName": "ConduitController",
              "contractDependencies": [
                293
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 302,
                "nodeType": "StructuredDocumentation",
                "src": "296:277:1",
                "text": " @title ConduitController\n @author 0age\n @notice ConduitController enables deploying and managing new conduits, or\n         contracts that allow registered callers (or open \"channels\") to\n         transfer approved ERC20/721/1155 tokens on their behalf."
              },
              "fullyImplemented": true,
              "id": 998,
              "linearizedBaseContracts": [
                998,
                1227
              ],
              "name": "ConduitController",
              "nameLocation": "584:17:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "_conduits",
                  "nameLocation": "764:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "717:56:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                    "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties)"
                  },
                  "typeName": {
                    "id": 308,
                    "keyType": {
                      "id": 305,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "725:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "717:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                      "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties)"
                    },
                    "valueType": {
                      "id": 307,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 306,
                        "name": "ConduitProperties",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1053,
                        "src": "736:17:1"
                      },
                      "referencedDeclaration": 1053,
                      "src": "736:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                        "typeString": "struct ConduitControllerInterface.ConduitProperties"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "immutable",
                  "name": "_CONDUIT_CREATION_CODE_HASH",
                  "nameLocation": "891:27:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "864:54:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "immutable",
                  "name": "_CONDUIT_RUNTIME_CODE_HASH",
                  "nameLocation": "952:26:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "925:53:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 312,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 347,
                    "nodeType": "Block",
                    "src": "1166:443:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 317,
                            "name": "_CONDUIT_CREATION_CODE_HASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "1255:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 320,
                                      "name": "Conduit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 293,
                                      "src": "1300:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Conduit_$293_$",
                                        "typeString": "type(contract Conduit)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_Conduit_$293_$",
                                        "typeString": "type(contract Conduit)"
                                      }
                                    ],
                                    "id": 319,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "1295:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 321,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1295:13:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_Conduit_$293",
                                    "typeString": "type(contract Conduit)"
                                  }
                                },
                                "id": 322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "1295:26:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 318,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1285:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1285:37:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1255:67:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 325,
                        "nodeType": "ExpressionStatement",
                        "src": "1255:67:1"
                      },
                      {
                        "assignments": [
                          328
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 328,
                            "mutability": "mutable",
                            "name": "zeroConduit",
                            "nameLocation": "1404:11:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 347,
                            "src": "1396:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Conduit_$293",
                              "typeString": "contract Conduit"
                            },
                            "typeName": {
                              "id": 327,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 326,
                                "name": "Conduit",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 293,
                                "src": "1396:7:1"
                              },
                              "referencedDeclaration": 293,
                              "src": "1396:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Conduit_$293",
                                "typeString": "contract Conduit"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 338,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1418:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Conduit_$293_$",
                                "typeString": "function () returns (contract Conduit)"
                              },
                              "typeName": {
                                "id": 330,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 329,
                                  "name": "Conduit",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 293,
                                  "src": "1422:7:1"
                                },
                                "referencedDeclaration": 293,
                                "src": "1422:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Conduit_$293",
                                  "typeString": "contract Conduit"
                                }
                              }
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "salt"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 334,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1445:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 333,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1437:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 332,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1437:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1437:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "src": "1418:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Conduit_$293_$salt",
                              "typeString": "function () returns (contract Conduit)"
                            }
                          },
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1418:33:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Conduit_$293",
                            "typeString": "contract Conduit"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1396:55:1"
                      },
                      {
                        "expression": {
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 339,
                            "name": "_CONDUIT_RUNTIME_CODE_HASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "1543:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 342,
                                  "name": "zeroConduit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 328,
                                  "src": "1580:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Conduit_$293",
                                    "typeString": "contract Conduit"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Conduit_$293",
                                    "typeString": "contract Conduit"
                                  }
                                ],
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1572:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 340,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1572:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1572:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "codehash",
                            "nodeType": "MemberAccess",
                            "src": "1572:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1543:58:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 346,
                        "nodeType": "ExpressionStatement",
                        "src": "1543:58:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 314,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:159:1",
                    "text": " @dev Initialize contract by deploying a conduit and setting the creation\n      code and runtime code hashes as immutable arguments."
                  },
                  "id": 348,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 315,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1163:2:1"
                  },
                  "returnParameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1166:0:1"
                  },
                  "scope": 998,
                  "src": "1152:457:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1117
                  ],
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "2525:1734:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 365,
                                        "name": "conduitKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 351,
                                        "src": "2644:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 364,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2636:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes20_$",
                                        "typeString": "type(bytes20)"
                                      },
                                      "typeName": {
                                        "id": 363,
                                        "name": "bytes20",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2636:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2636:19:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes20",
                                      "typeString": "bytes20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes20",
                                      "typeString": "bytes20"
                                    }
                                  ],
                                  "id": 362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2628:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 361,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2628:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2628:28:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2620:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 359,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2620:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2620:37:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 369,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2661:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2661:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2620:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 376,
                        "nodeType": "IfStatement",
                        "src": "2616:184:1",
                        "trueBody": {
                          "id": 375,
                          "nodeType": "Block",
                          "src": "2673:127:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 372,
                                  "name": "InvalidCreator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1079,
                                  "src": "2772:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2772:16:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 374,
                              "nodeType": "RevertStatement",
                              "src": "2765:23:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 377,
                            "name": "conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "2890:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "hexValue": "30786666",
                                                    "id": 389,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3068:4:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    },
                                                    "value": "0xff"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    }
                                                  ],
                                                  "id": 388,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "3061:6:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_bytes1_$",
                                                    "typeString": "type(bytes1)"
                                                  },
                                                  "typeName": {
                                                    "id": 387,
                                                    "name": "bytes1",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "3061:6:1",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 390,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3061:12:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 393,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -28,
                                                    "src": "3112:4:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_ConduitController_$998",
                                                      "typeString": "contract ConduitController"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_ConduitController_$998",
                                                      "typeString": "contract ConduitController"
                                                    }
                                                  ],
                                                  "id": 392,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "3104:7:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 391,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "3104:7:1",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 394,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3104:13:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 395,
                                                "name": "conduitKey",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 351,
                                                "src": "3148:10:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              {
                                                "id": 396,
                                                "name": "_CONDUIT_CREATION_CODE_HASH",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 311,
                                                "src": "3189:27:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "expression": {
                                                "id": 385,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "3014:3:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 386,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "src": "3014:16:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 397,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3014:229:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 384,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "2978:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 398,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2978:288:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 383,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2948:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 382,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2948:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2948:337:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2922:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 380,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2922:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2922:378:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2900:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 378,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2900:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2900:411:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2890:421:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 403,
                        "nodeType": "ExpressionStatement",
                        "src": "2890:421:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 404,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "3409:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "codehash",
                            "nodeType": "MemberAccess",
                            "src": "3409:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 406,
                            "name": "_CONDUIT_RUNTIME_CODE_HASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "3429:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3409:46:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 413,
                        "nodeType": "IfStatement",
                        "src": "3405:196:1",
                        "trueBody": {
                          "id": 412,
                          "nodeType": "Block",
                          "src": "3457:144:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 409,
                                    "name": "conduit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 357,
                                    "src": "3581:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 408,
                                  "name": "ConduitAlreadyExists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1087,
                                  "src": "3560:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3560:29:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 411,
                              "nodeType": "RevertStatement",
                              "src": "3553:36:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "3691:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Conduit_$293_$",
                                "typeString": "function () returns (contract Conduit)"
                              },
                              "typeName": {
                                "id": 415,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 414,
                                  "name": "Conduit",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 293,
                                  "src": "3695:7:1"
                                },
                                "referencedDeclaration": 293,
                                "src": "3695:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Conduit_$293",
                                  "typeString": "contract Conduit"
                                }
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "salt"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 417,
                                "name": "conduitKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "3710:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "src": "3691:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Conduit_$293_$salt",
                              "typeString": "function () returns (contract Conduit)"
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3691:33:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Conduit_$293",
                            "typeString": "contract Conduit"
                          }
                        },
                        "id": 420,
                        "nodeType": "ExpressionStatement",
                        "src": "3691:33:1"
                      },
                      {
                        "expression": {
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 421,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "3809:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 423,
                              "indexExpression": {
                                "id": 422,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 357,
                                "src": "3819:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3809:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 424,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1043,
                            "src": "3809:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 425,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "3836:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3809:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 427,
                        "nodeType": "ExpressionStatement",
                        "src": "3809:39:1"
                      },
                      {
                        "expression": {
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 428,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "3942:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 430,
                              "indexExpression": {
                                "id": 429,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 357,
                                "src": "3952:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3942:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1041,
                            "src": "3942:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 432,
                            "name": "conduitKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "3967:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3942:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 434,
                        "nodeType": "ExpressionStatement",
                        "src": "3942:35:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 436,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "4079:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 437,
                              "name": "conduitKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "4088:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 435,
                            "name": "NewConduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1060,
                            "src": "4068:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,bytes32)"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4068:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 439,
                        "nodeType": "EmitStatement",
                        "src": "4063:36:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 441,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "4217:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4234:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4226:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 442,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4226:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4226:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 446,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 353,
                              "src": "4238:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 440,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1069,
                            "src": "4196:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4196:55:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 448,
                        "nodeType": "EmitStatement",
                        "src": "4191:60:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 349,
                    "nodeType": "StructuredDocumentation",
                    "src": "1617:761:1",
                    "text": " @notice Deploy a new conduit using a supplied conduit key and assigning\n         an initial owner for the deployed conduit. Note that the first\n         twenty bytes of the supplied conduit key must match the caller\n         and that a new conduit cannot be created if one has already been\n         deployed using the same conduit key.\n @param conduitKey   The conduit key used to deploy the conduit. Note that\n                     the first twenty bytes of the conduit key must match\n                     the caller of this contract.\n @param initialOwner The initial owner to set for the new conduit.\n @return conduit The address of the newly deployed conduit."
                  },
                  "functionSelector": "794593bc",
                  "id": 450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createConduit",
                  "nameLocation": "2393:13:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 355,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2476:8:1"
                  },
                  "parameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "conduitKey",
                        "nameLocation": "2415:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "2407:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2407:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "2435:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "2427:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2427:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2406:42:1"
                  },
                  "returnParameters": {
                    "id": 358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "2511:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "2503:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2503:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2502:17:1"
                  },
                  "scope": 998,
                  "src": "2384:1875:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1127
                  ],
                  "body": {
                    "id": 582,
                    "nodeType": "Block",
                    "src": "5122:2711:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 462,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "5240:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 461,
                            "name": "_assertCallerIsConduitOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "5212:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5212:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 464,
                        "nodeType": "ExpressionStatement",
                        "src": "5212:36:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 469,
                              "name": "channel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "5353:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 470,
                              "name": "isOpen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "5362:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 466,
                                  "name": "conduit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 453,
                                  "src": "5330:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 465,
                                "name": "ConduitInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1295,
                                "src": "5313:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ConduitInterface_$1295_$",
                                  "typeString": "type(contract ConduitInterface)"
                                }
                              },
                              "id": 467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5313:25:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConduitInterface_$1295",
                                "typeString": "contract ConduitInterface"
                              }
                            },
                            "id": 468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateChannel",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1294,
                            "src": "5313:39:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (address,bool) external"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5313:56:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "5313:56:1"
                      },
                      {
                        "assignments": [
                          475
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 475,
                            "mutability": "mutable",
                            "name": "conduitProperties",
                            "nameLocation": "5488:17:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 582,
                            "src": "5462:43:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                              "typeString": "struct ConduitControllerInterface.ConduitProperties"
                            },
                            "typeName": {
                              "id": 474,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 473,
                                "name": "ConduitProperties",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1053,
                                "src": "5462:17:1"
                              },
                              "referencedDeclaration": 1053,
                              "src": "5462:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 479,
                        "initialValue": {
                          "baseExpression": {
                            "id": 476,
                            "name": "_conduits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 309,
                            "src": "5508:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                              "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                            }
                          },
                          "id": 478,
                          "indexExpression": {
                            "id": 477,
                            "name": "conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "5518:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5508:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                            "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5462:64:1"
                      },
                      {
                        "assignments": [
                          481
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 481,
                            "mutability": "mutable",
                            "name": "channelIndexPlusOne",
                            "nameLocation": "5629:19:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 582,
                            "src": "5621:27:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 480,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5621:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 487,
                        "initialValue": {
                          "components": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 482,
                                  "name": "conduitProperties",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 475,
                                  "src": "5666:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                                    "typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
                                  }
                                },
                                "id": 483,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "channelIndexesPlusOne",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1052,
                                "src": "5666:39:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 485,
                              "indexExpression": {
                                "id": 484,
                                "name": "channel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 455,
                                "src": "5706:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5666:48:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 486,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5651:74:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5621:104:1"
                      },
                      {
                        "assignments": [
                          489
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 489,
                            "mutability": "mutable",
                            "name": "channelPreviouslyOpen",
                            "nameLocation": "5821:21:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 582,
                            "src": "5816:26:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 488,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5816:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 493,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 490,
                            "name": "channelIndexPlusOne",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "5845:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5868:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5845:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5816:53:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 494,
                            "name": "isOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "5963:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "5973:22:1",
                            "subExpression": {
                              "id": 495,
                              "name": "channelPreviouslyOpen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5974:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5963:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "6360:7:1",
                              "subExpression": {
                                "id": 518,
                                "name": "isOpen",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 457,
                                "src": "6361:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 520,
                              "name": "channelPreviouslyOpen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "6371:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6360:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 580,
                          "nodeType": "IfStatement",
                          "src": "6356:1470:1",
                          "trueBody": {
                            "id": 579,
                            "nodeType": "Block",
                            "src": "6394:1432:1",
                            "statements": [
                              {
                                "assignments": [
                                  523
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 523,
                                    "mutability": "mutable",
                                    "name": "removedChannelIndex",
                                    "nameLocation": "6578:19:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 579,
                                    "src": "6570:27:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 522,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6570:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 527,
                                "initialValue": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 526,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 524,
                                    "name": "channelIndexPlusOne",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 481,
                                    "src": "6600:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 525,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6622:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "6600:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "6570:53:1"
                              },
                              {
                                "assignments": [
                                  529
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 529,
                                    "mutability": "mutable",
                                    "name": "finalChannelIndex",
                                    "nameLocation": "6729:17:1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 579,
                                    "src": "6721:25:1",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 528,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6721:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 535,
                                "initialValue": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 530,
                                        "name": "conduitProperties",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 475,
                                        "src": "6749:17:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                                          "typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
                                        }
                                      },
                                      "id": 531,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "channels",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1048,
                                      "src": "6749:26:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 532,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "6749:33:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6785:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "6749:37:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "6721:65:1"
                              },
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 536,
                                    "name": "finalChannelIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 529,
                                    "src": "6886:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "id": 537,
                                    "name": "removedChannelIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 523,
                                    "src": "6907:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6886:40:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 565,
                                "nodeType": "IfStatement",
                                "src": "6882:653:1",
                                "trueBody": {
                                  "id": 564,
                                  "nodeType": "Block",
                                  "src": "6928:607:1",
                                  "statements": [
                                    {
                                      "assignments": [
                                        540
                                      ],
                                      "declarations": [
                                        {
                                          "constant": false,
                                          "id": 540,
                                          "mutability": "mutable",
                                          "name": "finalChannel",
                                          "nameLocation": "7036:12:1",
                                          "nodeType": "VariableDeclaration",
                                          "scope": 564,
                                          "src": "7028:20:1",
                                          "stateVariable": false,
                                          "storageLocation": "default",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          "typeName": {
                                            "id": 539,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7028:7:1",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "visibility": "internal"
                                        }
                                      ],
                                      "id": 546,
                                      "initialValue": {
                                        "components": [
                                          {
                                            "baseExpression": {
                                              "expression": {
                                                "id": 541,
                                                "name": "conduitProperties",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 475,
                                                "src": "7074:17:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                                                  "typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
                                                }
                                              },
                                              "id": 542,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "channels",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1048,
                                              "src": "7074:26:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                "typeString": "address[] storage ref"
                                              }
                                            },
                                            "id": 544,
                                            "indexExpression": {
                                              "id": 543,
                                              "name": "finalChannelIndex",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 529,
                                              "src": "7101:17:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7074:45:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "id": 545,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "7051:87:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "VariableDeclarationStatement",
                                      "src": "7028:110:1"
                                    },
                                    {
                                      "expression": {
                                        "id": 553,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 547,
                                              "name": "conduitProperties",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 475,
                                              "src": "7240:17:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
                                              }
                                            },
                                            "id": 550,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "channels",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1048,
                                            "src": "7240:26:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                              "typeString": "address[] storage ref"
                                            }
                                          },
                                          "id": 551,
                                          "indexExpression": {
                                            "id": 549,
                                            "name": "removedChannelIndex",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 523,
                                            "src": "7267:19:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "7240:47:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "id": 552,
                                          "name": "finalChannel",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 540,
                                          "src": "7290:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "src": "7240:62:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 554,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7240:62:1"
                                    },
                                    {
                                      "expression": {
                                        "id": 562,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 555,
                                              "name": "conduitProperties",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 475,
                                              "src": "7402:17:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
                                              }
                                            },
                                            "id": 558,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "channelIndexesPlusOne",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1052,
                                            "src": "7402:39:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 559,
                                          "indexExpression": {
                                            "id": 557,
                                            "name": "finalChannel",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 540,
                                            "src": "7442:12:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "7402:53:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "components": [
                                            {
                                              "id": 560,
                                              "name": "channelIndexPlusOne",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 481,
                                              "src": "7481:19:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 561,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "7458:61:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "7402:117:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 563,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7402:117:1"
                                    }
                                  ]
                                }
                              },
                              {
                                "expression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "expression": {
                                        "id": 566,
                                        "name": "conduitProperties",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 475,
                                        "src": "7632:17:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                                          "typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
                                        }
                                      },
                                      "id": 569,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "channels",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1048,
                                      "src": "7632:26:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 570,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "pop",
                                    "nodeType": "MemberAccess",
                                    "src": "7632:30:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                      "typeString": "function (address[] storage pointer)"
                                    }
                                  },
                                  "id": 571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7632:32:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 572,
                                "nodeType": "ExpressionStatement",
                                "src": "7632:32:1"
                              },
                              {
                                "expression": {
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "delete",
                                  "prefix": true,
                                  "src": "7759:55:1",
                                  "subExpression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 573,
                                        "name": "conduitProperties",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 475,
                                        "src": "7766:17:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                                          "typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
                                        }
                                      },
                                      "id": 574,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "channelIndexesPlusOne",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1052,
                                      "src": "7766:39:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 576,
                                    "indexExpression": {
                                      "id": 575,
                                      "name": "channel",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 455,
                                      "src": "7806:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "7766:48:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 578,
                                "nodeType": "ExpressionStatement",
                                "src": "7759:55:1"
                              }
                            ]
                          }
                        },
                        "id": 581,
                        "nodeType": "IfStatement",
                        "src": "5959:1867:1",
                        "trueBody": {
                          "id": 517,
                          "nodeType": "Block",
                          "src": "5997:353:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 503,
                                    "name": "channel",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 455,
                                    "src": "6115:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 498,
                                      "name": "conduitProperties",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 475,
                                      "src": "6083:17:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                                        "typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
                                      }
                                    },
                                    "id": 501,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "channels",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1048,
                                    "src": "6083:26:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "6083:31:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6083:40:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 505,
                              "nodeType": "ExpressionStatement",
                              "src": "6083:40:1"
                            },
                            {
                              "expression": {
                                "id": 515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 506,
                                      "name": "conduitProperties",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 475,
                                      "src": "6220:17:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                                        "typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
                                      }
                                    },
                                    "id": 509,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "channelIndexesPlusOne",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1052,
                                    "src": "6220:39:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 510,
                                  "indexExpression": {
                                    "id": 508,
                                    "name": "channel",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 455,
                                    "src": "6260:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6220:48:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 511,
                                          "name": "conduitProperties",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 475,
                                          "src": "6290:17:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage_ptr",
                                            "typeString": "struct ConduitControllerInterface.ConduitProperties storage pointer"
                                          }
                                        },
                                        "id": 512,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "channels",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1048,
                                        "src": "6290:26:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 513,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "6290:33:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 514,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "6271:67:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6220:118:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 516,
                              "nodeType": "ExpressionStatement",
                              "src": "6220:118:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "4267:727:1",
                    "text": " @notice Open or close a channel on a given conduit, thereby allowing the\n         specified account to execute transfers against that conduit.\n         Extreme care must be taken when updating channels, as malicious\n         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155\n         tokens where the token holder has granted the conduit approval.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to open or close the channel.\n @param channel The channel to open or close on the conduit.\n @param isOpen  A boolean indicating whether to open or close the channel."
                  },
                  "functionSelector": "13ad9cab",
                  "id": 583,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateChannel",
                  "nameLocation": "5009:13:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 459,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5113:8:1"
                  },
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "5041:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 583,
                        "src": "5033:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5033:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "5067:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 583,
                        "src": "5059:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5059:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "5090:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 583,
                        "src": "5085:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5085:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5022:81:1"
                  },
                  "returnParameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5122:0:1"
                  },
                  "scope": 998,
                  "src": "5000:2833:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1135
                  ],
                  "body": {
                    "id": 620,
                    "nodeType": "Block",
                    "src": "8376:618:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 593,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 586,
                              "src": "8494:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 592,
                            "name": "_assertCallerIsConduitOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "8466:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8466:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 595,
                        "nodeType": "ExpressionStatement",
                        "src": "8466:36:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 596,
                            "name": "newPotentialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "8589:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8618:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8610:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 597,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8610:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8610:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8589:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 607,
                        "nodeType": "IfStatement",
                        "src": "8585:110:1",
                        "trueBody": {
                          "id": 606,
                          "nodeType": "Block",
                          "src": "8622:73:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 603,
                                    "name": "conduit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 586,
                                    "src": "8675:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 602,
                                  "name": "NewPotentialOwnerIsZeroAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1097,
                                  "src": "8644:30:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8644:39:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 605,
                              "nodeType": "RevertStatement",
                              "src": "8637:46:1"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 609,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 586,
                              "src": "8814:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 610,
                              "name": "newPotentialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "8823:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 608,
                            "name": "PotentialOwnerUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "8792:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8792:49:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 612,
                        "nodeType": "EmitStatement",
                        "src": "8787:54:1"
                      },
                      {
                        "expression": {
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 613,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "8933:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 615,
                              "indexExpression": {
                                "id": 614,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 586,
                                "src": "8943:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8933:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 616,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "potentialOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1045,
                            "src": "8933:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 617,
                            "name": "newPotentialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "8969:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8933:53:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 619,
                        "nodeType": "ExpressionStatement",
                        "src": "8933:53:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 584,
                    "nodeType": "StructuredDocumentation",
                    "src": "7841:417:1",
                    "text": " @notice Initiate conduit ownership transfer by assigning a new potential\n         owner for the given conduit. Once set, the new potential owner\n         may call `acceptOwnership` to claim ownership of the conduit.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to initiate ownership transfer."
                  },
                  "functionSelector": "6d435421",
                  "id": 621,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nameLocation": "8273:17:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 590,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "8362:8:1"
                  },
                  "parameters": {
                    "id": 589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 586,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "8299:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 621,
                        "src": "8291:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8291:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "newPotentialOwner",
                        "nameLocation": "8316:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 621,
                        "src": "8308:25:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8308:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8290:44:1"
                  },
                  "returnParameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8376:0:1"
                  },
                  "scope": 998,
                  "src": "8264:730:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1141
                  ],
                  "body": {
                    "id": 646,
                    "nodeType": "Block",
                    "src": "9334:395:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 629,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 624,
                              "src": "9452:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 628,
                            "name": "_assertCallerIsConduitOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 976,
                            "src": "9424:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9424:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 631,
                        "nodeType": "ExpressionStatement",
                        "src": "9424:36:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 633,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 624,
                              "src": "9580:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9597:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9589:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 634,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9589:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9589:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 632,
                            "name": "PotentialOwnerUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "9558:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9558:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 639,
                        "nodeType": "EmitStatement",
                        "src": "9553:47:1"
                      },
                      {
                        "expression": {
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "9681:40:1",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 640,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "9688:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 642,
                              "indexExpression": {
                                "id": 641,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 624,
                                "src": "9698:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9688:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 643,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "potentialOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1045,
                            "src": "9688:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 645,
                        "nodeType": "ExpressionStatement",
                        "src": "9681:40:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 622,
                    "nodeType": "StructuredDocumentation",
                    "src": "9002:258:1",
                    "text": " @notice Clear the currently set potential owner, if any, from a conduit.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to cancel ownership transfer."
                  },
                  "functionSelector": "7b37e561",
                  "id": 647,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancelOwnershipTransfer",
                  "nameLocation": "9275:23:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 626,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "9325:8:1"
                  },
                  "parameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "9307:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 647,
                        "src": "9299:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9299:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9298:17:1"
                  },
                  "returnParameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9334:0:1"
                  },
                  "scope": 998,
                  "src": "9266:463:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1147
                  ],
                  "body": {
                    "id": 703,
                    "nodeType": "Block",
                    "src": "10073:977:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 655,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 650,
                              "src": "10161:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 654,
                            "name": "_assertConduitExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "10140:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10140:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 657,
                        "nodeType": "ExpressionStatement",
                        "src": "10140:29:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 658,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10265:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10265:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 660,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "10279:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 662,
                              "indexExpression": {
                                "id": 661,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 650,
                                "src": "10289:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10279:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "potentialOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1045,
                            "src": "10279:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10265:47:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 670,
                        "nodeType": "IfStatement",
                        "src": "10261:203:1",
                        "trueBody": {
                          "id": 669,
                          "nodeType": "Block",
                          "src": "10314:150:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 666,
                                    "name": "conduit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 650,
                                    "src": "10444:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 665,
                                  "name": "CallerIsNotNewPotentialOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "10415:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10415:37:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 668,
                              "nodeType": "RevertStatement",
                              "src": "10408:44:1"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 672,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 650,
                              "src": "10583:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 675,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10600:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10592:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 673,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10592:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10592:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 671,
                            "name": "PotentialOwnerUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "10561:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10561:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 678,
                        "nodeType": "EmitStatement",
                        "src": "10556:47:1"
                      },
                      {
                        "expression": {
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "10684:40:1",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 679,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "10691:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 681,
                              "indexExpression": {
                                "id": 680,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 650,
                                "src": "10701:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10691:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 682,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "potentialOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1045,
                            "src": "10691:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 684,
                        "nodeType": "ExpressionStatement",
                        "src": "10684:40:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 686,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 650,
                              "src": "10854:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 687,
                                  "name": "_conduits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "10876:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                    "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                  }
                                },
                                "id": 689,
                                "indexExpression": {
                                  "id": 688,
                                  "name": "conduit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 650,
                                  "src": "10886:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10876:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                  "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                                }
                              },
                              "id": 690,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1043,
                              "src": "10876:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 691,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10915:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10915:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 685,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1069,
                            "src": "10819:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10819:117:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 694,
                        "nodeType": "EmitStatement",
                        "src": "10814:122:1"
                      },
                      {
                        "expression": {
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 695,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "11005:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 697,
                              "indexExpression": {
                                "id": 696,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 650,
                                "src": "11015:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11005:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 698,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1043,
                            "src": "11005:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 699,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11032:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11032:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11005:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 702,
                        "nodeType": "ExpressionStatement",
                        "src": "11005:37:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 648,
                    "nodeType": "StructuredDocumentation",
                    "src": "9737:270:1",
                    "text": " @notice Accept ownership of a supplied conduit. Only accounts that the\n         current owner has set as the new potential owner may call this\n         function.\n @param conduit The conduit for which to accept ownership."
                  },
                  "functionSelector": "51710e45",
                  "id": 704,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptOwnership",
                  "nameLocation": "10022:15:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 652,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "10064:8:1"
                  },
                  "parameters": {
                    "id": 651,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 650,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "10046:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 704,
                        "src": "10038:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 649,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10038:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10037:17:1"
                  },
                  "returnParameters": {
                    "id": 653,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10073:0:1"
                  },
                  "scope": 998,
                  "src": "10013:1037:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1155
                  ],
                  "body": {
                    "id": 724,
                    "nodeType": "Block",
                    "src": "11416:216:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 714,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "11504:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 713,
                            "name": "_assertConduitExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "11483:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11483:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "11483:29:1"
                      },
                      {
                        "expression": {
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 717,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 711,
                            "src": "11592:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 718,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "11600:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 720,
                              "indexExpression": {
                                "id": 719,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 707,
                                "src": "11610:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11600:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1043,
                            "src": "11600:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11592:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 723,
                        "nodeType": "ExpressionStatement",
                        "src": "11592:32:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 705,
                    "nodeType": "StructuredDocumentation",
                    "src": "11058:230:1",
                    "text": " @notice Retrieve the current owner of a deployed conduit.\n @param conduit The conduit for which to retrieve the associated owner.\n @return owner The owner of the supplied conduit."
                  },
                  "functionSelector": "14afd79e",
                  "id": 725,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ownerOf",
                  "nameLocation": "11303:7:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 709,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "11369:8:1"
                  },
                  "parameters": {
                    "id": 708,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 707,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "11319:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 725,
                        "src": "11311:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 706,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11311:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11310:17:1"
                  },
                  "returnParameters": {
                    "id": 712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 711,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "11404:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 725,
                        "src": "11396:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 710,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11396:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11395:15:1"
                  },
                  "scope": 998,
                  "src": "11294:338:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1163
                  ],
                  "body": {
                    "id": 752,
                    "nodeType": "Block",
                    "src": "12088:266:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 734,
                            "name": "conduitKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "12174:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 735,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "12187:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 737,
                              "indexExpression": {
                                "id": 736,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 728,
                                "src": "12197:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12187:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 738,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1041,
                            "src": "12187:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "12174:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 740,
                        "nodeType": "ExpressionStatement",
                        "src": "12174:35:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 741,
                            "name": "conduitKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "12276:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12298:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12290:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 742,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "12290:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12290:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "12276:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 751,
                        "nodeType": "IfStatement",
                        "src": "12272:75:1",
                        "trueBody": {
                          "id": 750,
                          "nodeType": "Block",
                          "src": "12302:45:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 747,
                                  "name": "NoConduit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1082,
                                  "src": "12324:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12324:11:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 749,
                              "nodeType": "RevertStatement",
                              "src": "12317:18:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 726,
                    "nodeType": "StructuredDocumentation",
                    "src": "11640:316:1",
                    "text": " @notice Retrieve the conduit key for a deployed conduit via reverse\n         lookup.\n @param conduit The conduit for which to retrieve the associated conduit\n                key.\n @return conduitKey The conduit key used to deploy the supplied conduit."
                  },
                  "functionSelector": "93790f44",
                  "id": 753,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getKey",
                  "nameLocation": "11971:6:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 730,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "12036:8:1"
                  },
                  "parameters": {
                    "id": 729,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 728,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "11986:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "11978:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11978:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11977:17:1"
                  },
                  "returnParameters": {
                    "id": 733,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 732,
                        "mutability": "mutable",
                        "name": "conduitKey",
                        "nameLocation": "12071:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "12063:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 731,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "12063:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12062:20:1"
                  },
                  "scope": 998,
                  "src": "11962:392:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1173
                  ],
                  "body": {
                    "id": 799,
                    "nodeType": "Block",
                    "src": "12974:665:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 764,
                            "name": "conduit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "13063:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "hexValue": "30786666",
                                                    "id": 776,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "13241:4:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    },
                                                    "value": "0xff"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    }
                                                  ],
                                                  "id": 775,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "13234:6:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_bytes1_$",
                                                    "typeString": "type(bytes1)"
                                                  },
                                                  "typeName": {
                                                    "id": 774,
                                                    "name": "bytes1",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "13234:6:1",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 777,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "13234:12:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 780,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -28,
                                                    "src": "13285:4:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_ConduitController_$998",
                                                      "typeString": "contract ConduitController"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_ConduitController_$998",
                                                      "typeString": "contract ConduitController"
                                                    }
                                                  ],
                                                  "id": 779,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "13277:7:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 778,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "13277:7:1",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 781,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "13277:13:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "id": 782,
                                                "name": "conduitKey",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 756,
                                                "src": "13321:10:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              {
                                                "id": 783,
                                                "name": "_CONDUIT_CREATION_CODE_HASH",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 311,
                                                "src": "13362:27:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "expression": {
                                                "id": 772,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "13187:3:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 773,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "src": "13187:16:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 784,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "13187:229:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 771,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "13151:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 785,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "13151:288:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 770,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "13121:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 769,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "13121:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 786,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13121:337:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13095:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 767,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13095:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13095:378:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13073:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 765,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13073:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13073:411:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13063:421:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 790,
                        "nodeType": "ExpressionStatement",
                        "src": "13063:421:1"
                      },
                      {
                        "expression": {
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 791,
                            "name": "exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "13574:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 792,
                                    "name": "conduit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 760,
                                    "src": "13584:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 793,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "codehash",
                                  "nodeType": "MemberAccess",
                                  "src": "13584:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 794,
                                  "name": "_CONDUIT_RUNTIME_CODE_HASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 313,
                                  "src": "13604:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "13584:46:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 796,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13583:48:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13574:57:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 798,
                        "nodeType": "ExpressionStatement",
                        "src": "13574:57:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 754,
                    "nodeType": "StructuredDocumentation",
                    "src": "12362:463:1",
                    "text": " @notice Derive the conduit associated with a given conduit key and\n         determine whether that conduit exists (i.e. whether it has been\n         deployed).\n @param conduitKey The conduit key used to derive the conduit.\n @return conduit The derived address of the conduit.\n @return exists  A boolean indicating whether the derived conduit has been\n                 deployed or not."
                  },
                  "functionSelector": "6e9bfd9f",
                  "id": 800,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getConduit",
                  "nameLocation": "12840:10:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 758,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "12912:8:1"
                  },
                  "parameters": {
                    "id": 757,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 756,
                        "mutability": "mutable",
                        "name": "conduitKey",
                        "nameLocation": "12859:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 800,
                        "src": "12851:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 755,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "12851:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12850:20:1"
                  },
                  "returnParameters": {
                    "id": 763,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 760,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "12947:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 800,
                        "src": "12939:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 759,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12939:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 762,
                        "mutability": "mutable",
                        "name": "exists",
                        "nameLocation": "12961:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 800,
                        "src": "12956:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 761,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12956:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12938:30:1"
                  },
                  "scope": 998,
                  "src": "12831:808:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1181
                  ],
                  "body": {
                    "id": 820,
                    "nodeType": "Block",
                    "src": "14263:244:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 810,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 803,
                              "src": "14351:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 809,
                            "name": "_assertConduitExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "14330:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14330:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 812,
                        "nodeType": "ExpressionStatement",
                        "src": "14330:29:1"
                      },
                      {
                        "expression": {
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 813,
                            "name": "potentialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "14449:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 814,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "14466:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 816,
                              "indexExpression": {
                                "id": 815,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 803,
                                "src": "14476:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14466:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 817,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "potentialOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1045,
                            "src": "14466:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14449:50:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 819,
                        "nodeType": "ExpressionStatement",
                        "src": "14449:50:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 801,
                    "nodeType": "StructuredDocumentation",
                    "src": "13647:469:1",
                    "text": " @notice Retrieve the potential owner, if any, for a given conduit. The\n         current owner may set a new potential owner via\n         `transferOwnership` and that owner may then accept ownership of\n         the conduit in question via `acceptOwnership`.\n @param conduit The conduit for which to retrieve the potential owner.\n @return potentialOwner The potential owner, if any, for the conduit."
                  },
                  "functionSelector": "906c87cc",
                  "id": 821,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPotentialOwner",
                  "nameLocation": "14131:17:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 805,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "14207:8:1"
                  },
                  "parameters": {
                    "id": 804,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 803,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "14157:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 821,
                        "src": "14149:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 802,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14149:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14148:17:1"
                  },
                  "returnParameters": {
                    "id": 808,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "potentialOwner",
                        "nameLocation": "14242:14:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 821,
                        "src": "14234:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14234:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14233:24:1"
                  },
                  "scope": 998,
                  "src": "14122:385:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1191
                  ],
                  "body": {
                    "id": 847,
                    "nodeType": "Block",
                    "src": "15021:257:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 833,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 824,
                              "src": "15109:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 832,
                            "name": "_assertConduitExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "15088:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15088:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 835,
                        "nodeType": "ExpressionStatement",
                        "src": "15088:29:1"
                      },
                      {
                        "expression": {
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 836,
                            "name": "isOpen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "15207:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 837,
                                    "name": "_conduits",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 309,
                                    "src": "15216:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                      "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                    }
                                  },
                                  "id": 839,
                                  "indexExpression": {
                                    "id": 838,
                                    "name": "conduit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 824,
                                    "src": "15226:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15216:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                    "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                                  }
                                },
                                "id": 840,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "channelIndexesPlusOne",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1052,
                                "src": "15216:40:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 842,
                              "indexExpression": {
                                "id": 841,
                                "name": "channel",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 826,
                                "src": "15257:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15216:49:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15269:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "15216:54:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15207:63:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 846,
                        "nodeType": "ExpressionStatement",
                        "src": "15207:63:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 822,
                    "nodeType": "StructuredDocumentation",
                    "src": "14515:354:1",
                    "text": " @notice Retrieve the status (either open or closed) of a given channel on\n         a conduit.\n @param conduit The conduit for which to retrieve the channel status.\n @param channel The channel for which to retrieve the status.\n @return isOpen The status of the channel on the given conduit."
                  },
                  "functionSelector": "33bc8572",
                  "id": 848,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getChannelStatus",
                  "nameLocation": "14884:16:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 828,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "14976:8:1"
                  },
                  "parameters": {
                    "id": 827,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "14909:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "14901:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14901:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 826,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "14926:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "14918:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 825,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14918:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14900:34:1"
                  },
                  "returnParameters": {
                    "id": 831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 830,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "15008:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "15003:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 829,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "15003:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15002:13:1"
                  },
                  "scope": 998,
                  "src": "14875:403:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1199
                  ],
                  "body": {
                    "id": 869,
                    "nodeType": "Block",
                    "src": "15702:246:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 858,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "15790:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 857,
                            "name": "_assertConduitExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "15769:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15769:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 860,
                        "nodeType": "ExpressionStatement",
                        "src": "15769:29:1"
                      },
                      {
                        "expression": {
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 861,
                            "name": "totalChannels",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 855,
                            "src": "15890:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 862,
                                  "name": "_conduits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "15906:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                    "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                  }
                                },
                                "id": 864,
                                "indexExpression": {
                                  "id": 863,
                                  "name": "conduit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 851,
                                  "src": "15916:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15906:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                  "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                                }
                              },
                              "id": 865,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "channels",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1048,
                              "src": "15906:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "15906:34:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15890:50:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "15890:50:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 849,
                    "nodeType": "StructuredDocumentation",
                    "src": "15286:271:1",
                    "text": " @notice Retrieve the total number of open channels for a given conduit.\n @param conduit The conduit for which to retrieve the total channel count.\n @return totalChannels The total number of open channels for the conduit."
                  },
                  "functionSelector": "4e3f9580",
                  "id": 870,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalChannels",
                  "nameLocation": "15572:16:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 853,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "15647:8:1"
                  },
                  "parameters": {
                    "id": 852,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 851,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "15597:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "15589:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 850,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15589:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15588:17:1"
                  },
                  "returnParameters": {
                    "id": 856,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 855,
                        "mutability": "mutable",
                        "name": "totalChannels",
                        "nameLocation": "15682:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "15674:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 854,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15674:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15673:23:1"
                  },
                  "scope": 998,
                  "src": "15563:385:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1209
                  ],
                  "body": {
                    "id": 911,
                    "nodeType": "Block",
                    "src": "16584:538:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 882,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "16672:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 881,
                            "name": "_assertConduitExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "16651:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16651:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 884,
                        "nodeType": "ExpressionStatement",
                        "src": "16651:29:1"
                      },
                      {
                        "assignments": [
                          886
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 886,
                            "mutability": "mutable",
                            "name": "totalChannels",
                            "nameLocation": "16780:13:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 911,
                            "src": "16772:21:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 885,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16772:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 892,
                        "initialValue": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 887,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "16796:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 889,
                              "indexExpression": {
                                "id": 888,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 873,
                                "src": "16806:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16796:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "channels",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1048,
                            "src": "16796:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "16796:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16772:58:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 893,
                            "name": "channelIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 875,
                            "src": "16907:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 894,
                            "name": "totalChannels",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 886,
                            "src": "16923:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16907:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 901,
                        "nodeType": "IfStatement",
                        "src": "16903:95:1",
                        "trueBody": {
                          "id": 900,
                          "nodeType": "Block",
                          "src": "16938:60:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 897,
                                    "name": "conduit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 873,
                                    "src": "16978:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 896,
                                  "name": "ChannelOutOfRange",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1107,
                                  "src": "16960:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16960:26:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 899,
                              "nodeType": "RevertStatement",
                              "src": "16953:33:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 902,
                            "name": "channel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 879,
                            "src": "17063:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 903,
                                  "name": "_conduits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "17073:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                    "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                  }
                                },
                                "id": 905,
                                "indexExpression": {
                                  "id": 904,
                                  "name": "conduit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 873,
                                  "src": "17083:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17073:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                  "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                                }
                              },
                              "id": 906,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "channels",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1048,
                              "src": "17073:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 908,
                            "indexExpression": {
                              "id": 907,
                              "name": "channelIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "17101:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17073:41:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17063:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 910,
                        "nodeType": "ExpressionStatement",
                        "src": "17063:51:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 871,
                    "nodeType": "StructuredDocumentation",
                    "src": "15956:473:1",
                    "text": " @notice Retrieve an open channel at a specific index for a given conduit.\n         Note that the index of a channel can change as a result of other\n         channels being closed on the conduit.\n @param conduit      The conduit for which to retrieve the open channel.\n @param channelIndex The index of the channel in question.\n @return channel The open channel, if any, at the specified channel index."
                  },
                  "functionSelector": "027cc764",
                  "id": 912,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getChannel",
                  "nameLocation": "16444:10:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 877,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "16535:8:1"
                  },
                  "parameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 873,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "16463:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "16455:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16455:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "channelIndex",
                        "nameLocation": "16480:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "16472:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16472:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16454:39:1"
                  },
                  "returnParameters": {
                    "id": 880,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 879,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "16570:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "16562:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 878,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16562:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16561:17:1"
                  },
                  "scope": 998,
                  "src": "16435:687:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1218
                  ],
                  "body": {
                    "id": 933,
                    "nodeType": "Block",
                    "src": "17646:229:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 923,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "17734:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 922,
                            "name": "_assertConduitExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "17713:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17713:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 925,
                        "nodeType": "ExpressionStatement",
                        "src": "17713:29:1"
                      },
                      {
                        "expression": {
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 926,
                            "name": "channels",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 920,
                            "src": "17829:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 927,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "17840:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 929,
                              "indexExpression": {
                                "id": 928,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 915,
                                "src": "17850:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17840:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 930,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "channels",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1048,
                            "src": "17840:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "src": "17829:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 932,
                        "nodeType": "ExpressionStatement",
                        "src": "17829:38:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 913,
                    "nodeType": "StructuredDocumentation",
                    "src": "17130:372:1",
                    "text": " @notice Retrieve all open channels for a given conduit. Note that calling\n         this function for a conduit with many channels will revert with\n         an out-of-gas error.\n @param conduit The conduit for which to retrieve open channels.\n @return channels An array of open channels on the given conduit."
                  },
                  "functionSelector": "8b9e028b",
                  "id": 934,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getChannels",
                  "nameLocation": "17517:11:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 917,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "17587:8:1"
                  },
                  "parameters": {
                    "id": 916,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 915,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "17537:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "17529:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 914,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17529:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17528:17:1"
                  },
                  "returnParameters": {
                    "id": 921,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 920,
                        "mutability": "mutable",
                        "name": "channels",
                        "nameLocation": "17631:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "17614:25:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 918,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17614:7:1",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 919,
                          "nodeType": "ArrayTypeName",
                          "src": "17614:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17613:27:1"
                  },
                  "scope": 998,
                  "src": "17508:367:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1226
                  ],
                  "body": {
                    "id": 951,
                    "nodeType": "Block",
                    "src": "18130:253:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 943,
                            "name": "creationCodeHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "18207:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 944,
                            "name": "_CONDUIT_CREATION_CODE_HASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "18226:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "18207:46:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 946,
                        "nodeType": "ExpressionStatement",
                        "src": "18207:46:1"
                      },
                      {
                        "expression": {
                          "id": 949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 947,
                            "name": "runtimeCodeHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 941,
                            "src": "18331:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 948,
                            "name": "_CONDUIT_RUNTIME_CODE_HASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "18349:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "18331:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 950,
                        "nodeType": "ExpressionStatement",
                        "src": "18331:44:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 935,
                    "nodeType": "StructuredDocumentation",
                    "src": "17883:85:1",
                    "text": " @dev Retrieve the conduit creation code and runtime code hashes."
                  },
                  "functionSelector": "0a96ad39",
                  "id": 952,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getConduitCodeHashes",
                  "nameLocation": "17983:20:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 937,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "18047:8:1"
                  },
                  "parameters": {
                    "id": 936,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18003:2:1"
                  },
                  "returnParameters": {
                    "id": 942,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 939,
                        "mutability": "mutable",
                        "name": "creationCodeHash",
                        "nameLocation": "18082:16:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 952,
                        "src": "18074:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 938,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "18074:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 941,
                        "mutability": "mutable",
                        "name": "runtimeCodeHash",
                        "nameLocation": "18108:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 952,
                        "src": "18100:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 940,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "18100:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18073:51:1"
                  },
                  "scope": 998,
                  "src": "17974:409:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 975,
                    "nodeType": "Block",
                    "src": "18661:365:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 959,
                              "name": "conduit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "18749:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 958,
                            "name": "_assertConduitExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 997,
                            "src": "18728:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                              "typeString": "function (address) view"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18728:29:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 961,
                        "nodeType": "ExpressionStatement",
                        "src": "18728:29:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 962,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "18851:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "18851:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 964,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "18865:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 966,
                              "indexExpression": {
                                "id": 965,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 955,
                                "src": "18875:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18865:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 967,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1043,
                            "src": "18865:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18851:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 974,
                        "nodeType": "IfStatement",
                        "src": "18847:172:1",
                        "trueBody": {
                          "id": 973,
                          "nodeType": "Block",
                          "src": "18891:128:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 970,
                                    "name": "conduit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 955,
                                    "src": "18999:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 969,
                                  "name": "CallerIsNotOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1092,
                                  "src": "18982:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18982:25:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 972,
                              "nodeType": "RevertStatement",
                              "src": "18975:32:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 953,
                    "nodeType": "StructuredDocumentation",
                    "src": "18391:196:1",
                    "text": " @dev Internal view function to revert if the caller is not the owner of a\n      given conduit.\n @param conduit The conduit for which to assert ownership."
                  },
                  "id": 976,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_assertCallerIsConduitOwner",
                  "nameLocation": "18602:27:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 955,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "18638:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 976,
                        "src": "18630:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 954,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18630:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18629:17:1"
                  },
                  "returnParameters": {
                    "id": 957,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18661:0:1"
                  },
                  "scope": 998,
                  "src": "18593:433:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 996,
                    "nodeType": "Block",
                    "src": "19268:234:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 982,
                                "name": "_conduits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "19358:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ConduitProperties_$1053_storage_$",
                                  "typeString": "mapping(address => struct ConduitControllerInterface.ConduitProperties storage ref)"
                                }
                              },
                              "id": 984,
                              "indexExpression": {
                                "id": 983,
                                "name": "conduit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 979,
                                "src": "19368:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19358:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConduitProperties_$1053_storage",
                                "typeString": "struct ConduitControllerInterface.ConduitProperties storage ref"
                              }
                            },
                            "id": 985,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1041,
                            "src": "19358:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19392:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19384:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 986,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "19384:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19384:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "19358:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 995,
                        "nodeType": "IfStatement",
                        "src": "19354:141:1",
                        "trueBody": {
                          "id": 994,
                          "nodeType": "Block",
                          "src": "19396:99:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 991,
                                  "name": "NoConduit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1082,
                                  "src": "19472:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19472:11:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 993,
                              "nodeType": "RevertStatement",
                              "src": "19465:18:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 977,
                    "nodeType": "StructuredDocumentation",
                    "src": "19034:167:1",
                    "text": " @dev Internal view function to revert if a given conduit does not exist.\n @param conduit The conduit for which to assert existence."
                  },
                  "id": 997,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_assertConduitExists",
                  "nameLocation": "19216:20:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 980,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 979,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "19245:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 997,
                        "src": "19237:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 978,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19237:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19236:17:1"
                  },
                  "returnParameters": {
                    "id": 981,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19268:0:1"
                  },
                  "scope": 998,
                  "src": "19207:295:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 999,
              "src": "575:18930:1",
              "usedErrors": [
                1079,
                1082,
                1087,
                1092,
                1097,
                1102,
                1107
              ]
            }
          ],
          "src": "33:19474:1"
        },
        "id": 1
      },
      "contracts/conduit/lib/ConduitEnums.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/lib/ConduitEnums.sol",
          "exportedSymbols": {
            "ConduitItemType": [
              1005
            ]
          },
          "id": 1006,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1000,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:2"
            },
            {
              "canonicalName": "ConduitItemType",
              "id": 1005,
              "members": [
                {
                  "id": 1001,
                  "name": "NATIVE",
                  "nameLocation": "89:6:2",
                  "nodeType": "EnumValue",
                  "src": "89:6:2"
                },
                {
                  "id": 1002,
                  "name": "ERC20",
                  "nameLocation": "112:5:2",
                  "nodeType": "EnumValue",
                  "src": "112:5:2"
                },
                {
                  "id": 1003,
                  "name": "ERC721",
                  "nameLocation": "124:6:2",
                  "nodeType": "EnumValue",
                  "src": "124:6:2"
                },
                {
                  "id": 1004,
                  "name": "ERC1155",
                  "nameLocation": "137:7:2",
                  "nodeType": "EnumValue",
                  "src": "137:7:2"
                }
              ],
              "name": "ConduitItemType",
              "nameLocation": "66:15:2",
              "nodeType": "EnumDefinition",
              "src": "61:86:2"
            }
          ],
          "src": "33:116:2"
        },
        "id": 2
      },
      "contracts/conduit/lib/ConduitStructs.sol": {
        "ast": {
          "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
          "exportedSymbols": {
            "ConduitBatch1155Transfer": [
              1036
            ],
            "ConduitItemType": [
              1005
            ],
            "ConduitTransfer": [
              1023
            ]
          },
          "id": 1037,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1007,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:3"
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitEnums.sol",
              "file": "./ConduitEnums.sol",
              "id": 1009,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1037,
              "sourceUnit": 1006,
              "src": "61:53:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1008,
                    "name": "ConduitItemType",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1005,
                    "src": "70:15:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "canonicalName": "ConduitTransfer",
              "id": 1023,
              "members": [
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "itemType",
                  "nameLocation": "164:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "148:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ConduitItemType_$1005",
                    "typeString": "enum ConduitItemType"
                  },
                  "typeName": {
                    "id": 1011,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1010,
                      "name": "ConduitItemType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1005,
                      "src": "148:15:3"
                    },
                    "referencedDeclaration": 1005,
                    "src": "148:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ConduitItemType_$1005",
                      "typeString": "enum ConduitItemType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "187:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "179:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "179:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "207:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "199:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1018,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "226:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "218:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "218:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1020,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "243:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "235:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1022,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "268:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "260:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "ConduitTransfer",
              "nameLocation": "125:15:3",
              "nodeType": "StructDefinition",
              "scope": 1037,
              "src": "118:160:3",
              "visibility": "public"
            },
            {
              "canonicalName": "ConduitBatch1155Transfer",
              "id": 1036,
              "members": [
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "329:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "321:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "349:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "341:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "341:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "368:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "360:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1032,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "387:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "377:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1030,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "377:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1031,
                    "nodeType": "ArrayTypeName",
                    "src": "377:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "407:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1036,
                  "src": "397:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1033,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "397:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1034,
                    "nodeType": "ArrayTypeName",
                    "src": "397:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "ConduitBatch1155Transfer",
              "nameLocation": "289:24:3",
              "nodeType": "StructDefinition",
              "scope": 1037,
              "src": "282:136:3",
              "visibility": "public"
            }
          ],
          "src": "33:387:3"
        },
        "id": 3
      },
      "contracts/interfaces/ConduitControllerInterface.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ConduitControllerInterface.sol",
          "exportedSymbols": {
            "ConduitControllerInterface": [
              1227
            ]
          },
          "id": 1228,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1038,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ConduitControllerInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1039,
                "nodeType": "StructuredDocumentation",
                "src": "61:213:4",
                "text": " @title ConduitControllerInterface\n @author 0age\n @notice ConduitControllerInterface contains all external function interfaces,\n         structs, events, and errors for the conduit controller."
              },
              "fullyImplemented": false,
              "id": 1227,
              "linearizedBaseContracts": [
                1227
              ],
              "name": "ConduitControllerInterface",
              "nameLocation": "286:26:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ConduitControllerInterface.ConduitProperties",
                  "id": 1053,
                  "members": [
                    {
                      "constant": false,
                      "id": 1041,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "512:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1053,
                      "src": "504:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1040,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "504:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1043,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "534:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1053,
                      "src": "526:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1042,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "526:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1045,
                      "mutability": "mutable",
                      "name": "potentialOwner",
                      "nameLocation": "558:14:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1053,
                      "src": "550:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1044,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "550:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1048,
                      "mutability": "mutable",
                      "name": "channels",
                      "nameLocation": "593:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1053,
                      "src": "583:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "583:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1047,
                        "nodeType": "ArrayTypeName",
                        "src": "583:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1052,
                      "mutability": "mutable",
                      "name": "channelIndexesPlusOne",
                      "nameLocation": "640:21:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1053,
                      "src": "612:49:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "typeName": {
                        "id": 1051,
                        "keyType": {
                          "id": 1049,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "620:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "612:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        },
                        "valueType": {
                          "id": 1050,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "631:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ConduitProperties",
                  "nameLocation": "475:17:4",
                  "nodeType": "StructDefinition",
                  "scope": 1227,
                  "src": "468:201:4",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1054,
                    "nodeType": "StructuredDocumentation",
                    "src": "677:209:4",
                    "text": " @dev Emit an event whenever a new conduit is created.\n @param conduit    The newly created conduit.\n @param conduitKey The conduit key used to create the new conduit."
                  },
                  "eventSelector": "4397af6128d529b8ae0442f99db1296d5136062597a15bbc61c1b2a6431a7d15",
                  "id": 1060,
                  "name": "NewConduit",
                  "nameLocation": "898:10:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1056,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "917:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "909:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1055,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "909:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1058,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "conduitKey",
                        "nameLocation": "934:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "926:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "908:37:4"
                  },
                  "src": "892:54:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1061,
                    "nodeType": "StructuredDocumentation",
                    "src": "954:325:4",
                    "text": " @dev Emit an event whenever conduit ownership is transferred.\n @param conduit       The conduit for which ownership has been\n                      transferred.\n @param previousOwner The previous owner of the conduit.\n @param newOwner      The new owner of the conduit."
                  },
                  "eventSelector": "c8894f26f396ce8c004245c8b7cd1b92103a6e4302fcbab883987149ac01b7ec",
                  "id": 1069,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1291:20:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1068,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1063,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "1338:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1069,
                        "src": "1322:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1322:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1065,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1372:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1069,
                        "src": "1356:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1064,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1356:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1067,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1412:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1069,
                        "src": "1396:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1066,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1396:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1311:116:4"
                  },
                  "src": "1285:143:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1070,
                    "nodeType": "StructuredDocumentation",
                    "src": "1436:330:4",
                    "text": " @dev Emit an event whenever a conduit owner registers a new potential\n      owner for that conduit.\n @param conduit           The conduit for which ownership may now be\n                          transferred.\n @param newPotentialOwner The new potential owner of the conduit."
                  },
                  "eventSelector": "d4116aaf34f80123d0229f02f46f776b386a377dbb3404be10fdf4e81ba9cdb6",
                  "id": 1076,
                  "name": "PotentialOwnerUpdated",
                  "nameLocation": "1778:21:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1075,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1072,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "1826:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1076,
                        "src": "1810:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1071,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1810:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1074,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newPotentialOwner",
                        "nameLocation": "1860:17:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1076,
                        "src": "1844:33:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1844:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1799:85:4"
                  },
                  "src": "1772:113:4"
                },
                {
                  "documentation": {
                    "id": 1077,
                    "nodeType": "StructuredDocumentation",
                    "src": "1893:211:4",
                    "text": " @dev Revert with an error when attempting to create a new conduit using a\n      conduit key where the last twenty bytes of the key do not match the\n      address of the caller."
                  },
                  "errorSelector": "cb6e5344",
                  "id": 1079,
                  "name": "InvalidCreator",
                  "nameLocation": "2116:14:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1078,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2130:2:4"
                  },
                  "src": "2110:23:4"
                },
                {
                  "documentation": {
                    "id": 1080,
                    "nodeType": "StructuredDocumentation",
                    "src": "2141:127:4",
                    "text": " @dev Revert with an error when attempting to interact with a conduit that\n      does not yet exist."
                  },
                  "errorSelector": "4ca82090",
                  "id": 1082,
                  "name": "NoConduit",
                  "nameLocation": "2280:9:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1081,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2289:2:4"
                  },
                  "src": "2274:18:4"
                },
                {
                  "documentation": {
                    "id": 1083,
                    "nodeType": "StructuredDocumentation",
                    "src": "2300:116:4",
                    "text": " @dev Revert with an error when attempting to create a conduit that\n      already exists."
                  },
                  "errorSelector": "6328ccb2",
                  "id": 1087,
                  "name": "ConduitAlreadyExists",
                  "nameLocation": "2428:20:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "2457:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1087,
                        "src": "2449:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1084,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2449:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2448:17:4"
                  },
                  "src": "2422:44:4"
                },
                {
                  "documentation": {
                    "id": 1088,
                    "nodeType": "StructuredDocumentation",
                    "src": "2474:203:4",
                    "text": " @dev Revert with an error when attempting to update channels or transfer\n      ownership of a conduit when the caller is not the owner of the\n      conduit in question."
                  },
                  "errorSelector": "d4ed9a17",
                  "id": 1092,
                  "name": "CallerIsNotOwner",
                  "nameLocation": "2689:16:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "2714:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1092,
                        "src": "2706:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2706:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2705:17:4"
                  },
                  "src": "2683:40:4"
                },
                {
                  "documentation": {
                    "id": 1093,
                    "nodeType": "StructuredDocumentation",
                    "src": "2731:141:4",
                    "text": " @dev Revert with an error when attempting to register a new potential\n      owner and supplying the null address."
                  },
                  "errorSelector": "a388d263",
                  "id": 1097,
                  "name": "NewPotentialOwnerIsZeroAddress",
                  "nameLocation": "2884:30:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1095,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "2923:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1097,
                        "src": "2915:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1094,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2915:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2914:17:4"
                  },
                  "src": "2878:54:4"
                },
                {
                  "documentation": {
                    "id": 1098,
                    "nodeType": "StructuredDocumentation",
                    "src": "2940:203:4",
                    "text": " @dev Revert with an error when attempting to claim ownership of a conduit\n      with a caller that is not the current potential owner for the\n      conduit in question."
                  },
                  "errorSelector": "88c3a115",
                  "id": 1102,
                  "name": "CallerIsNotNewPotentialOwner",
                  "nameLocation": "3155:28:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1101,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1100,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "3192:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1102,
                        "src": "3184:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1099,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3184:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3183:17:4"
                  },
                  "src": "3149:52:4"
                },
                {
                  "documentation": {
                    "id": 1103,
                    "nodeType": "StructuredDocumentation",
                    "src": "3209:134:4",
                    "text": " @dev Revert with an error when attempting to retrieve a channel using an\n      index that is out of range."
                  },
                  "errorSelector": "6ceb340b",
                  "id": 1107,
                  "name": "ChannelOutOfRange",
                  "nameLocation": "3355:17:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "3381:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "3373:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3373:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3372:17:4"
                  },
                  "src": "3349:41:4"
                },
                {
                  "documentation": {
                    "id": 1108,
                    "nodeType": "StructuredDocumentation",
                    "src": "3398:759:4",
                    "text": " @notice Deploy a new conduit using a supplied conduit key and assigning\n         an initial owner for the deployed conduit. Note that the last\n         twenty bytes of the supplied conduit key must match the caller\n         and that a new conduit cannot be created if one has already been\n         deployed using the same conduit key.\n @param conduitKey   The conduit key used to deploy the conduit. Note that\n                     the last twenty bytes of the conduit key must match\n                     the caller of this contract.\n @param initialOwner The initial owner to set for the new conduit.\n @return conduit The address of the newly deployed conduit."
                  },
                  "functionSelector": "794593bc",
                  "id": 1117,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createConduit",
                  "nameLocation": "4172:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1110,
                        "mutability": "mutable",
                        "name": "conduitKey",
                        "nameLocation": "4194:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1117,
                        "src": "4186:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1109,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4186:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1112,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "4214:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1117,
                        "src": "4206:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4206:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4185:42:4"
                  },
                  "returnParameters": {
                    "id": 1116,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1115,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "4272:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1117,
                        "src": "4264:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1114,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4264:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4263:17:4"
                  },
                  "scope": 1227,
                  "src": "4163:118:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1118,
                    "nodeType": "StructuredDocumentation",
                    "src": "4289:727:4",
                    "text": " @notice Open or close a channel on a given conduit, thereby allowing the\n         specified account to execute transfers against that conduit.\n         Extreme care must be taken when updating channels, as malicious\n         or vulnerable channels can transfer any ERC20, ERC721 and ERC1155\n         tokens where the token holder has granted the conduit approval.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to open or close the channel.\n @param channel The channel to open or close on the conduit.\n @param isOpen  A boolean indicating whether to open or close the channel."
                  },
                  "functionSelector": "13ad9cab",
                  "id": 1127,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateChannel",
                  "nameLocation": "5031:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1120,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "5063:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1127,
                        "src": "5055:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1119,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5055:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "5089:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1127,
                        "src": "5081:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5081:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1124,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "5112:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1127,
                        "src": "5107:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1123,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5107:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5044:81:4"
                  },
                  "returnParameters": {
                    "id": 1126,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5134:0:4"
                  },
                  "scope": 1227,
                  "src": "5022:113:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1128,
                    "nodeType": "StructuredDocumentation",
                    "src": "5143:417:4",
                    "text": " @notice Initiate conduit ownership transfer by assigning a new potential\n         owner for the given conduit. Once set, the new potential owner\n         may call `acceptOwnership` to claim ownership of the conduit.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to initiate ownership transfer."
                  },
                  "functionSelector": "6d435421",
                  "id": 1135,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nameLocation": "5575:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1130,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "5601:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1135,
                        "src": "5593:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5593:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1132,
                        "mutability": "mutable",
                        "name": "newPotentialOwner",
                        "nameLocation": "5618:17:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1135,
                        "src": "5610:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5610:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5592:44:4"
                  },
                  "returnParameters": {
                    "id": 1134,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5654:0:4"
                  },
                  "scope": 1227,
                  "src": "5566:89:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1136,
                    "nodeType": "StructuredDocumentation",
                    "src": "5663:258:4",
                    "text": " @notice Clear the currently set potential owner, if any, from a conduit.\n         Only the owner of the conduit in question may call this function.\n @param conduit The conduit for which to cancel ownership transfer."
                  },
                  "functionSelector": "7b37e561",
                  "id": 1141,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancelOwnershipTransfer",
                  "nameLocation": "5936:23:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1138,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "5968:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "5960:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1137,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5960:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5959:17:4"
                  },
                  "returnParameters": {
                    "id": 1140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5985:0:4"
                  },
                  "scope": 1227,
                  "src": "5927:59:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1142,
                    "nodeType": "StructuredDocumentation",
                    "src": "5994:270:4",
                    "text": " @notice Accept ownership of a supplied conduit. Only accounts that the\n         current owner has set as the new potential owner may call this\n         function.\n @param conduit The conduit for which to accept ownership."
                  },
                  "functionSelector": "51710e45",
                  "id": 1147,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptOwnership",
                  "nameLocation": "6279:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1144,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "6303:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1147,
                        "src": "6295:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6295:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6294:17:4"
                  },
                  "returnParameters": {
                    "id": 1146,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6320:0:4"
                  },
                  "scope": 1227,
                  "src": "6270:51:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1148,
                    "nodeType": "StructuredDocumentation",
                    "src": "6329:230:4",
                    "text": " @notice Retrieve the current owner of a deployed conduit.\n @param conduit The conduit for which to retrieve the associated owner.\n @return owner The owner of the supplied conduit."
                  },
                  "functionSelector": "14afd79e",
                  "id": 1155,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ownerOf",
                  "nameLocation": "6574:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1150,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "6590:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1155,
                        "src": "6582:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1149,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6582:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6581:17:4"
                  },
                  "returnParameters": {
                    "id": 1154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1153,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "6630:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1155,
                        "src": "6622:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6622:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6621:15:4"
                  },
                  "scope": 1227,
                  "src": "6565:72:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1156,
                    "nodeType": "StructuredDocumentation",
                    "src": "6645:316:4",
                    "text": " @notice Retrieve the conduit key for a deployed conduit via reverse\n         lookup.\n @param conduit The conduit for which to retrieve the associated conduit\n                key.\n @return conduitKey The conduit key used to deploy the supplied conduit."
                  },
                  "functionSelector": "93790f44",
                  "id": 1163,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getKey",
                  "nameLocation": "6976:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1158,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "6991:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1163,
                        "src": "6983:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1157,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6983:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6982:17:4"
                  },
                  "returnParameters": {
                    "id": 1162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1161,
                        "mutability": "mutable",
                        "name": "conduitKey",
                        "nameLocation": "7031:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1163,
                        "src": "7023:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1160,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7023:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7022:20:4"
                  },
                  "scope": 1227,
                  "src": "6967:76:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1164,
                    "nodeType": "StructuredDocumentation",
                    "src": "7051:463:4",
                    "text": " @notice Derive the conduit associated with a given conduit key and\n         determine whether that conduit exists (i.e. whether it has been\n         deployed).\n @param conduitKey The conduit key used to derive the conduit.\n @return conduit The derived address of the conduit.\n @return exists  A boolean indicating whether the derived conduit has been\n                 deployed or not."
                  },
                  "functionSelector": "6e9bfd9f",
                  "id": 1173,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getConduit",
                  "nameLocation": "7529:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1166,
                        "mutability": "mutable",
                        "name": "conduitKey",
                        "nameLocation": "7548:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1173,
                        "src": "7540:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1165,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7540:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7539:20:4"
                  },
                  "returnParameters": {
                    "id": 1172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1169,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "7618:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1173,
                        "src": "7610:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7610:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1171,
                        "mutability": "mutable",
                        "name": "exists",
                        "nameLocation": "7632:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1173,
                        "src": "7627:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1170,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7627:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7609:30:4"
                  },
                  "scope": 1227,
                  "src": "7520:120:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1174,
                    "nodeType": "StructuredDocumentation",
                    "src": "7648:469:4",
                    "text": " @notice Retrieve the potential owner, if any, for a given conduit. The\n         current owner may set a new potential owner via\n         `transferOwnership` and that owner may then accept ownership of\n         the conduit in question via `acceptOwnership`.\n @param conduit The conduit for which to retrieve the potential owner.\n @return potentialOwner The potential owner, if any, for the conduit."
                  },
                  "functionSelector": "906c87cc",
                  "id": 1181,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPotentialOwner",
                  "nameLocation": "8132:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1176,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "8158:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1181,
                        "src": "8150:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8150:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8149:17:4"
                  },
                  "returnParameters": {
                    "id": 1180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1179,
                        "mutability": "mutable",
                        "name": "potentialOwner",
                        "nameLocation": "8225:14:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1181,
                        "src": "8217:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1178,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8217:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8216:24:4"
                  },
                  "scope": 1227,
                  "src": "8123:118:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1182,
                    "nodeType": "StructuredDocumentation",
                    "src": "8249:354:4",
                    "text": " @notice Retrieve the status (either open or closed) of a given channel on\n         a conduit.\n @param conduit The conduit for which to retrieve the channel status.\n @param channel The channel for which to retrieve the status.\n @return isOpen The status of the channel on the given conduit."
                  },
                  "functionSelector": "33bc8572",
                  "id": 1191,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getChannelStatus",
                  "nameLocation": "8618:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1184,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "8643:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1191,
                        "src": "8635:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8635:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1186,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "8660:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1191,
                        "src": "8652:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8652:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8634:34:4"
                  },
                  "returnParameters": {
                    "id": 1190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1189,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "8724:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1191,
                        "src": "8719:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1188,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8719:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8718:13:4"
                  },
                  "scope": 1227,
                  "src": "8609:123:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1192,
                    "nodeType": "StructuredDocumentation",
                    "src": "8740:271:4",
                    "text": " @notice Retrieve the total number of open channels for a given conduit.\n @param conduit The conduit for which to retrieve the total channel count.\n @return totalChannels The total number of open channels for the conduit."
                  },
                  "functionSelector": "4e3f9580",
                  "id": 1199,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalChannels",
                  "nameLocation": "9026:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1194,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "9051:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "9043:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1193,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9043:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9042:17:4"
                  },
                  "returnParameters": {
                    "id": 1198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1197,
                        "mutability": "mutable",
                        "name": "totalChannels",
                        "nameLocation": "9118:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "9110:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1196,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9110:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9109:23:4"
                  },
                  "scope": 1227,
                  "src": "9017:116:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1200,
                    "nodeType": "StructuredDocumentation",
                    "src": "9141:473:4",
                    "text": " @notice Retrieve an open channel at a specific index for a given conduit.\n         Note that the index of a channel can change as a result of other\n         channels being closed on the conduit.\n @param conduit      The conduit for which to retrieve the open channel.\n @param channelIndex The index of the channel in question.\n @return channel The open channel, if any, at the specified channel index."
                  },
                  "functionSelector": "027cc764",
                  "id": 1209,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getChannel",
                  "nameLocation": "9629:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1202,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "9648:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "9640:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1201,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9640:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1204,
                        "mutability": "mutable",
                        "name": "channelIndex",
                        "nameLocation": "9665:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "9657:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9657:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9639:39:4"
                  },
                  "returnParameters": {
                    "id": 1208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1207,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "9737:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "9729:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9729:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9728:17:4"
                  },
                  "scope": 1227,
                  "src": "9620:126:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1210,
                    "nodeType": "StructuredDocumentation",
                    "src": "9754:372:4",
                    "text": " @notice Retrieve all open channels for a given conduit. Note that calling\n         this function for a conduit with many channels will revert with\n         an out-of-gas error.\n @param conduit The conduit for which to retrieve open channels.\n @return channels An array of open channels on the given conduit."
                  },
                  "functionSelector": "8b9e028b",
                  "id": 1218,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getChannels",
                  "nameLocation": "10141:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1212,
                        "mutability": "mutable",
                        "name": "conduit",
                        "nameLocation": "10161:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "10153:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10153:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10152:17:4"
                  },
                  "returnParameters": {
                    "id": 1217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "channels",
                        "nameLocation": "10237:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1218,
                        "src": "10220:25:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1214,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10220:7:4",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1215,
                          "nodeType": "ArrayTypeName",
                          "src": "10220:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10219:27:4"
                  },
                  "scope": 1227,
                  "src": "10132:115:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1219,
                    "nodeType": "StructuredDocumentation",
                    "src": "10255:85:4",
                    "text": " @dev Retrieve the conduit creation code and runtime code hashes."
                  },
                  "functionSelector": "0a96ad39",
                  "id": 1226,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getConduitCodeHashes",
                  "nameLocation": "10355:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10375:2:4"
                  },
                  "returnParameters": {
                    "id": 1225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1222,
                        "mutability": "mutable",
                        "name": "creationCodeHash",
                        "nameLocation": "10436:16:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "10428:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1221,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10428:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1224,
                        "mutability": "mutable",
                        "name": "runtimeCodeHash",
                        "nameLocation": "10462:15:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "10454:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1223,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "10454:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10427:51:4"
                  },
                  "scope": 1227,
                  "src": "10346:133:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1228,
              "src": "276:10206:4",
              "usedErrors": [
                1079,
                1082,
                1087,
                1092,
                1097,
                1102,
                1107
              ]
            }
          ],
          "src": "33:10451:4"
        },
        "id": 4
      },
      "contracts/interfaces/ConduitInterface.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/ConduitInterface.sol",
          "exportedSymbols": {
            "ConduitBatch1155Transfer": [
              1036
            ],
            "ConduitInterface": [
              1295
            ],
            "ConduitTransfer": [
              1023
            ]
          },
          "id": 1296,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1229,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:5"
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
              "file": "../conduit/lib/ConduitStructs.sol",
              "id": 1232,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1296,
              "sourceUnit": 1037,
              "src": "81:105:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1230,
                    "name": "ConduitTransfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1023,
                    "src": "95:15:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 1231,
                    "name": "ConduitBatch1155Transfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1036,
                    "src": "117:24:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ConduitInterface",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1233,
                "nodeType": "StructuredDocumentation",
                "src": "190:179:5",
                "text": " @title ConduitInterface\n @author 0age\n @notice ConduitInterface contains all external function interfaces, events,\n         and errors for conduit contracts."
              },
              "fullyImplemented": false,
              "id": 1295,
              "linearizedBaseContracts": [
                1295
              ],
              "name": "ConduitInterface",
              "nameLocation": "381:16:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1234,
                    "nodeType": "StructuredDocumentation",
                    "src": "405:147:5",
                    "text": " @dev Revert with an error when attempting to execute transfers using a\n      caller that does not have an open channel."
                  },
                  "errorSelector": "6821b7df",
                  "id": 1236,
                  "name": "ChannelClosed",
                  "nameLocation": "564:13:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1235,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "577:2:5"
                  },
                  "src": "558:22:5"
                },
                {
                  "documentation": {
                    "id": 1237,
                    "nodeType": "StructuredDocumentation",
                    "src": "588:157:5",
                    "text": " @dev Revert with an error when attempting to execute a transfer for an\n      item that does not have an ERC20/721/1155 item type."
                  },
                  "errorSelector": "7932f1fc",
                  "id": 1239,
                  "name": "InvalidItemType",
                  "nameLocation": "757:15:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "772:2:5"
                  },
                  "src": "751:24:5"
                },
                {
                  "documentation": {
                    "id": 1240,
                    "nodeType": "StructuredDocumentation",
                    "src": "783:159:5",
                    "text": " @dev Revert with an error when attempting to update the status of a\n      channel from a caller that is not the conduit controller."
                  },
                  "errorSelector": "6d5769be",
                  "id": 1242,
                  "name": "InvalidController",
                  "nameLocation": "954:17:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "971:2:5"
                  },
                  "src": "948:26:5"
                },
                {
                  "documentation": {
                    "id": 1243,
                    "nodeType": "StructuredDocumentation",
                    "src": "982:228:5",
                    "text": " @dev Revert with an error when attempting to execute an 1155 batch\n      transfer using calldata not produced by default ABI encoding or with\n      different lengths for ids and amounts arrays."
                  },
                  "errorSelector": "eba2084c",
                  "id": 1245,
                  "name": "Invalid1155BatchTransferEncoding",
                  "nameLocation": "1222:32:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1244,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1254:2:5"
                  },
                  "src": "1216:41:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1246,
                    "nodeType": "StructuredDocumentation",
                    "src": "1265:225:5",
                    "text": " @dev Emit an event whenever a channel is opened or closed.\n @param channel The channel that has been updated.\n @param open    A boolean indicating whether the conduit is open or not."
                  },
                  "eventSelector": "ae63067d43ac07563b7eb8db6595635fc77f1578a2a5ea06ba91b63e2afa37e2",
                  "id": 1252,
                  "name": "ChannelUpdated",
                  "nameLocation": "1502:14:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1248,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "1525:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1252,
                        "src": "1517:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1517:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1250,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "open",
                        "nameLocation": "1539:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1252,
                        "src": "1534:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1249,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1534:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1516:28:5"
                  },
                  "src": "1496:49:5"
                },
                {
                  "documentation": {
                    "id": 1253,
                    "nodeType": "StructuredDocumentation",
                    "src": "1553:360:5",
                    "text": " @notice Execute a sequence of ERC20/721/1155 transfers. Only a caller\n         with an open channel can call this function.\n @param transfers The ERC20/721/1155 transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "4ce34aa2",
                  "id": 1262,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nameLocation": "1928:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1257,
                        "mutability": "mutable",
                        "name": "transfers",
                        "nameLocation": "1963:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1262,
                        "src": "1936:36:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1255,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1254,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1023,
                              "src": "1936:15:5"
                            },
                            "referencedDeclaration": 1023,
                            "src": "1936:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$1023_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 1256,
                          "nodeType": "ArrayTypeName",
                          "src": "1936:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1935:38:5"
                  },
                  "returnParameters": {
                    "id": 1261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1260,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "2017:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1262,
                        "src": "2010:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1259,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2010:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2009:19:5"
                  },
                  "scope": 1295,
                  "src": "1919:110:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1263,
                    "nodeType": "StructuredDocumentation",
                    "src": "2037:361:5",
                    "text": " @notice Execute a sequence of batch 1155 transfers. Only a caller with an\n         open channel can call this function.\n @param batch1155Transfers The 1155 batch transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "8df25d92",
                  "id": 1272,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeBatch1155",
                  "nameLocation": "2413:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1267,
                        "mutability": "mutable",
                        "name": "batch1155Transfers",
                        "nameLocation": "2476:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1272,
                        "src": "2440:54:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1265,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1264,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1036,
                              "src": "2440:24:5"
                            },
                            "referencedDeclaration": 1036,
                            "src": "2440:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1036_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 1266,
                          "nodeType": "ArrayTypeName",
                          "src": "2440:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2429:72:5"
                  },
                  "returnParameters": {
                    "id": 1271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1270,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "2527:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1272,
                        "src": "2520:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1269,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2520:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2519:19:5"
                  },
                  "scope": 1295,
                  "src": "2404:135:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1273,
                    "nodeType": "StructuredDocumentation",
                    "src": "2547:453:5",
                    "text": " @notice Execute a sequence of transfers, both single and batch 1155. Only\n         a caller with an open channel can call this function.\n @param standardTransfers  The ERC20/721/1155 transfers to perform.\n @param batch1155Transfers The 1155 batch transfers to perform.\n @return magicValue A magic value indicating that the transfers were\n                    performed successfully."
                  },
                  "functionSelector": "899e104c",
                  "id": 1286,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeWithBatch1155",
                  "nameLocation": "3015:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "standardTransfers",
                        "nameLocation": "3073:17:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1286,
                        "src": "3046:44:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitTransfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1275,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1274,
                              "name": "ConduitTransfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1023,
                              "src": "3046:15:5"
                            },
                            "referencedDeclaration": 1023,
                            "src": "3046:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitTransfer_$1023_storage_ptr",
                              "typeString": "struct ConduitTransfer"
                            }
                          },
                          "id": 1276,
                          "nodeType": "ArrayTypeName",
                          "src": "3046:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitTransfer_$1023_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitTransfer[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1281,
                        "mutability": "mutable",
                        "name": "batch1155Transfers",
                        "nameLocation": "3137:18:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1286,
                        "src": "3101:54:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1279,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1278,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1036,
                              "src": "3101:24:5"
                            },
                            "referencedDeclaration": 1036,
                            "src": "3101:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1036_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 1280,
                          "nodeType": "ArrayTypeName",
                          "src": "3101:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3035:127:5"
                  },
                  "returnParameters": {
                    "id": 1285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1284,
                        "mutability": "mutable",
                        "name": "magicValue",
                        "nameLocation": "3188:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1286,
                        "src": "3181:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1283,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3181:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3180:19:5"
                  },
                  "scope": 1295,
                  "src": "3006:194:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1287,
                    "nodeType": "StructuredDocumentation",
                    "src": "3208:227:5",
                    "text": " @notice Open or close a given channel. Only callable by the controller.\n @param channel The channel to open or close.\n @param isOpen  The status of the channel (either open or closed)."
                  },
                  "functionSelector": "c4e8fcb5",
                  "id": 1294,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateChannel",
                  "nameLocation": "3450:13:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1292,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1289,
                        "mutability": "mutable",
                        "name": "channel",
                        "nameLocation": "3472:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1294,
                        "src": "3464:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1288,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3464:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1291,
                        "mutability": "mutable",
                        "name": "isOpen",
                        "nameLocation": "3486:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1294,
                        "src": "3481:11:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1290,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3481:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3463:30:5"
                  },
                  "returnParameters": {
                    "id": 1293,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3502:0:5"
                  },
                  "scope": 1295,
                  "src": "3441:62:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1296,
              "src": "371:3135:5",
              "usedErrors": [
                1236,
                1239,
                1242,
                1245
              ]
            }
          ],
          "src": "33:3475:5"
        },
        "id": 5
      },
      "contracts/interfaces/TokenTransferrerErrors.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/TokenTransferrerErrors.sol",
          "exportedSymbols": {
            "TokenTransferrerErrors": [
              1349
            ]
          },
          "id": 1350,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1297,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "TokenTransferrerErrors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1298,
                "nodeType": "StructuredDocumentation",
                "src": "61:42:6",
                "text": " @title TokenTransferrerErrors"
              },
              "fullyImplemented": true,
              "id": 1349,
              "linearizedBaseContracts": [
                1349
              ],
              "name": "TokenTransferrerErrors",
              "nameLocation": "115:22:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1299,
                    "nodeType": "StructuredDocumentation",
                    "src": "145:124:6",
                    "text": " @dev Revert with an error when an ERC721 transfer with amount other than\n      one is attempted."
                  },
                  "errorSelector": "efcc00b1",
                  "id": 1301,
                  "name": "InvalidERC721TransferAmount",
                  "nameLocation": "281:27:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1300,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "308:2:6"
                  },
                  "src": "275:36:6"
                },
                {
                  "documentation": {
                    "id": 1302,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:132:6",
                    "text": " @dev Revert with an error when attempting to fulfill an order where an\n      item has an amount of zero."
                  },
                  "errorSelector": "91b3e514",
                  "id": 1304,
                  "name": "MissingItemAmount",
                  "nameLocation": "463:17:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1303,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "480:2:6"
                  },
                  "src": "457:26:6"
                },
                {
                  "documentation": {
                    "id": 1305,
                    "nodeType": "StructuredDocumentation",
                    "src": "491:464:6",
                    "text": " @dev Revert with an error when an ERC20, ERC721, or ERC1155 token\n      transfer reverts.\n @param token      The token for which the transfer was attempted.\n @param from       The source of the attempted transfer.\n @param to         The recipient of the attempted transfer.\n @param identifier The identifier for the attempted transfer.\n @param amount     The amount for the attempted transfer."
                  },
                  "errorSelector": "f486bc87",
                  "id": 1317,
                  "name": "TokenTransferGenericFailure",
                  "nameLocation": "967:27:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1307,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1013:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "1005:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1306,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1005:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1309,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1037:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "1029:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1029:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1311,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1060:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "1052:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1310,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1052:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1313,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "1081:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "1073:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1312,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1315,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1110:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "1102:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1314,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1102:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "994:129:6"
                  },
                  "src": "961:163:6"
                },
                {
                  "documentation": {
                    "id": 1318,
                    "nodeType": "StructuredDocumentation",
                    "src": "1132:445:6",
                    "text": " @dev Revert with an error when a batch ERC1155 token transfer reverts.\n @param token       The token for which the transfer was attempted.\n @param from        The source of the attempted transfer.\n @param to          The recipient of the attempted transfer.\n @param identifiers The identifiers for the attempted transfer.\n @param amounts     The amounts for the attempted transfer."
                  },
                  "errorSelector": "afc445e2",
                  "id": 1332,
                  "name": "ERC1155BatchTransferGenericFailure",
                  "nameLocation": "1589:34:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1331,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1320,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1642:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1332,
                        "src": "1634:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1319,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1634:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1322,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1666:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1332,
                        "src": "1658:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1658:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1324,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1689:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1332,
                        "src": "1681:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1681:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1327,
                        "mutability": "mutable",
                        "name": "identifiers",
                        "nameLocation": "1712:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1332,
                        "src": "1702:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1325,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1702:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1326,
                          "nodeType": "ArrayTypeName",
                          "src": "1702:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1330,
                        "mutability": "mutable",
                        "name": "amounts",
                        "nameLocation": "1744:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1332,
                        "src": "1734:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1328,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1734:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1329,
                          "nodeType": "ArrayTypeName",
                          "src": "1734:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1623:135:6"
                  },
                  "src": "1583:176:6"
                },
                {
                  "documentation": {
                    "id": 1333,
                    "nodeType": "StructuredDocumentation",
                    "src": "1767:414:6",
                    "text": " @dev Revert with an error when an ERC20 token transfer returns a falsey\n      value.\n @param token      The token for which the ERC20 transfer was attempted.\n @param from       The source of the attempted ERC20 transfer.\n @param to         The recipient of the attempted ERC20 transfer.\n @param amount     The amount for the attempted ERC20 transfer."
                  },
                  "errorSelector": "98891923",
                  "id": 1343,
                  "name": "BadReturnValueFromERC20OnTransfer",
                  "nameLocation": "2193:33:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1335,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2245:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "2237:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2237:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1337,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2269:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "2261:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1336,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2261:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1339,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2292:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "2284:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2284:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1341,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2313:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "2305:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2305:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2226:100:6"
                  },
                  "src": "2187:140:6"
                },
                {
                  "documentation": {
                    "id": 1344,
                    "nodeType": "StructuredDocumentation",
                    "src": "2335:220:6",
                    "text": " @dev Revert with an error when an account being called as an assumed\n      contract does not have code and returns no data.\n @param account The account that should contain code."
                  },
                  "errorSelector": "5f15d672",
                  "id": 1348,
                  "name": "NoContract",
                  "nameLocation": "2567:10:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1347,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1346,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2586:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1348,
                        "src": "2578:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1345,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2578:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2577:17:6"
                  },
                  "src": "2561:34:6"
                }
              ],
              "scope": 1350,
              "src": "105:2493:6",
              "usedErrors": [
                1301,
                1304,
                1317,
                1332,
                1343,
                1348
              ]
            }
          ],
          "src": "33:2567:6"
        },
        "id": 6
      },
      "contracts/lib/TokenTransferrer.sol": {
        "ast": {
          "absolutePath": "contracts/lib/TokenTransferrer.sol",
          "exportedSymbols": {
            "BadReturnValueFromERC20OnTransfer_error_amount_ptr": [
              1587
            ],
            "BadReturnValueFromERC20OnTransfer_error_from_ptr": [
              1581
            ],
            "BadReturnValueFromERC20OnTransfer_error_length": [
              1590
            ],
            "BadReturnValueFromERC20OnTransfer_error_sig_ptr": [
              1575
            ],
            "BadReturnValueFromERC20OnTransfer_error_signature": [
              1572
            ],
            "BadReturnValueFromERC20OnTransfer_error_to_ptr": [
              1584
            ],
            "BadReturnValueFromERC20OnTransfer_error_token_ptr": [
              1578
            ],
            "BatchTransfer1155Params_amounts_head_ptr": [
              1608
            ],
            "BatchTransfer1155Params_amounts_length_baseOffset": [
              1623
            ],
            "BatchTransfer1155Params_data_head_ptr": [
              1611
            ],
            "BatchTransfer1155Params_data_length_baseOffset": [
              1626
            ],
            "BatchTransfer1155Params_data_length_basePtr": [
              1614
            ],
            "BatchTransfer1155Params_ids_head_ptr": [
              1605
            ],
            "BatchTransfer1155Params_ids_length_offset": [
              1620
            ],
            "BatchTransfer1155Params_ids_length_ptr": [
              1617
            ],
            "BatchTransfer1155Params_ptr": [
              1602
            ],
            "ConduitBatch1155Transfer": [
              1036
            ],
            "ConduitBatch1155Transfer_amounts_head_offset": [
              1638
            ],
            "ConduitBatch1155Transfer_amounts_length_baseOffset": [
              1644
            ],
            "ConduitBatch1155Transfer_calldata_baseSize": [
              1647
            ],
            "ConduitBatch1155Transfer_from_offset": [
              1632
            ],
            "ConduitBatch1155Transfer_ids_head_offset": [
              1635
            ],
            "ConduitBatch1155Transfer_ids_length_offset": [
              1641
            ],
            "ConduitBatch1155Transfer_usable_head_size": [
              1629
            ],
            "CostPerWord": [
              1596
            ],
            "DefaultFreeMemoryPointer": [
              1433
            ],
            "ERC1155BatchTransferGenericFailure_error_signature": [
              1565
            ],
            "ERC1155BatchTransferGenericFailure_token_ptr": [
              1568
            ],
            "ERC1155_safeBatchTransferFrom_selector": [
              1505
            ],
            "ERC1155_safeBatchTransferFrom_signature": [
              1496
            ],
            "ERC1155_safeTransferFrom_amount_ptr": [
              1480
            ],
            "ERC1155_safeTransferFrom_data_length_offset": [
              1492
            ],
            "ERC1155_safeTransferFrom_data_length_ptr": [
              1486
            ],
            "ERC1155_safeTransferFrom_data_offset_ptr": [
              1483
            ],
            "ERC1155_safeTransferFrom_from_ptr": [
              1471
            ],
            "ERC1155_safeTransferFrom_id_ptr": [
              1477
            ],
            "ERC1155_safeTransferFrom_length": [
              1489
            ],
            "ERC1155_safeTransferFrom_sig_ptr": [
              1468
            ],
            "ERC1155_safeTransferFrom_signature": [
              1465
            ],
            "ERC1155_safeTransferFrom_to_ptr": [
              1474
            ],
            "ERC20_transferFrom_amount_ptr": [
              1458
            ],
            "ERC20_transferFrom_from_ptr": [
              1452
            ],
            "ERC20_transferFrom_length": [
              1461
            ],
            "ERC20_transferFrom_sig_ptr": [
              1449
            ],
            "ERC20_transferFrom_signature": [
              1446
            ],
            "ERC20_transferFrom_to_ptr": [
              1455
            ],
            "ERC721_transferFrom_from_ptr": [
              1514
            ],
            "ERC721_transferFrom_id_ptr": [
              1520
            ],
            "ERC721_transferFrom_length": [
              1523
            ],
            "ERC721_transferFrom_sig_ptr": [
              1511
            ],
            "ERC721_transferFrom_signature": [
              1508
            ],
            "ERC721_transferFrom_to_ptr": [
              1517
            ],
            "ExtraGasBuffer": [
              1593
            ],
            "FreeMemoryPointerSlot": [
              1427
            ],
            "Invalid1155BatchTransferEncoding_length": [
              1653
            ],
            "Invalid1155BatchTransferEncoding_ptr": [
              1650
            ],
            "Invalid1155BatchTransferEncoding_selector": [
              1657
            ],
            "MemoryExpansionCoefficient": [
              1599
            ],
            "NoContract_error_length": [
              1536
            ],
            "NoContract_error_sig_ptr": [
              1530
            ],
            "NoContract_error_signature": [
              1527
            ],
            "NoContract_error_token_ptr": [
              1533
            ],
            "OneWord": [
              1418
            ],
            "Slot0x80": [
              1436
            ],
            "Slot0xA0": [
              1439
            ],
            "Slot0xC0": [
              1442
            ],
            "ThreeWords": [
              1424
            ],
            "TokenTransferGenericFailure_error_amount_ptr": [
              1558
            ],
            "TokenTransferGenericFailure_error_from_ptr": [
              1549
            ],
            "TokenTransferGenericFailure_error_id_ptr": [
              1555
            ],
            "TokenTransferGenericFailure_error_length": [
              1561
            ],
            "TokenTransferGenericFailure_error_sig_ptr": [
              1543
            ],
            "TokenTransferGenericFailure_error_signature": [
              1540
            ],
            "TokenTransferGenericFailure_error_to_ptr": [
              1552
            ],
            "TokenTransferGenericFailure_error_token_ptr": [
              1546
            ],
            "TokenTransferrer": [
              1413
            ],
            "TokenTransferrerErrors": [
              1349
            ],
            "TwoWords": [
              1421
            ],
            "ZeroSlot": [
              1430
            ]
          },
          "id": 1414,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1351,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:7"
            },
            {
              "absolutePath": "contracts/lib/TokenTransferrerConstants.sol",
              "file": "./TokenTransferrerConstants.sol",
              "id": 1352,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1414,
              "sourceUnit": 1658,
              "src": "61:41:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/TokenTransferrerErrors.sol",
              "file": "../interfaces/TokenTransferrerErrors.sol",
              "id": 1354,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1414,
              "sourceUnit": 1350,
              "src": "126:88:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1353,
                    "name": "TokenTransferrerErrors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1349,
                    "src": "140:22:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/conduit/lib/ConduitStructs.sol",
              "file": "../conduit/lib/ConduitStructs.sol",
              "id": 1356,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1414,
              "sourceUnit": 1037,
              "src": "218:77:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1355,
                    "name": "ConduitBatch1155Transfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1036,
                    "src": "227:24:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1357,
                    "name": "TokenTransferrerErrors",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1349,
                    "src": "328:22:7"
                  },
                  "id": 1358,
                  "nodeType": "InheritanceSpecifier",
                  "src": "328:22:7"
                }
              ],
              "canonicalName": "TokenTransferrer",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1413,
              "linearizedBaseContracts": [
                1413,
                1349
              ],
              "name": "TokenTransferrer",
              "nameLocation": "308:16:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1371,
                    "nodeType": "Block",
                    "src": "946:9029:7",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1041:8927:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1137:46:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "1161:21:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1155:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1155:28:7"
                              },
                              "variables": [
                                {
                                  "name": "memPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "1141:10:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1283:26:7"
                                  },
                                  {
                                    "name": "ERC20_transferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "1311:28:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1276:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1276:64:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1276:64:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_from_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1361:27:7"
                                  },
                                  {
                                    "name": "from",
                                    "nodeType": "YulIdentifier",
                                    "src": "1390:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1354:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1354:41:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1354:41:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_to_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1416:25:7"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "1443:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1409:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1409:37:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1409:37:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC20_transferFrom_amount_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1467:29:7"
                                  },
                                  {
                                    "name": "amount",
                                    "nodeType": "YulIdentifier",
                                    "src": "1498:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1460:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1460:45:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1460:45:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1602:240:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "1643:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1643:5:7"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "1667:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1691:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ERC20_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1711:26:7"
                                  },
                                  {
                                    "name": "ERC20_transferFrom_length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1756:25:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1800:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "OneWord",
                                    "nodeType": "YulIdentifier",
                                    "src": "1820:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "1620:4:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1620:222:7"
                              },
                              "variables": [
                                {
                                  "name": "callStatus",
                                  "nodeType": "YulTypedName",
                                  "src": "1606:10:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1939:416:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2212:1:7",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2206:5:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2206:8:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2216:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "eq",
                                              "nodeType": "YulIdentifier",
                                              "src": "2203:2:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2203:15:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2223:14:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2223:16:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2241:2:7",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "gt",
                                              "nodeType": "YulIdentifier",
                                              "src": "2220:2:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2220:24:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2199:3:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2199:46:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "returndatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "2275:14:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2275:16:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2268:6:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2268:24:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nodeType": "YulIdentifier",
                                      "src": "2174:2:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2174:137:7"
                                  },
                                  {
                                    "name": "callStatus",
                                    "nodeType": "YulIdentifier",
                                    "src": "2330:10:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1954:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1954:401:7"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nodeType": "YulTypedName",
                                  "src": "1943:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2709:7051:7",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "3023:6523:7",
                                      "statements": [
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "3113:6107:7",
                                            "statements": [
                                              {
                                                "body": {
                                                  "nodeType": "YulBlock",
                                                  "src": "3217:4732:7",
                                                  "statements": [
                                                    {
                                                      "body": {
                                                        "nodeType": "YulBlock",
                                                        "src": "3415:3269:7",
                                                        "statements": [
                                                          {
                                                            "nodeType": "YulVariableDeclaration",
                                                            "src": "3762:162:7",
                                                            "value": {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [],
                                                                  "functionName": {
                                                                    "name": "returndatasize",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "3827:14:7"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "3827:16:7"
                                                                },
                                                                {
                                                                  "name": "OneWord",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "3882:7:7"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "div",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3785:3:7"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "3785:139:7"
                                                            },
                                                            "variables": [
                                                              {
                                                                "name": "returnDataWords",
                                                                "nodeType": "YulTypedName",
                                                                "src": "3766:15:7",
                                                                "type": ""
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "nodeType": "YulVariableDeclaration",
                                                            "src": "4261:42:7",
                                                            "value": {
                                                              "arguments": [
                                                                {
                                                                  "name": "memPointer",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4283:10:7"
                                                                },
                                                                {
                                                                  "name": "OneWord",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4295:7:7"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "div",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4279:3:7"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "4279:24:7"
                                                            },
                                                            "variables": [
                                                              {
                                                                "name": "msizeWords",
                                                                "nodeType": "YulTypedName",
                                                                "src": "4265:10:7",
                                                                "type": ""
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "nodeType": "YulVariableDeclaration",
                                                            "src": "4421:45:7",
                                                            "value": {
                                                              "arguments": [
                                                                {
                                                                  "name": "CostPerWord",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4437:11:7"
                                                                },
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4450:15:7"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "mul",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4433:3:7"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "4433:33:7"
                                                            },
                                                            "variables": [
                                                              {
                                                                "name": "cost",
                                                                "nodeType": "YulTypedName",
                                                                "src": "4425:4:7",
                                                                "type": ""
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "body": {
                                                              "nodeType": "YulBlock",
                                                              "src": "4618:1281:7",
                                                              "statements": [
                                                                {
                                                                  "nodeType": "YulAssignment",
                                                                  "src": "4657:1207:7",
                                                                  "value": {
                                                                    "arguments": [
                                                                      {
                                                                        "name": "cost",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "4711:4:7"
                                                                      },
                                                                      {
                                                                        "arguments": [
                                                                          {
                                                                            "arguments": [
                                                                              {
                                                                                "arguments": [
                                                                                  {
                                                                                    "name": "returnDataWords",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "4920:15:7"
                                                                                  },
                                                                                  {
                                                                                    "name": "msizeWords",
                                                                                    "nodeType": "YulIdentifier",
                                                                                    "src": "4990:10:7"
                                                                                  }
                                                                                ],
                                                                                "functionName": {
                                                                                  "name": "sub",
                                                                                  "nodeType": "YulIdentifier",
                                                                                  "src": "4862:3:7"
                                                                                },
                                                                                "nodeType": "YulFunctionCall",
                                                                                "src": "4862:189:7"
                                                                              },
                                                                              {
                                                                                "name": "CostPerWord",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "5102:11:7"
                                                                              }
                                                                            ],
                                                                            "functionName": {
                                                                              "name": "mul",
                                                                              "nodeType": "YulIdentifier",
                                                                              "src": "4808:3:7"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "4808:352:7"
                                                                          },
                                                                          {
                                                                            "arguments": [
                                                                              {
                                                                                "arguments": [
                                                                                  {
                                                                                    "arguments": [
                                                                                      {
                                                                                        "name": "returnDataWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "5381:15:7"
                                                                                      },
                                                                                      {
                                                                                        "name": "returnDataWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "5455:15:7"
                                                                                      }
                                                                                    ],
                                                                                    "functionName": {
                                                                                      "name": "mul",
                                                                                      "nodeType": "YulIdentifier",
                                                                                      "src": "5319:3:7"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "5319:206:7"
                                                                                  },
                                                                                  {
                                                                                    "arguments": [
                                                                                      {
                                                                                        "name": "msizeWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "5584:10:7"
                                                                                      },
                                                                                      {
                                                                                        "name": "msizeWords",
                                                                                        "nodeType": "YulIdentifier",
                                                                                        "src": "5596:10:7"
                                                                                      }
                                                                                    ],
                                                                                    "functionName": {
                                                                                      "name": "mul",
                                                                                      "nodeType": "YulIdentifier",
                                                                                      "src": "5580:3:7"
                                                                                    },
                                                                                    "nodeType": "YulFunctionCall",
                                                                                    "src": "5580:27:7"
                                                                                  }
                                                                                ],
                                                                                "functionName": {
                                                                                  "name": "sub",
                                                                                  "nodeType": "YulIdentifier",
                                                                                  "src": "5261:3:7"
                                                                                },
                                                                                "nodeType": "YulFunctionCall",
                                                                                "src": "5261:397:7"
                                                                              },
                                                                              {
                                                                                "name": "MemoryExpansionCoefficient",
                                                                                "nodeType": "YulIdentifier",
                                                                                "src": "5709:26:7"
                                                                              }
                                                                            ],
                                                                            "functionName": {
                                                                              "name": "div",
                                                                              "nodeType": "YulIdentifier",
                                                                              "src": "5207:3:7"
                                                                            },
                                                                            "nodeType": "YulFunctionCall",
                                                                            "src": "5207:575:7"
                                                                          }
                                                                        ],
                                                                        "functionName": {
                                                                          "name": "add",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "4758:3:7"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "4758:1067:7"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "add",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "4665:3:7"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "4665:1199:7"
                                                                  },
                                                                  "variableNames": [
                                                                    {
                                                                      "name": "cost",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "4657:4:7"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            "condition": {
                                                              "arguments": [
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4589:15:7"
                                                                },
                                                                {
                                                                  "name": "msizeWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "4606:10:7"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "gt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "4586:2:7"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "4586:31:7"
                                                            },
                                                            "nodeType": "YulIf",
                                                            "src": "4583:1316:7"
                                                          },
                                                          {
                                                            "body": {
                                                              "nodeType": "YulBlock",
                                                              "src": "6203:450:7",
                                                              "statements": [
                                                                {
                                                                  "expression": {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "6391:1:7",
                                                                        "type": "",
                                                                        "value": "0"
                                                                      },
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "6394:1:7",
                                                                        "type": "",
                                                                        "value": "0"
                                                                      },
                                                                      {
                                                                        "arguments": [],
                                                                        "functionName": {
                                                                          "name": "returndatasize",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "6397:14:7"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "6397:16:7"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "returndatacopy",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "6376:14:7"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6376:38:7"
                                                                  },
                                                                  "nodeType": "YulExpressionStatement",
                                                                  "src": "6376:38:7"
                                                                },
                                                                {
                                                                  "expression": {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "6598:1:7",
                                                                        "type": "",
                                                                        "value": "0"
                                                                      },
                                                                      {
                                                                        "arguments": [],
                                                                        "functionName": {
                                                                          "name": "returndatasize",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "6601:14:7"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "6601:16:7"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "revert",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "6591:6:7"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "6591:27:7"
                                                                  },
                                                                  "nodeType": "YulExpressionStatement",
                                                                  "src": "6591:27:7"
                                                                }
                                                              ]
                                                            },
                                                            "condition": {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "cost",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "6173:4:7"
                                                                    },
                                                                    {
                                                                      "name": "ExtraGasBuffer",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "6179:14:7"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "add",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6169:3:7"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "6169:25:7"
                                                                },
                                                                {
                                                                  "arguments": [],
                                                                  "functionName": {
                                                                    "name": "gas",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "6196:3:7"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "6196:5:7"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "lt",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "6166:2:7"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "6166:36:7"
                                                            },
                                                            "nodeType": "YulIf",
                                                            "src": "6163:490:7"
                                                          }
                                                        ]
                                                      },
                                                      "condition": {
                                                        "arguments": [],
                                                        "functionName": {
                                                          "name": "returndatasize",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3398:14:7"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "3398:16:7"
                                                      },
                                                      "nodeType": "YulIf",
                                                      "src": "3395:3289:7"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_sig_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "6836:41:7"
                                                          },
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_signature",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "6912:43:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "6795:6:7"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "6795:191:7"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "6795:191:7"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_token_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7057:43:7"
                                                          },
                                                          {
                                                            "name": "token",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7135:5:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7016:6:7"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7016:155:7"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "7016:155:7"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_from_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7242:42:7"
                                                          },
                                                          {
                                                            "name": "from",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7319:4:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7201:6:7"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7201:153:7"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "7201:153:7"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_to_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7391:40:7"
                                                          },
                                                          {
                                                            "name": "to",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7433:2:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7384:6:7"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7384:52:7"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "7384:52:7"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_id_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7473:40:7"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "7515:1:7",
                                                            "type": "",
                                                            "value": "0"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7466:6:7"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7466:51:7"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "7466:51:7"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_amount_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7588:44:7"
                                                          },
                                                          {
                                                            "name": "amount",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7667:6:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "mstore",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7547:6:7"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7547:157:7"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "7547:157:7"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_sig_ptr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7775:41:7"
                                                          },
                                                          {
                                                            "name": "TokenTransferGenericFailure_error_length",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "7851:40:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "revert",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "7734:6:7"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "7734:188:7"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "7734:188:7"
                                                    }
                                                  ]
                                                },
                                                "condition": {
                                                  "arguments": [
                                                    {
                                                      "name": "callStatus",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3205:10:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "iszero",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3198:6:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3198:18:7"
                                                },
                                                "nodeType": "YulIf",
                                                "src": "3195:4754:7"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8135:47:7"
                                                    },
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_signature",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8213:49:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8098:6:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "8098:191:7"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "8098:191:7"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_token_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8352:49:7"
                                                    },
                                                    {
                                                      "name": "token",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8432:5:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8315:6:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "8315:149:7"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "8315:149:7"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_from_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8527:48:7"
                                                    },
                                                    {
                                                      "name": "from",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8606:4:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8490:6:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "8490:147:7"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "8490:147:7"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_to_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8700:46:7"
                                                    },
                                                    {
                                                      "name": "to",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8777:2:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8663:6:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "8663:143:7"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "8663:143:7"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_amount_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8869:50:7"
                                                    },
                                                    {
                                                      "name": "amount",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8950:6:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mstore",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8832:6:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "8832:151:7"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "8832:151:7"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9046:47:7"
                                                    },
                                                    {
                                                      "name": "BadReturnValueFromERC20OnTransfer_error_length",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "9124:46:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "revert",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "9009:6:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "9009:188:7"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "9009:188:7"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "name": "success",
                                                "nodeType": "YulIdentifier",
                                                "src": "3104:7:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "3097:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3097:15:7"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "3094:6126:7"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "9332:24:7"
                                              },
                                              {
                                                "name": "NoContract_error_signature",
                                                "nodeType": "YulIdentifier",
                                                "src": "9358:26:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "9325:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "9325:60:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "9325:60:7"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_token_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "9414:26:7"
                                              },
                                              {
                                                "name": "token",
                                                "nodeType": "YulIdentifier",
                                                "src": "9442:5:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "9407:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "9407:41:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "9407:41:7"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "9477:24:7"
                                              },
                                              {
                                                "name": "NoContract_error_length",
                                                "nodeType": "YulIdentifier",
                                                "src": "9503:23:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "9470:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "9470:57:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "9470:57:7"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "token",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3003:5:7"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "extcodesize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2991:11:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "2991:18:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "iszero",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2984:6:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2984:26:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "iszero",
                                                "nodeType": "YulIdentifier",
                                                "src": "2977:6:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2977:34:7"
                                            },
                                            {
                                              "name": "success",
                                              "nodeType": "YulIdentifier",
                                              "src": "3013:7:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "2973:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2973:48:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "2966:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2966:56:7"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "2963:6583:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "success",
                                        "nodeType": "YulIdentifier",
                                        "src": "2665:7:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2688:14:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2688:16:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "2681:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2681:24:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2674:6:7"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2674:32:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2661:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2661:46:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2654:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2654:54:7"
                              },
                              "nodeType": "YulIf",
                              "src": "2651:7109:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "9841:21:7"
                                  },
                                  {
                                    "name": "memPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "9864:10:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9834:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9834:41:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9834:41:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ZeroSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "9945:8:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9955:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9938:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9938:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9938:19:7"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 1587,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8869:50:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1581,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8527:48:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1590,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9124:46:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1575,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8135:47:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1575,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9046:47:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1572,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8213:49:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1584,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8700:46:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1578,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8352:49:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1596,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4437:11:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1596,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5102:11:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1458,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1467:29:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1452,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1361:27:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1461,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1756:25:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1449,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1283:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1449,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1711:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1446,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1311:28:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1455,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1416:25:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1593,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6179:14:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1427,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1161:21:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1427,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9841:21:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1599,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "5709:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1536,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9503:23:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1530,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9332:24:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1530,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9477:24:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1527,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9358:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1533,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9414:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1820:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3882:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "4295:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1558,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7588:44:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1549,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7242:42:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1555,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7473:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1561,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7851:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1543,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6836:41:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1543,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7775:41:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1540,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6912:43:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1552,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7391:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1546,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7057:43:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1430,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9945:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1367,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1498:6:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1367,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7667:6:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1367,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8950:6:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1363,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1390:4:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1363,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7319:4:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1363,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8606:4:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1365,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1443:2:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1365,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7433:2:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1365,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8777:2:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1361,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1667:5:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1361,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3003:5:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1361,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "7135:5:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1361,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8432:5:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1361,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9442:5:7",
                            "valueSize": 1
                          }
                        ],
                        "id": 1370,
                        "nodeType": "InlineAssembly",
                        "src": "1032:8936:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1359,
                    "nodeType": "StructuredDocumentation",
                    "src": "358:442:7",
                    "text": " @dev Internal function to transfer ERC20 tokens from a given originator\n      to a given recipient. Sufficient approvals must be set on the\n      contract performing the transfer.\n @param token      The ERC20 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param amount     The amount to transfer."
                  },
                  "id": 1372,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC20Transfer",
                  "nameLocation": "815:21:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1361,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "855:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "847:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1360,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "847:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1363,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "879:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "871:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1362,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "871:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1365,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "902:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "894:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1364,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "894:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1367,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "923:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "915:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "915:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "836:100:7"
                  },
                  "returnParameters": {
                    "id": 1369,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "946:0:7"
                  },
                  "scope": 1413,
                  "src": "806:9169:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1385,
                    "nodeType": "Block",
                    "src": "10581:4640:7",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "10677:4537:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10772:228:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "10798:24:7"
                                        },
                                        {
                                          "name": "NoContract_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "10824:26:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "10791:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10791:60:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10791:60:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "10876:26:7"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "10904:5:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "10869:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10869:41:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10869:41:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "10935:24:7"
                                        },
                                        {
                                          "name": "NoContract_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "10961:23:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "10928:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10928:57:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10928:57:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "token",
                                        "nodeType": "YulIdentifier",
                                        "src": "10764:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extcodesize",
                                      "nodeType": "YulIdentifier",
                                      "src": "10752:11:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10752:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "10745:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10745:26:7"
                              },
                              "nodeType": "YulIf",
                              "src": "10742:258:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11090:46:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "11114:21:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11108:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11108:28:7"
                              },
                              "variables": [
                                {
                                  "name": "memPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "11094:10:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11233:27:7"
                                  },
                                  {
                                    "name": "ERC721_transferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "11262:29:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11226:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11226:66:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11226:66:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_from_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11313:28:7"
                                  },
                                  {
                                    "name": "from",
                                    "nodeType": "YulIdentifier",
                                    "src": "11343:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11306:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11306:42:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11306:42:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_to_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11369:26:7"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "11397:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11362:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11362:38:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11362:38:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC721_transferFrom_id_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11421:26:7"
                                  },
                                  {
                                    "name": "identifier",
                                    "nodeType": "YulIdentifier",
                                    "src": "11449:10:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11414:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11414:46:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11414:46:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11532:233:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "11570:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11570:5:7"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "11594:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11618:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ERC721_transferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "11638:27:7"
                                  },
                                  {
                                    "name": "ERC721_transferFrom_length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11684:26:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11729:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11749:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "11547:4:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11547:218:7"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nodeType": "YulTypedName",
                                  "src": "11536:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11842:3164:7",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "12004:2204:7",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "12261:53:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12288:14:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12288:16:7"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "12306:7:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "12284:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12284:30:7"
                                          },
                                          "variables": [
                                            {
                                              "name": "returnDataWords",
                                              "nodeType": "YulTypedName",
                                              "src": "12265:15:7",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "12567:42:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "memPointer",
                                                "nodeType": "YulIdentifier",
                                                "src": "12589:10:7"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "12601:7:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "12585:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12585:24:7"
                                          },
                                          "variables": [
                                            {
                                              "name": "msizeWords",
                                              "nodeType": "YulTypedName",
                                              "src": "12571:10:7",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "12703:45:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "CostPerWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "12719:11:7"
                                              },
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "12732:15:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "12715:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12715:33:7"
                                          },
                                          "variables": [
                                            {
                                              "name": "cost",
                                              "nodeType": "YulTypedName",
                                              "src": "12707:4:7",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "12876:751:7",
                                            "statements": [
                                              {
                                                "nodeType": "YulAssignment",
                                                "src": "12903:701:7",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "cost",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12945:4:7"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "13064:15:7"
                                                                },
                                                                {
                                                                  "name": "msizeWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "13081:10:7"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "13060:3:7"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "13060:32:7"
                                                            },
                                                            {
                                                              "name": "CostPerWord",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "13131:11:7"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "mul",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "13018:3:7"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "13018:159:7"
                                                        },
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "13304:15:7"
                                                                    },
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "13321:15:7"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "13300:3:7"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "13300:37:7"
                                                                },
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "13384:10:7"
                                                                    },
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "13396:10:7"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "13380:3:7"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "13380:27:7"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "13254:3:7"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "13254:192:7"
                                                            },
                                                            {
                                                              "name": "MemoryExpansionCoefficient",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "13485:26:7"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "div",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "13212:3:7"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "13212:334:7"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12980:3:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "12980:597:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12911:3:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "12911:693:7"
                                                },
                                                "variableNames": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12903:4:7"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "12847:15:7"
                                              },
                                              {
                                                "name": "msizeWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "12864:10:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "gt",
                                              "nodeType": "YulIdentifier",
                                              "src": "12844:2:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12844:31:7"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "12841:786:7"
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "13883:306:7",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "14007:1:7",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "14010:1:7",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14013:14:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "14013:16:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "returndatacopy",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "13992:14:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "13992:38:7"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "13992:38:7"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "14146:1:7",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14149:14:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "14149:16:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "revert",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "14139:6:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "14139:27:7"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "14139:27:7"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "13853:4:7"
                                                  },
                                                  {
                                                    "name": "ExtraGasBuffer",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "13859:14:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "13849:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "13849:25:7"
                                              },
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "gas",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "13876:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "13876:5:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "lt",
                                              "nodeType": "YulIdentifier",
                                              "src": "13846:2:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "13846:36:7"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "13843:346:7"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "returndatasize",
                                        "nodeType": "YulIdentifier",
                                        "src": "11987:14:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11987:16:7"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "11984:2224:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "14324:41:7"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "14388:43:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14295:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14295:155:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14295:155:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "14475:43:7"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "14520:5:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14468:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14468:58:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14468:58:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_from_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "14551:42:7"
                                        },
                                        {
                                          "name": "from",
                                          "nodeType": "YulIdentifier",
                                          "src": "14595:4:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14544:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14544:56:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14544:56:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_to_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "14625:40:7"
                                        },
                                        {
                                          "name": "to",
                                          "nodeType": "YulIdentifier",
                                          "src": "14667:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14618:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14618:52:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14618:52:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_id_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "14695:40:7"
                                        },
                                        {
                                          "name": "identifier",
                                          "nodeType": "YulIdentifier",
                                          "src": "14737:10:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14688:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14688:60:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14688:60:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_amount_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "14773:44:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14819:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14766:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14766:55:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14766:55:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "14868:41:7"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "14932:40:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14839:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14839:152:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14839:152:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nodeType": "YulIdentifier",
                                    "src": "11833:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "11826:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11826:15:7"
                              },
                              "nodeType": "YulIf",
                              "src": "11823:3183:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "15087:21:7"
                                  },
                                  {
                                    "name": "memPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "15110:10:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15080:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15080:41:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15080:41:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ZeroSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "15191:8:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15201:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15184:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15184:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15184:19:7"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 1596,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12719:11:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1596,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13131:11:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1514,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11313:28:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1520,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11421:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1523,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11684:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1511,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11233:27:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1511,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11638:27:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1508,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11262:29:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1517,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11369:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1593,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13859:14:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1427,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11114:21:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1427,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15087:21:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1599,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "13485:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1536,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10961:23:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1530,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10798:24:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1530,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10935:24:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1527,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10824:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1533,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10876:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12306:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "12601:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1558,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14773:44:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1549,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14551:42:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1555,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14695:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1561,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14932:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1543,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14324:41:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1543,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14868:41:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1540,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14388:43:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1552,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14625:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1546,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14475:43:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1430,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15191:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1377,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11343:4:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1377,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14595:4:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1381,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11449:10:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1381,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14737:10:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1379,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11397:2:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1379,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14667:2:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1375,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10764:5:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1375,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "10904:5:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1375,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "11594:5:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1375,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "14520:5:7",
                            "valueSize": 1
                          }
                        ],
                        "id": 1384,
                        "nodeType": "InlineAssembly",
                        "src": "10668:4546:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1373,
                    "nodeType": "StructuredDocumentation",
                    "src": "9983:447:7",
                    "text": " @dev Internal function to transfer an ERC721 token from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer.\n @param token      The ERC721 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param identifier The tokenId to transfer."
                  },
                  "id": 1386,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC721Transfer",
                  "nameLocation": "10445:22:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1382,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1375,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "10486:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1386,
                        "src": "10478:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10478:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1377,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "10510:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1386,
                        "src": "10502:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10502:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1379,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "10533:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1386,
                        "src": "10525:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1378,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10525:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1381,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "10554:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1386,
                        "src": "10546:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1380,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10546:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10467:104:7"
                  },
                  "returnParameters": {
                    "id": 1383,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10581:0:7"
                  },
                  "scope": 1413,
                  "src": "10436:4785:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1401,
                    "nodeType": "Block",
                    "src": "16031:5290:7",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "16128:5186:7",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16223:228:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16249:24:7"
                                        },
                                        {
                                          "name": "NoContract_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "16275:26:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16242:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16242:60:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16242:60:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16327:26:7"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "16355:5:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16320:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16320:41:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16320:41:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "NoContract_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16386:24:7"
                                        },
                                        {
                                          "name": "NoContract_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "16412:23:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "16379:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16379:57:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16379:57:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "token",
                                        "nodeType": "YulIdentifier",
                                        "src": "16215:5:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extcodesize",
                                      "nodeType": "YulIdentifier",
                                      "src": "16203:11:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16203:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "16196:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16196:26:7"
                              },
                              "nodeType": "YulIf",
                              "src": "16193:258:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16544:46:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "16568:21:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "16562:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16562:28:7"
                              },
                              "variables": [
                                {
                                  "name": "memPointer",
                                  "nodeType": "YulTypedName",
                                  "src": "16548:10:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16604:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "Slot0x80",
                                    "nodeType": "YulIdentifier",
                                    "src": "16626:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "16620:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16620:15:7"
                              },
                              "variables": [
                                {
                                  "name": "slot0x80",
                                  "nodeType": "YulTypedName",
                                  "src": "16608:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16649:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "Slot0xA0",
                                    "nodeType": "YulIdentifier",
                                    "src": "16671:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "16665:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16665:15:7"
                              },
                              "variables": [
                                {
                                  "name": "slot0xA0",
                                  "nodeType": "YulTypedName",
                                  "src": "16653:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16694:31:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "Slot0xC0",
                                    "nodeType": "YulIdentifier",
                                    "src": "16716:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "16710:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16710:15:7"
                              },
                              "variables": [
                                {
                                  "name": "slot0xC0",
                                  "nodeType": "YulTypedName",
                                  "src": "16698:8:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "16844:32:7"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "16895:34:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16819:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16819:125:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16819:125:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_from_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "16965:33:7"
                                  },
                                  {
                                    "name": "from",
                                    "nodeType": "YulIdentifier",
                                    "src": "17000:4:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16958:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16958:47:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16958:47:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_to_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "17026:31:7"
                                  },
                                  {
                                    "name": "to",
                                    "nodeType": "YulIdentifier",
                                    "src": "17059:2:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17019:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17019:43:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17019:43:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_id_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "17083:31:7"
                                  },
                                  {
                                    "name": "identifier",
                                    "nodeType": "YulIdentifier",
                                    "src": "17116:10:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17076:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17076:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17076:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_amount_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "17148:35:7"
                                  },
                                  {
                                    "name": "amount",
                                    "nodeType": "YulIdentifier",
                                    "src": "17185:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17141:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17141:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17141:51:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_data_offset_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "17231:40:7"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_data_length_offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "17290:43:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17206:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17206:142:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17206:142:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ERC1155_safeTransferFrom_data_length_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "17369:40:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17411:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17362:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17362:51:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17362:51:7"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17429:243:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "17467:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17467:5:7"
                                  },
                                  {
                                    "name": "token",
                                    "nodeType": "YulIdentifier",
                                    "src": "17491:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17515:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_sig_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "17535:32:7"
                                  },
                                  {
                                    "name": "ERC1155_safeTransferFrom_length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17586:31:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17636:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17656:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "17444:4:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17444:228:7"
                              },
                              "variables": [
                                {
                                  "name": "success",
                                  "nodeType": "YulTypedName",
                                  "src": "17433:7:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17749:3169:7",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "17911:2204:7",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "18168:53:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "returndatasize",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "18195:14:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "18195:16:7"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "18213:7:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "18191:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "18191:30:7"
                                          },
                                          "variables": [
                                            {
                                              "name": "returnDataWords",
                                              "nodeType": "YulTypedName",
                                              "src": "18172:15:7",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "18474:42:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "memPointer",
                                                "nodeType": "YulIdentifier",
                                                "src": "18496:10:7"
                                              },
                                              {
                                                "name": "OneWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "18508:7:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nodeType": "YulIdentifier",
                                              "src": "18492:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "18492:24:7"
                                          },
                                          "variables": [
                                            {
                                              "name": "msizeWords",
                                              "nodeType": "YulTypedName",
                                              "src": "18478:10:7",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "18610:45:7",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "CostPerWord",
                                                "nodeType": "YulIdentifier",
                                                "src": "18626:11:7"
                                              },
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "18639:15:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "18622:3:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "18622:33:7"
                                          },
                                          "variables": [
                                            {
                                              "name": "cost",
                                              "nodeType": "YulTypedName",
                                              "src": "18614:4:7",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "18783:751:7",
                                            "statements": [
                                              {
                                                "nodeType": "YulAssignment",
                                                "src": "18810:701:7",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "cost",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "18852:4:7"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "name": "returnDataWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "18971:15:7"
                                                                },
                                                                {
                                                                  "name": "msizeWords",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "18988:10:7"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "18967:3:7"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "18967:32:7"
                                                            },
                                                            {
                                                              "name": "CostPerWord",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "19038:11:7"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "mul",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "18925:3:7"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "18925:159:7"
                                                        },
                                                        {
                                                          "arguments": [
                                                            {
                                                              "arguments": [
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "19211:15:7"
                                                                    },
                                                                    {
                                                                      "name": "returnDataWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "19228:15:7"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "19207:3:7"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "19207:37:7"
                                                                },
                                                                {
                                                                  "arguments": [
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "19291:10:7"
                                                                    },
                                                                    {
                                                                      "name": "msizeWords",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "19303:10:7"
                                                                    }
                                                                  ],
                                                                  "functionName": {
                                                                    "name": "mul",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "19287:3:7"
                                                                  },
                                                                  "nodeType": "YulFunctionCall",
                                                                  "src": "19287:27:7"
                                                                }
                                                              ],
                                                              "functionName": {
                                                                "name": "sub",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "19161:3:7"
                                                              },
                                                              "nodeType": "YulFunctionCall",
                                                              "src": "19161:192:7"
                                                            },
                                                            {
                                                              "name": "MemoryExpansionCoefficient",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "19392:26:7"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "div",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "19119:3:7"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "19119:334:7"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "18887:3:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "18887:597:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "18818:3:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "18818:693:7"
                                                },
                                                "variableNames": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "18810:4:7"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "name": "returnDataWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "18754:15:7"
                                              },
                                              {
                                                "name": "msizeWords",
                                                "nodeType": "YulIdentifier",
                                                "src": "18771:10:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "gt",
                                              "nodeType": "YulIdentifier",
                                              "src": "18751:2:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "18751:31:7"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "18748:786:7"
                                        },
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "19790:306:7",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "19914:1:7",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "19917:1:7",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "19920:14:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "19920:16:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "returndatacopy",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19899:14:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "19899:38:7"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "19899:38:7"
                                              },
                                              {
                                                "expression": {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "20053:1:7",
                                                      "type": "",
                                                      "value": "0"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "20056:14:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "20056:16:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "revert",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "20046:6:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "20046:27:7"
                                                },
                                                "nodeType": "YulExpressionStatement",
                                                "src": "20046:27:7"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19760:4:7"
                                                  },
                                                  {
                                                    "name": "ExtraGasBuffer",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19766:14:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19756:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "19756:25:7"
                                              },
                                              {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "gas",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19783:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "19783:5:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "lt",
                                              "nodeType": "YulIdentifier",
                                              "src": "19753:2:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "19753:36:7"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "19750:346:7"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "returndatasize",
                                        "nodeType": "YulIdentifier",
                                        "src": "17894:14:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17894:16:7"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "17891:2224:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "20231:41:7"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_signature",
                                          "nodeType": "YulIdentifier",
                                          "src": "20295:43:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "20202:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20202:155:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20202:155:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_token_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "20382:43:7"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "20427:5:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "20375:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20375:58:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20375:58:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_from_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "20458:42:7"
                                        },
                                        {
                                          "name": "from",
                                          "nodeType": "YulIdentifier",
                                          "src": "20502:4:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "20451:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20451:56:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20451:56:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_to_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "20532:40:7"
                                        },
                                        {
                                          "name": "to",
                                          "nodeType": "YulIdentifier",
                                          "src": "20574:2:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "20525:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20525:52:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20525:52:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_id_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "20602:40:7"
                                        },
                                        {
                                          "name": "identifier",
                                          "nodeType": "YulIdentifier",
                                          "src": "20644:10:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "20595:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20595:60:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20595:60:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_amount_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "20680:44:7"
                                        },
                                        {
                                          "name": "amount",
                                          "nodeType": "YulIdentifier",
                                          "src": "20726:6:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "20673:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20673:60:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20673:60:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "TokenTransferGenericFailure_error_sig_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "20780:41:7"
                                        },
                                        {
                                          "name": "TokenTransferGenericFailure_error_length",
                                          "nodeType": "YulIdentifier",
                                          "src": "20844:40:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "20751:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20751:152:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20751:152:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "success",
                                    "nodeType": "YulIdentifier",
                                    "src": "17740:7:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "17733:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17733:15:7"
                              },
                              "nodeType": "YulIf",
                              "src": "17730:3188:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "Slot0x80",
                                    "nodeType": "YulIdentifier",
                                    "src": "20941:8:7"
                                  },
                                  {
                                    "name": "slot0x80",
                                    "nodeType": "YulIdentifier",
                                    "src": "20951:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20934:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20934:26:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20934:26:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "Slot0xA0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21003:8:7"
                                  },
                                  {
                                    "name": "slot0xA0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21013:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20996:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20996:26:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20996:26:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "Slot0xC0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21065:8:7"
                                  },
                                  {
                                    "name": "slot0xC0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21075:8:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21058:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21058:26:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21058:26:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "21187:21:7"
                                  },
                                  {
                                    "name": "memPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "21210:10:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21180:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21180:41:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21180:41:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ZeroSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "21291:8:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21301:1:7",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21284:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21284:19:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21284:19:7"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 1596,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18626:11:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1596,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19038:11:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1480,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17148:35:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1492,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17290:43:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1486,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17369:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1483,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17231:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1471,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16965:33:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1477,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17083:31:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1489,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17586:31:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1468,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16844:32:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1468,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17535:32:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1465,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16895:34:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1474,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17026:31:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1593,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19766:14:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1427,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16568:21:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1427,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21187:21:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1599,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "19392:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1536,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16412:23:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1530,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16249:24:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1530,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16386:24:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1527,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16275:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1533,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16327:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18213:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "18508:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1436,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16626:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1436,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20941:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1439,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16671:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1439,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21003:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1442,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16716:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1442,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21065:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1558,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20680:44:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1549,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20458:42:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1555,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20602:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1561,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20844:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1543,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20231:41:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1543,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20780:41:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1540,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20295:43:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1552,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20532:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1546,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20382:43:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1430,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "21291:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1397,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17185:6:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1397,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20726:6:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1391,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17000:4:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1391,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20502:4:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1395,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17116:10:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1395,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20644:10:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1393,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17059:2:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1393,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20574:2:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1389,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16215:5:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1389,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16355:5:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1389,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "17491:5:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1389,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "20427:5:7",
                            "valueSize": 1
                          }
                        ],
                        "id": 1400,
                        "nodeType": "InlineAssembly",
                        "src": "16119:5195:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1387,
                    "nodeType": "StructuredDocumentation",
                    "src": "15229:625:7",
                    "text": " @dev Internal function to transfer ERC1155 tokens from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer and contract recipients must\n      implement onReceived to indicate that they are willing to accept the\n      transfer.\n @param token      The ERC1155 token to transfer.\n @param from       The originator of the transfer.\n @param to         The recipient of the transfer.\n @param identifier The id to transfer.\n @param amount     The amount to transfer."
                  },
                  "id": 1402,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC1155Transfer",
                  "nameLocation": "15869:23:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1389,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "15911:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "15903:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1388,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15903:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1391,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "15935:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "15927:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1390,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15927:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1393,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "15958:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "15950:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15950:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1395,
                        "mutability": "mutable",
                        "name": "identifier",
                        "nameLocation": "15979:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "15971:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15971:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1397,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "16008:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "16000:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1396,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16000:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15892:129:7"
                  },
                  "returnParameters": {
                    "id": 1399,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16031:0:7"
                  },
                  "scope": 1413,
                  "src": "15860:5461:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1411,
                    "nodeType": "Block",
                    "src": "21884:11309:7",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "21976:11210:7",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "21991:32:7",
                              "value": {
                                "name": "batchTransfers.length",
                                "nodeType": "YulIdentifier",
                                "src": "22002:21:7"
                              },
                              "variables": [
                                {
                                  "name": "len",
                                  "nodeType": "YulTypedName",
                                  "src": "21995:3:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "22267:47:7",
                              "value": {
                                "name": "batchTransfers.offset",
                                "nodeType": "YulIdentifier",
                                "src": "22293:21:7"
                              },
                              "variables": [
                                {
                                  "name": "nextElementHeadPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "22271:18:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "22558:38:7",
                              "value": {
                                "name": "nextElementHeadPtr",
                                "nodeType": "YulIdentifier",
                                "src": "22578:18:7"
                              },
                              "variables": [
                                {
                                  "name": "arrayHeadPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "22562:12:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "ConduitBatch1155Transfer_from_offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "22799:36:7"
                                  },
                                  {
                                    "name": "ERC1155_safeBatchTransferFrom_signature",
                                    "nodeType": "YulIdentifier",
                                    "src": "22854:39:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22774:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22774:134:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22774:134:7"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23083:9860:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "23324:130:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "arrayHeadPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "23368:12:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "nextElementHeadPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "23416:18:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "23403:12:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "23403:32:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "23342:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23342:112:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementPtr",
                                        "nodeType": "YulTypedName",
                                        "src": "23328:10:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "23539:54:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "nextElementHeadPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "23565:18:7"
                                        },
                                        {
                                          "name": "OneWord",
                                          "nodeType": "YulIdentifier",
                                          "src": "23585:7:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "23561:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23561:32:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "nextElementHeadPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "23539:18:7"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "23728:27:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "23782:10:7"
                                            },
                                            {
                                              "name": "ConduitBatch1155Transfer_from_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "23794:36:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "23778:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "23778:53:7"
                                        },
                                        {
                                          "name": "ConduitBatch1155Transfer_usable_head_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "23854:41:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "23693:12:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23693:221:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "23693:221:7"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "23992:130:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "24048:10:7"
                                            },
                                            {
                                              "name": "ConduitBatch1155Transfer_ids_length_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "24060:42:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "24044:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "24044:59:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "24009:12:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24009:113:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "idsLength",
                                        "nodeType": "YulTypedName",
                                        "src": "23996:9:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "24301:64:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "TwoWords",
                                          "nodeType": "YulIdentifier",
                                          "src": "24330:8:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "idsLength",
                                              "nodeType": "YulIdentifier",
                                              "src": "24344:9:7"
                                            },
                                            {
                                              "name": "TwoWords",
                                              "nodeType": "YulIdentifier",
                                              "src": "24355:8:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "24340:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "24340:24:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "24326:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24326:39:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "idsAndAmountsSize",
                                        "nodeType": "YulTypedName",
                                        "src": "24305:17:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_data_head_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "24482:37:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "BatchTransfer1155Params_ids_length_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "24572:41:7"
                                            },
                                            {
                                              "name": "idsAndAmountsSize",
                                              "nodeType": "YulIdentifier",
                                              "src": "24640:17:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "24542:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "24542:138:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "24453:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24453:246:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "24453:246:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "BatchTransfer1155Params_data_length_basePtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "24850:43:7"
                                            },
                                            {
                                              "name": "idsAndAmountsSize",
                                              "nodeType": "YulIdentifier",
                                              "src": "24920:17:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "24820:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "24820:140:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "24983:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "24791:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24791:212:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "24791:212:7"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "25103:159:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_data_length_basePtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "25153:43:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "idsLength",
                                              "nodeType": "YulIdentifier",
                                              "src": "25223:9:7"
                                            },
                                            {
                                              "name": "TwoWords",
                                              "nodeType": "YulIdentifier",
                                              "src": "25234:8:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "25219:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25219:24:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "25127:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25127:135:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "transferDataSize",
                                        "nodeType": "YulTypedName",
                                        "src": "25107:16:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "BatchTransfer1155Params_ids_length_ptr",
                                          "nodeType": "YulIdentifier",
                                          "src": "25397:38:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "25462:10:7"
                                            },
                                            {
                                              "name": "ConduitBatch1155Transfer_ids_length_offset",
                                              "nodeType": "YulIdentifier",
                                              "src": "25474:42:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "25458:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25458:59:7"
                                        },
                                        {
                                          "name": "idsAndAmountsSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "25540:17:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldatacopy",
                                        "nodeType": "YulIdentifier",
                                        "src": "25362:12:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25362:214:7"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25362:214:7"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "25669:170:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "ConduitBatch1155Transfer_amounts_length_baseOffset",
                                          "nodeType": "YulIdentifier",
                                          "src": "25724:50:7"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "idsLength",
                                              "nodeType": "YulIdentifier",
                                              "src": "25801:9:7"
                                            },
                                            {
                                              "name": "OneWord",
                                              "nodeType": "YulIdentifier",
                                              "src": "25812:7:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mul",
                                            "nodeType": "YulIdentifier",
                                            "src": "25797:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25797:23:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "25698:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25698:141:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "expectedAmountsOffset",
                                        "nodeType": "YulTypedName",
                                        "src": "25673:21:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "25905:1375:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "idsLength",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "26077:9:7"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "elementPtr",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "26134:10:7"
                                                        },
                                                        {
                                                          "name": "expectedAmountsOffset",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "26146:21:7"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26130:3:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "26130:38:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "calldataload",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26117:12:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "26117:52:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "eq",
                                                "nodeType": "YulIdentifier",
                                                "src": "26044:2:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "26044:152:7"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "name": "elementPtr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "26442:10:7"
                                                            },
                                                            {
                                                              "name": "ConduitBatch1155Transfer_ids_head_offset",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "26495:40:7"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "add",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "26396:3:7"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "26396:178:7"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "calldataload",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26345:12:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "26345:264:7"
                                                    },
                                                    {
                                                      "name": "ConduitBatch1155Transfer_ids_length_offset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "26644:42:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "eq",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26308:2:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "26308:409:7"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "name": "elementPtr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "26953:10:7"
                                                            },
                                                            {
                                                              "name": "ConduitBatch1155Transfer_amounts_head_offset",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "27006:44:7"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "add",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "26907:3:7"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "26907:182:7"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "calldataload",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "26856:12:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "26856:268:7"
                                                    },
                                                    {
                                                      "name": "expectedAmountsOffset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "27159:21:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "eq",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "26819:2:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "26819:392:7"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "and",
                                                "nodeType": "YulIdentifier",
                                                "src": "26223:3:7"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "26223:1015:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "25957:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "25957:1304:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "25928:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25928:1352:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "invalidEncoding",
                                        "nodeType": "YulTypedName",
                                        "src": "25909:15:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "27390:382:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "27446:36:7"
                                              },
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_selector",
                                                "nodeType": "YulIdentifier",
                                                "src": "27509:41:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "27413:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "27413:160:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "27413:160:7"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "27628:36:7"
                                              },
                                              {
                                                "name": "Invalid1155BatchTransferEncoding_length",
                                                "nodeType": "YulIdentifier",
                                                "src": "27691:39:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "27595:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "27595:158:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "27595:158:7"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "name": "invalidEncoding",
                                      "nodeType": "YulIdentifier",
                                      "src": "27374:15:7"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "27371:401:7"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "27846:37:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "27872:10:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "27859:12:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27859:24:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "token",
                                        "nodeType": "YulTypedName",
                                        "src": "27850:5:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "27987:244:7",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "28017:24:7"
                                              },
                                              {
                                                "name": "NoContract_error_signature",
                                                "nodeType": "YulIdentifier",
                                                "src": "28043:26:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "28010:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "28010:60:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "28010:60:7"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_token_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "28099:26:7"
                                              },
                                              {
                                                "name": "token",
                                                "nodeType": "YulIdentifier",
                                                "src": "28127:5:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "28092:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "28092:41:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "28092:41:7"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "NoContract_error_sig_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "28162:24:7"
                                              },
                                              {
                                                "name": "NoContract_error_length",
                                                "nodeType": "YulIdentifier",
                                                "src": "28188:23:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "28155:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "28155:57:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "28155:57:7"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "token",
                                              "nodeType": "YulIdentifier",
                                              "src": "27979:5:7"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "extcodesize",
                                            "nodeType": "YulIdentifier",
                                            "src": "27967:11:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "27967:18:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "27960:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27960:26:7"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "27957:274:7"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "28313:326:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "gas",
                                            "nodeType": "YulIdentifier",
                                            "src": "28355:3:7"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "28355:5:7"
                                        },
                                        {
                                          "name": "token",
                                          "nodeType": "YulIdentifier",
                                          "src": "28383:5:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "28411:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "ConduitBatch1155Transfer_from_offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "28435:36:7"
                                        },
                                        {
                                          "name": "transferDataSize",
                                          "nodeType": "YulIdentifier",
                                          "src": "28517:16:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "28595:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "28619:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "call",
                                        "nodeType": "YulIdentifier",
                                        "src": "28328:4:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28328:311:7"
                                    },
                                    "variables": [
                                      {
                                        "name": "success",
                                        "nodeType": "YulTypedName",
                                        "src": "28317:7:7",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "28724:4204:7",
                                      "statements": [
                                        {
                                          "body": {
                                            "nodeType": "YulBlock",
                                            "src": "28898:2892:7",
                                            "statements": [
                                              {
                                                "nodeType": "YulVariableDeclaration",
                                                "src": "29201:53:7",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "returndatasize",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "29228:14:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "29228:16:7"
                                                    },
                                                    {
                                                      "name": "OneWord",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "29246:7:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "div",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "29224:3:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "29224:30:7"
                                                },
                                                "variables": [
                                                  {
                                                    "name": "returnDataWords",
                                                    "nodeType": "YulTypedName",
                                                    "src": "29205:15:7",
                                                    "type": ""
                                                  }
                                                ]
                                              },
                                              {
                                                "nodeType": "YulVariableDeclaration",
                                                "src": "29885:48:7",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "transferDataSize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "29907:16:7"
                                                    },
                                                    {
                                                      "name": "OneWord",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "29925:7:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "div",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "29903:3:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "29903:30:7"
                                                },
                                                "variables": [
                                                  {
                                                    "name": "msizeWords",
                                                    "nodeType": "YulTypedName",
                                                    "src": "29889:10:7",
                                                    "type": ""
                                                  }
                                                ]
                                              },
                                              {
                                                "nodeType": "YulVariableDeclaration",
                                                "src": "30035:45:7",
                                                "value": {
                                                  "arguments": [
                                                    {
                                                      "name": "CostPerWord",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "30051:11:7"
                                                    },
                                                    {
                                                      "name": "returnDataWords",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "30064:15:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mul",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "30047:3:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "30047:33:7"
                                                },
                                                "variables": [
                                                  {
                                                    "name": "cost",
                                                    "nodeType": "YulTypedName",
                                                    "src": "30039:4:7",
                                                    "type": ""
                                                  }
                                                ]
                                              },
                                              {
                                                "body": {
                                                  "nodeType": "YulBlock",
                                                  "src": "30216:964:7",
                                                  "statements": [
                                                    {
                                                      "nodeType": "YulAssignment",
                                                      "src": "30247:906:7",
                                                      "value": {
                                                        "arguments": [
                                                          {
                                                            "name": "cost",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "30293:4:7"
                                                          },
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "name": "returnDataWords",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "30424:15:7"
                                                                      },
                                                                      {
                                                                        "name": "msizeWords",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "30441:10:7"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "sub",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "30420:3:7"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "30420:32:7"
                                                                  },
                                                                  {
                                                                    "name": "CostPerWord",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "30495:11:7"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "mul",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "30374:3:7"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "30374:171:7"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "arguments": [
                                                                          {
                                                                            "name": "returnDataWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "30734:15:7"
                                                                          },
                                                                          {
                                                                            "name": "returnDataWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "30800:15:7"
                                                                          }
                                                                        ],
                                                                        "functionName": {
                                                                          "name": "mul",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "30680:3:7"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "30680:182:7"
                                                                      },
                                                                      {
                                                                        "arguments": [
                                                                          {
                                                                            "name": "msizeWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "30913:10:7"
                                                                          },
                                                                          {
                                                                            "name": "msizeWords",
                                                                            "nodeType": "YulIdentifier",
                                                                            "src": "30925:10:7"
                                                                          }
                                                                        ],
                                                                        "functionName": {
                                                                          "name": "mul",
                                                                          "nodeType": "YulIdentifier",
                                                                          "src": "30909:3:7"
                                                                        },
                                                                        "nodeType": "YulFunctionCall",
                                                                        "src": "30909:27:7"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "sub",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "30630:3:7"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "30630:349:7"
                                                                  },
                                                                  {
                                                                    "name": "MemoryExpansionCoefficient",
                                                                    "nodeType": "YulIdentifier",
                                                                    "src": "31022:26:7"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "div",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "30584:3:7"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "30584:503:7"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "add",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "30332:3:7"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "30332:790:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "30255:3:7"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "30255:898:7"
                                                      },
                                                      "variableNames": [
                                                        {
                                                          "name": "cost",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "30247:4:7"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "condition": {
                                                  "arguments": [
                                                    {
                                                      "name": "returnDataWords",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "30187:15:7"
                                                    },
                                                    {
                                                      "name": "msizeWords",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "30204:10:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "gt",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "30184:2:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "30184:31:7"
                                                },
                                                "nodeType": "YulIf",
                                                "src": "30181:999:7"
                                              },
                                              {
                                                "body": {
                                                  "nodeType": "YulBlock",
                                                  "src": "31452:315:7",
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "31577:1:7",
                                                            "type": "",
                                                            "value": "0"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "31580:1:7",
                                                            "type": "",
                                                            "value": "0"
                                                          },
                                                          {
                                                            "arguments": [],
                                                            "functionName": {
                                                              "name": "returndatasize",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "31583:14:7"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "31583:16:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "returndatacopy",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "31562:14:7"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "31562:38:7"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "31562:38:7"
                                                    },
                                                    {
                                                      "expression": {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "31720:1:7",
                                                            "type": "",
                                                            "value": "0"
                                                          },
                                                          {
                                                            "arguments": [],
                                                            "functionName": {
                                                              "name": "returndatasize",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "31723:14:7"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "31723:16:7"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "revert",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "31713:6:7"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "31713:27:7"
                                                      },
                                                      "nodeType": "YulExpressionStatement",
                                                      "src": "31713:27:7"
                                                    }
                                                  ]
                                                },
                                                "condition": {
                                                  "arguments": [
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "cost",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "31422:4:7"
                                                        },
                                                        {
                                                          "name": "ExtraGasBuffer",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "31428:14:7"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "add",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "31418:3:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "31418:25:7"
                                                    },
                                                    {
                                                      "arguments": [],
                                                      "functionName": {
                                                        "name": "gas",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "31445:3:7"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "31445:5:7"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "lt",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "31415:2:7"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "31415:36:7"
                                                },
                                                "nodeType": "YulIf",
                                                "src": "31412:355:7"
                                              }
                                            ]
                                          },
                                          "condition": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "returndatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "28881:14:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "28881:16:7"
                                          },
                                          "nodeType": "YulIf",
                                          "src": "28878:2912:7"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "31896:1:7",
                                                "type": "",
                                                "value": "0"
                                              },
                                              {
                                                "name": "ERC1155BatchTransferGenericFailure_error_signature",
                                                "nodeType": "YulIdentifier",
                                                "src": "31924:50:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "31863:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "31863:134:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "31863:134:7"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "ERC1155BatchTransferGenericFailure_token_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "32069:44:7"
                                              },
                                              {
                                                "name": "token",
                                                "nodeType": "YulIdentifier",
                                                "src": "32115:5:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "32062:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "32062:59:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "32062:59:7"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "BatchTransfer1155Params_ids_head_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "32251:36:7"
                                              },
                                              {
                                                "name": "ConduitBatch1155Transfer_amounts_head_offset",
                                                "nodeType": "YulIdentifier",
                                                "src": "32314:44:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "32218:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "32218:163:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "32218:163:7"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "BatchTransfer1155Params_amounts_head_ptr",
                                                "nodeType": "YulIdentifier",
                                                "src": "32436:40:7"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "OneWord",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "32537:7:7"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "BatchTransfer1155Params_amounts_head_ptr",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "32581:40:7"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "32575:5:7"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "32575:47:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "32503:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "32503:146:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "32403:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "32403:269:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "32403:269:7"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "32808:1:7",
                                                "type": "",
                                                "value": "0"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "transferDataSize",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "32840:16:7"
                                                  },
                                                  {
                                                    "name": "BatchTransfer1155Params_ptr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "32858:27:7"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "32836:3:7"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "32836:50:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "32775:6:7"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "32775:134:7"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "32775:134:7"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "success",
                                          "nodeType": "YulIdentifier",
                                          "src": "28715:7:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "28708:6:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "28708:15:7"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "28705:4223:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "23026:1:7"
                                  },
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "23029:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "23023:2:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23023:10:7"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "23034:48:7",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "23053:14:7",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "23062:1:7"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "23065:1:7",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "23058:3:7"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23058:9:7"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "23053:1:7"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "22978:44:7",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "22997:10:7",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "23006:1:7",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "23001:1:7",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "22974:9969:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "FreeMemoryPointerSlot",
                                    "nodeType": "YulIdentifier",
                                    "src": "33127:21:7"
                                  },
                                  {
                                    "name": "DefaultFreeMemoryPointer",
                                    "nodeType": "YulIdentifier",
                                    "src": "33150:24:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "33120:6:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "33120:55:7"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "33120:55:7"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 1608,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "32436:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1608,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "32581:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1611,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24482:37:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1614,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24850:43:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1614,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25153:43:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1605,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "32251:36:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1620,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24572:41:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1617,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25397:38:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1602,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "23728:27:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1602,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "32858:27:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1638,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27006:44:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1638,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "32314:44:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1644,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25724:50:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1632,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22799:36:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1632,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "23794:36:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1632,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28435:36:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1635,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "26495:40:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1641,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24060:42:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1641,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25474:42:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1641,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "26644:42:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1629,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "23854:41:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1596,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "30051:11:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1596,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "30495:11:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1433,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "33150:24:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1565,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "31924:50:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1568,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "32069:44:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1496,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22854:39:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1593,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "31428:14:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1427,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "33127:21:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1653,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27691:39:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1650,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27446:36:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1650,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27628:36:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1657,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "27509:41:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1599,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "31022:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1536,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28188:23:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1530,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28017:24:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1530,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28162:24:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1527,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28043:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1533,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "28099:26:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "23585:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25812:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29246:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "29925:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1418,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "32537:7:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1421,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24330:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1421,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "24355:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1421,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "25234:8:7",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1407,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "22002:21:7",
                            "suffix": "length",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1407,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "22293:21:7",
                            "suffix": "offset",
                            "valueSize": 1
                          }
                        ],
                        "id": 1410,
                        "nodeType": "InlineAssembly",
                        "src": "21967:11219:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1403,
                    "nodeType": "StructuredDocumentation",
                    "src": "21329:433:7",
                    "text": " @dev Internal function to transfer ERC1155 tokens from a given\n      originator to a given recipient. Sufficient approvals must be set on\n      the contract performing the transfer and contract recipients must\n      implement onReceived to indicate that they are willing to accept the\n      transfer.\n @param batchTransfers The group of 1155 batch transfers to perform."
                  },
                  "id": 1412,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_performERC1155BatchTransfers",
                  "nameLocation": "21777:29:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1407,
                        "mutability": "mutable",
                        "name": "batchTransfers",
                        "nameLocation": "21853:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1412,
                        "src": "21817:50:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ConduitBatch1155Transfer[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1405,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1404,
                              "name": "ConduitBatch1155Transfer",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1036,
                              "src": "21817:24:7"
                            },
                            "referencedDeclaration": 1036,
                            "src": "21817:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConduitBatch1155Transfer_$1036_storage_ptr",
                              "typeString": "struct ConduitBatch1155Transfer"
                            }
                          },
                          "id": 1406,
                          "nodeType": "ArrayTypeName",
                          "src": "21817:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ConduitBatch1155Transfer_$1036_storage_$dyn_storage_ptr",
                            "typeString": "struct ConduitBatch1155Transfer[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21806:68:7"
                  },
                  "returnParameters": {
                    "id": 1409,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21884:0:7"
                  },
                  "scope": 1413,
                  "src": "21768:11425:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1414,
              "src": "299:32897:7",
              "usedErrors": [
                1301,
                1304,
                1317,
                1332,
                1343,
                1348
              ]
            }
          ],
          "src": "33:33165:7"
        },
        "id": 7
      },
      "contracts/lib/TokenTransferrerConstants.sol": {
        "ast": {
          "absolutePath": "contracts/lib/TokenTransferrerConstants.sol",
          "exportedSymbols": {
            "BadReturnValueFromERC20OnTransfer_error_amount_ptr": [
              1587
            ],
            "BadReturnValueFromERC20OnTransfer_error_from_ptr": [
              1581
            ],
            "BadReturnValueFromERC20OnTransfer_error_length": [
              1590
            ],
            "BadReturnValueFromERC20OnTransfer_error_sig_ptr": [
              1575
            ],
            "BadReturnValueFromERC20OnTransfer_error_signature": [
              1572
            ],
            "BadReturnValueFromERC20OnTransfer_error_to_ptr": [
              1584
            ],
            "BadReturnValueFromERC20OnTransfer_error_token_ptr": [
              1578
            ],
            "BatchTransfer1155Params_amounts_head_ptr": [
              1608
            ],
            "BatchTransfer1155Params_amounts_length_baseOffset": [
              1623
            ],
            "BatchTransfer1155Params_data_head_ptr": [
              1611
            ],
            "BatchTransfer1155Params_data_length_baseOffset": [
              1626
            ],
            "BatchTransfer1155Params_data_length_basePtr": [
              1614
            ],
            "BatchTransfer1155Params_ids_head_ptr": [
              1605
            ],
            "BatchTransfer1155Params_ids_length_offset": [
              1620
            ],
            "BatchTransfer1155Params_ids_length_ptr": [
              1617
            ],
            "BatchTransfer1155Params_ptr": [
              1602
            ],
            "ConduitBatch1155Transfer_amounts_head_offset": [
              1638
            ],
            "ConduitBatch1155Transfer_amounts_length_baseOffset": [
              1644
            ],
            "ConduitBatch1155Transfer_calldata_baseSize": [
              1647
            ],
            "ConduitBatch1155Transfer_from_offset": [
              1632
            ],
            "ConduitBatch1155Transfer_ids_head_offset": [
              1635
            ],
            "ConduitBatch1155Transfer_ids_length_offset": [
              1641
            ],
            "ConduitBatch1155Transfer_usable_head_size": [
              1629
            ],
            "CostPerWord": [
              1596
            ],
            "DefaultFreeMemoryPointer": [
              1433
            ],
            "ERC1155BatchTransferGenericFailure_error_signature": [
              1565
            ],
            "ERC1155BatchTransferGenericFailure_token_ptr": [
              1568
            ],
            "ERC1155_safeBatchTransferFrom_selector": [
              1505
            ],
            "ERC1155_safeBatchTransferFrom_signature": [
              1496
            ],
            "ERC1155_safeTransferFrom_amount_ptr": [
              1480
            ],
            "ERC1155_safeTransferFrom_data_length_offset": [
              1492
            ],
            "ERC1155_safeTransferFrom_data_length_ptr": [
              1486
            ],
            "ERC1155_safeTransferFrom_data_offset_ptr": [
              1483
            ],
            "ERC1155_safeTransferFrom_from_ptr": [
              1471
            ],
            "ERC1155_safeTransferFrom_id_ptr": [
              1477
            ],
            "ERC1155_safeTransferFrom_length": [
              1489
            ],
            "ERC1155_safeTransferFrom_sig_ptr": [
              1468
            ],
            "ERC1155_safeTransferFrom_signature": [
              1465
            ],
            "ERC1155_safeTransferFrom_to_ptr": [
              1474
            ],
            "ERC20_transferFrom_amount_ptr": [
              1458
            ],
            "ERC20_transferFrom_from_ptr": [
              1452
            ],
            "ERC20_transferFrom_length": [
              1461
            ],
            "ERC20_transferFrom_sig_ptr": [
              1449
            ],
            "ERC20_transferFrom_signature": [
              1446
            ],
            "ERC20_transferFrom_to_ptr": [
              1455
            ],
            "ERC721_transferFrom_from_ptr": [
              1514
            ],
            "ERC721_transferFrom_id_ptr": [
              1520
            ],
            "ERC721_transferFrom_length": [
              1523
            ],
            "ERC721_transferFrom_sig_ptr": [
              1511
            ],
            "ERC721_transferFrom_signature": [
              1508
            ],
            "ERC721_transferFrom_to_ptr": [
              1517
            ],
            "ExtraGasBuffer": [
              1593
            ],
            "FreeMemoryPointerSlot": [
              1427
            ],
            "Invalid1155BatchTransferEncoding_length": [
              1653
            ],
            "Invalid1155BatchTransferEncoding_ptr": [
              1650
            ],
            "Invalid1155BatchTransferEncoding_selector": [
              1657
            ],
            "MemoryExpansionCoefficient": [
              1599
            ],
            "NoContract_error_length": [
              1536
            ],
            "NoContract_error_sig_ptr": [
              1530
            ],
            "NoContract_error_signature": [
              1527
            ],
            "NoContract_error_token_ptr": [
              1533
            ],
            "OneWord": [
              1418
            ],
            "Slot0x80": [
              1436
            ],
            "Slot0xA0": [
              1439
            ],
            "Slot0xC0": [
              1442
            ],
            "ThreeWords": [
              1424
            ],
            "TokenTransferGenericFailure_error_amount_ptr": [
              1558
            ],
            "TokenTransferGenericFailure_error_from_ptr": [
              1549
            ],
            "TokenTransferGenericFailure_error_id_ptr": [
              1555
            ],
            "TokenTransferGenericFailure_error_length": [
              1561
            ],
            "TokenTransferGenericFailure_error_sig_ptr": [
              1543
            ],
            "TokenTransferGenericFailure_error_signature": [
              1540
            ],
            "TokenTransferGenericFailure_error_to_ptr": [
              1552
            ],
            "TokenTransferGenericFailure_error_token_ptr": [
              1546
            ],
            "TwoWords": [
              1421
            ],
            "ZeroSlot": [
              1430
            ]
          },
          "id": 1658,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1415,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:8"
            },
            {
              "constant": true,
              "id": 1418,
              "mutability": "constant",
              "name": "OneWord",
              "nameLocation": "1843:7:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "1826:31:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1416,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1826:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783230",
                "id": 1417,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1853:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "0x20"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1421,
              "mutability": "constant",
              "name": "TwoWords",
              "nameLocation": "1877:8:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "1860:32:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1419,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1860:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783430",
                "id": 1420,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1888:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_64_by_1",
                  "typeString": "int_const 64"
                },
                "value": "0x40"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1424,
              "mutability": "constant",
              "name": "ThreeWords",
              "nameLocation": "1912:10:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "1895:34:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1422,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1895:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783630",
                "id": 1423,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1925:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_96_by_1",
                  "typeString": "int_const 96"
                },
                "value": "0x60"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1427,
              "mutability": "constant",
              "name": "FreeMemoryPointerSlot",
              "nameLocation": "1951:21:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "1934:45:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1425,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1934:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783430",
                "id": 1426,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1975:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_64_by_1",
                  "typeString": "int_const 64"
                },
                "value": "0x40"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1430,
              "mutability": "constant",
              "name": "ZeroSlot",
              "nameLocation": "1999:8:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "1982:32:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1428,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1982:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783630",
                "id": 1429,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2010:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_96_by_1",
                  "typeString": "int_const 96"
                },
                "value": "0x60"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1433,
              "mutability": "constant",
              "name": "DefaultFreeMemoryPointer",
              "nameLocation": "2034:24:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2017:48:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1431,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2017:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 1432,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2061:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1436,
              "mutability": "constant",
              "name": "Slot0x80",
              "nameLocation": "2087:8:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2070:32:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1434,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2070:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 1435,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2098:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1439,
              "mutability": "constant",
              "name": "Slot0xA0",
              "nameLocation": "2122:8:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2105:32:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1437,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2105:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 1438,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2133:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1442,
              "mutability": "constant",
              "name": "Slot0xC0",
              "nameLocation": "2157:8:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2140:32:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1440,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2140:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 1441,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2168:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1446,
              "mutability": "constant",
              "name": "ERC20_transferFrom_signature",
              "nameLocation": "2263:28:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2246:124:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1443,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2246:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307832336238373264643030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 1444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2301:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_16156842317565293874272834530371880720966471053262404558597773956279093428224_by_1",
                      "typeString": "int_const 1615...(69 digits omitted)...8224"
                    },
                    "value": "0x23b872dd00000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 1445,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "2294:76:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_16156842317565293874272834530371880720966471053262404558597773956279093428224_by_1",
                  "typeString": "int_const 1615...(69 digits omitted)...8224"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1449,
              "mutability": "constant",
              "name": "ERC20_transferFrom_sig_ptr",
              "nameLocation": "2390:26:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2373:49:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1447,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2373:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 1448,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2419:3:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1452,
              "mutability": "constant",
              "name": "ERC20_transferFrom_from_ptr",
              "nameLocation": "2442:27:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2425:51:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1450,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2425:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 1451,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2472:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1455,
              "mutability": "constant",
              "name": "ERC20_transferFrom_to_ptr",
              "nameLocation": "2496:25:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2479:49:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1453,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2479:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 1454,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2524:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1458,
              "mutability": "constant",
              "name": "ERC20_transferFrom_amount_ptr",
              "nameLocation": "2548:29:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2531:53:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1456,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2531:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 1457,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2580:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1461,
              "mutability": "constant",
              "name": "ERC20_transferFrom_length",
              "nameLocation": "2604:25:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2587:49:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1459,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2587:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 1460,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2632:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1465,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_signature",
              "nameLocation": "2780:34:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2763:130:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1462,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2763:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307866323432343332613030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2824:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_109576784812748834340197573905731726730118698833493337707389013487240318287872_by_1",
                      "typeString": "int_const 1095...(70 digits omitted)...7872"
                    },
                    "value": "0xf242432a00000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 1464,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "2817:76:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_109576784812748834340197573905731726730118698833493337707389013487240318287872_by_1",
                  "typeString": "int_const 1095...(70 digits omitted)...7872"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1468,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_sig_ptr",
              "nameLocation": "2913:32:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2896:55:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1466,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2896:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 1467,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2948:3:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1471,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_from_ptr",
              "nameLocation": "2971:33:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "2954:57:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1469,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2954:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 1470,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3007:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1474,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_to_ptr",
              "nameLocation": "3031:31:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3014:55:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1472,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3014:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 1473,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3065:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1477,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_id_ptr",
              "nameLocation": "3089:31:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3072:55:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1475,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3072:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 1476,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3123:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1480,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_amount_ptr",
              "nameLocation": "3147:35:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3130:59:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1478,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3130:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 1479,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3185:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1483,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_data_offset_ptr",
              "nameLocation": "3209:40:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3192:64:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1481,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3192:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 1482,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3252:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1486,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_data_length_ptr",
              "nameLocation": "3276:40:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3259:64:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1484,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3259:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786134",
                "id": 1485,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3319:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_164_by_1",
                  "typeString": "int_const 164"
                },
                "value": "0xa4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1489,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_length",
              "nameLocation": "3343:31:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3326:55:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1487,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3326:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786334",
                "id": 1488,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3377:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_196_by_1",
                  "typeString": "int_const 196"
                },
                "value": "0xc4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1492,
              "mutability": "constant",
              "name": "ERC1155_safeTransferFrom_data_length_offset",
              "nameLocation": "3422:43:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3405:67:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1490,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3405:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 1491,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3468:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1496,
              "mutability": "constant",
              "name": "ERC1155_safeBatchTransferFrom_signature",
              "nameLocation": "3604:39:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3587:135:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1493,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3587:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307832656232633264363030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3653:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_21122234520580670415450416725259358303340482176740656504059893016123987197952_by_1",
                      "typeString": "int_const 2112...(69 digits omitted)...7952"
                    },
                    "value": "0x2eb2c2d600000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 1495,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "3646:76:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_21122234520580670415450416725259358303340482176740656504059893016123987197952_by_1",
                  "typeString": "int_const 2112...(69 digits omitted)...7952"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1505,
              "mutability": "constant",
              "name": "ERC1155_safeBatchTransferFrom_selector",
              "nameLocation": "3743:38:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3727:121:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              },
              "typeName": {
                "id": 1497,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "3727:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "value": {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 1502,
                        "name": "ERC1155_safeBatchTransferFrom_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1496,
                        "src": "3805:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3797:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 1500,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3797:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3797:48:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  ],
                  "id": 1499,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "ElementaryTypeNameExpression",
                  "src": "3784:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_bytes4_$",
                    "typeString": "type(bytes4)"
                  },
                  "typeName": {
                    "id": 1498,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3784:6:8",
                    "typeDescriptions": {}
                  }
                },
                "id": 1504,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "3784:64:8",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1508,
              "mutability": "constant",
              "name": "ERC721_transferFrom_signature",
              "nameLocation": "3870:29:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3853:77:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1506,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3853:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "id": 1507,
                "name": "ERC20_transferFrom_signature",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1446,
                "src": "3902:28:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1511,
              "mutability": "constant",
              "name": "ERC721_transferFrom_sig_ptr",
              "nameLocation": "3950:27:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3933:50:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1509,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3933:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 1510,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3980:3:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1514,
              "mutability": "constant",
              "name": "ERC721_transferFrom_from_ptr",
              "nameLocation": "4003:28:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "3986:52:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1512,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3986:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 1513,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4034:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1517,
              "mutability": "constant",
              "name": "ERC721_transferFrom_to_ptr",
              "nameLocation": "4058:26:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "4041:50:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1515,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4041:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 1516,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4087:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1520,
              "mutability": "constant",
              "name": "ERC721_transferFrom_id_ptr",
              "nameLocation": "4111:26:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "4094:50:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1518,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4094:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 1519,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4140:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1523,
              "mutability": "constant",
              "name": "ERC721_transferFrom_length",
              "nameLocation": "4164:26:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "4147:50:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1521,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4147:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 1522,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4193:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1527,
              "mutability": "constant",
              "name": "NoContract_error_signature",
              "nameLocation": "4291:26:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "4274:122:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1524,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4274:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307835663135643637323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4327:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_43008304450922786202210492095377626797441506865803949691986084171659119427584_by_1",
                      "typeString": "int_const 4300...(69 digits omitted)...7584"
                    },
                    "value": "0x5f15d67200000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 1526,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "4320:76:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_43008304450922786202210492095377626797441506865803949691986084171659119427584_by_1",
                  "typeString": "int_const 4300...(69 digits omitted)...7584"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1530,
              "mutability": "constant",
              "name": "NoContract_error_sig_ptr",
              "nameLocation": "4416:24:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "4399:47:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1528,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4399:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 1529,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4443:3:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1533,
              "mutability": "constant",
              "name": "NoContract_error_token_ptr",
              "nameLocation": "4466:26:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "4449:49:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1531,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4449:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307834",
                "id": 1532,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4495:3:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1536,
              "mutability": "constant",
              "name": "NoContract_error_length",
              "nameLocation": "4518:23:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "4501:47:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1534,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4501:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 1535,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4544:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1540,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_signature",
              "nameLocation": "4700:43:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "4683:139:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1537,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4683:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307866343836626338373030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 1538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4753:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_110602393728903298954583666965654358082204038726121260616145960492056870649856_by_1",
                      "typeString": "int_const 1106...(70 digits omitted)...9856"
                    },
                    "value": "0xf486bc8700000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 1539,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "4746:76:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_110602393728903298954583666965654358082204038726121260616145960492056870649856_by_1",
                  "typeString": "int_const 1106...(70 digits omitted)...9856"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1543,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_sig_ptr",
              "nameLocation": "4842:41:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "4825:64:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1541,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4825:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 1542,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4886:3:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1546,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_token_ptr",
              "nameLocation": "4909:43:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "4892:66:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1544,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4892:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307834",
                "id": 1545,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4955:3:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1549,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_from_ptr",
              "nameLocation": "4978:42:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "4961:66:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1547,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4961:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 1548,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5023:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1552,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_to_ptr",
              "nameLocation": "5047:40:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "5030:64:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1550,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5030:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 1551,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5090:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1555,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_id_ptr",
              "nameLocation": "5114:40:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "5097:64:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1553,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5097:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 1554,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5157:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1558,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_amount_ptr",
              "nameLocation": "5181:44:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "5164:68:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1556,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5164:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 1557,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5228:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1561,
              "mutability": "constant",
              "name": "TokenTransferGenericFailure_error_length",
              "nameLocation": "5276:40:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "5259:64:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1559,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5259:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786134",
                "id": 1560,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5319:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_164_by_1",
                  "typeString": "int_const 164"
                },
                "value": "0xa4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1565,
              "mutability": "constant",
              "name": "ERC1155BatchTransferGenericFailure_error_signature",
              "nameLocation": "5345:50:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "5328:146:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1562,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5328:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307861666334343565323030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5405:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_79501532840214056618875980936328268319366216792329069890481479576950077915136_by_1",
                      "typeString": "int_const 7950...(69 digits omitted)...5136"
                    },
                    "value": "0xafc445e200000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 1564,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "5398:76:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_79501532840214056618875980936328268319366216792329069890481479576950077915136_by_1",
                  "typeString": "int_const 7950...(69 digits omitted)...5136"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1568,
              "mutability": "constant",
              "name": "ERC1155BatchTransferGenericFailure_token_ptr",
              "nameLocation": "5494:44:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "5477:68:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1566,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5477:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 1567,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5541:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1572,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_signature",
              "nameLocation": "5679:49:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "5662:145:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1569,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5662:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307839383839313932333030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5738:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_68993784519787932800265262788752310095870803544120403744274516456007463337984_by_1",
                      "typeString": "int_const 6899...(69 digits omitted)...7984"
                    },
                    "value": "0x9889192300000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 1571,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "5731:76:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68993784519787932800265262788752310095870803544120403744274516456007463337984_by_1",
                  "typeString": "int_const 6899...(69 digits omitted)...7984"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1575,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
              "nameLocation": "5827:47:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "5810:70:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1573,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5810:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307830",
                "id": 1574,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5877:3:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1578,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_token_ptr",
              "nameLocation": "5900:49:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "5883:72:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1576,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5883:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "307834",
                "id": 1577,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5952:3:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1581,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_from_ptr",
              "nameLocation": "5975:48:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "5958:72:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1579,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5958:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 1580,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6026:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1584,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_to_ptr",
              "nameLocation": "6050:46:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6033:70:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1582,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6033:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 1583,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6099:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1587,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_amount_ptr",
              "nameLocation": "6123:50:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6106:74:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1585,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6106:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783634",
                "id": 1586,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6176:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "0x64"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1590,
              "mutability": "constant",
              "name": "BadReturnValueFromERC20OnTransfer_error_length",
              "nameLocation": "6224:46:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6207:70:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1588,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6207:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 1589,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6273:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1593,
              "mutability": "constant",
              "name": "ExtraGasBuffer",
              "nameLocation": "6299:14:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6282:38:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1591,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6282:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783230",
                "id": 1592,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6316:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "0x20"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1596,
              "mutability": "constant",
              "name": "CostPerWord",
              "nameLocation": "6340:11:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6323:32:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1594,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6323:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "33",
                "id": 1595,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6354:1:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1599,
              "mutability": "constant",
              "name": "MemoryExpansionCoefficient",
              "nameLocation": "6375:26:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6358:51:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1597,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6358:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "3078323030",
                "id": 1598,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6404:5:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_512_by_1",
                  "typeString": "int_const 512"
                },
                "value": "0x200"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1602,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ptr",
              "nameLocation": "6539:27:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6522:51:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1600,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6522:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783234",
                "id": 1601,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6569:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "0x24"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1605,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ids_head_ptr",
              "nameLocation": "6593:36:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6576:60:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1603,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6576:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783434",
                "id": 1604,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6632:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_68_by_1",
                  "typeString": "int_const 68"
                },
                "value": "0x44"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1608,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_amounts_head_ptr",
              "nameLocation": "6656:40:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6639:64:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1606,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6639:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783834",
                "id": 1607,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6699:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_132_by_1",
                  "typeString": "int_const 132"
                },
                "value": "0x84"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1611,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_data_head_ptr",
              "nameLocation": "6723:37:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6706:61:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1609,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6706:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786134",
                "id": 1610,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6763:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_164_by_1",
                  "typeString": "int_const 164"
                },
                "value": "0xa4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1614,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_data_length_basePtr",
              "nameLocation": "6787:43:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6770:68:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1612,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6770:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "3078313034",
                "id": 1613,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6833:5:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_260_by_1",
                  "typeString": "int_const 260"
                },
                "value": "0x104"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1617,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ids_length_ptr",
              "nameLocation": "6860:38:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6843:62:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1615,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6843:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786334",
                "id": 1616,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6901:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_196_by_1",
                  "typeString": "int_const 196"
                },
                "value": "0xc4"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1620,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_ids_length_offset",
              "nameLocation": "6927:41:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6910:65:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1618,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6910:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 1619,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6971:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1623,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_amounts_length_baseOffset",
              "nameLocation": "6995:49:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "6978:73:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1621,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6978:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 1622,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7047:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1626,
              "mutability": "constant",
              "name": "BatchTransfer1155Params_data_length_baseOffset",
              "nameLocation": "7071:46:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "7054:70:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1624,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7054:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786530",
                "id": 1625,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7120:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_224_by_1",
                  "typeString": "int_const 224"
                },
                "value": "0xe0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1629,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_usable_head_size",
              "nameLocation": "7146:41:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "7129:65:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1627,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7129:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 1628,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7190:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1632,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_from_offset",
              "nameLocation": "7216:36:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "7199:60:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1630,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7199:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783230",
                "id": 1631,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7255:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_32_by_1",
                  "typeString": "int_const 32"
                },
                "value": "0x20"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1635,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_ids_head_offset",
              "nameLocation": "7279:40:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "7262:64:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1633,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7262:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783630",
                "id": 1634,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7322:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_96_by_1",
                  "typeString": "int_const 96"
                },
                "value": "0x60"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1638,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_amounts_head_offset",
              "nameLocation": "7346:44:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "7329:68:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1636,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7329:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783830",
                "id": 1637,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7393:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_128_by_1",
                  "typeString": "int_const 128"
                },
                "value": "0x80"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1641,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_ids_length_offset",
              "nameLocation": "7417:42:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "7400:66:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1639,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7400:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786130",
                "id": 1640,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7462:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_160_by_1",
                  "typeString": "int_const 160"
                },
                "value": "0xa0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1644,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_amounts_length_baseOffset",
              "nameLocation": "7486:50:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "7469:74:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1642,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7469:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 1643,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7539:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1647,
              "mutability": "constant",
              "name": "ConduitBatch1155Transfer_calldata_baseSize",
              "nameLocation": "7563:42:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "7546:66:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1645,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7546:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30786330",
                "id": 1646,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7608:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_192_by_1",
                  "typeString": "int_const 192"
                },
                "value": "0xc0"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1650,
              "mutability": "constant",
              "name": "Invalid1155BatchTransferEncoding_ptr",
              "nameLocation": "7634:36:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "7617:60:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1648,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7617:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783030",
                "id": 1649,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7673:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_0_by_1",
                  "typeString": "int_const 0"
                },
                "value": "0x00"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1653,
              "mutability": "constant",
              "name": "Invalid1155BatchTransferEncoding_length",
              "nameLocation": "7697:39:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "7680:63:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1651,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7680:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "hexValue": "30783034",
                "id": 1652,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7739:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4_by_1",
                  "typeString": "int_const 4"
                },
                "value": "0x04"
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 1657,
              "mutability": "constant",
              "name": "Invalid1155BatchTransferEncoding_selector",
              "nameLocation": "7763:41:8",
              "nodeType": "VariableDeclaration",
              "scope": 1658,
              "src": "7746:137:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 1654,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7746:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "components": [
                  {
                    "hexValue": "307865626132303834633030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
                    "id": 1655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7814:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_106579805904488420557082595712554375541441034432625840267987479138441579462656_by_1",
                      "typeString": "int_const 1065...(70 digits omitted)...2656"
                    },
                    "value": "0xeba2084c00000000000000000000000000000000000000000000000000000000"
                  }
                ],
                "id": 1656,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "7807:76:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_106579805904488420557082595712554375541441034432625840267987479138441579462656_by_1",
                  "typeString": "int_const 1065...(70 digits omitted)...2656"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "33:7853:8"
        },
        "id": 8
      }
    }
  }
}
